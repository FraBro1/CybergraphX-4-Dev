@database "XiPaint_E_AG.guide"

@author "Thomas Dorn & Herbert Beilschmidt"
@(c) "Copyright © 1995 Thomas Dorn & Herbert Beilschmidt"
@$VER: XiPaint_E_AG.guide 4.0 (19/03/96)

@node main "Manual"
@toc "contents"

@font helvetica.font 18

			       @{b} @{fg highlight} Xi-Paint  4.0 @{fg text} @{ub}

				Thomas Dorn
			    Herbert Beilschmidt

				 August 1995
				 März   1996


			       @{" ReadMe first " system "Run >NIL: <NIL: AmigaGuide readme_e.guide"}

				 @{" Manual  3.0 " link "contents"}

			  @{" Changes  3.0 -> 3.2" system "Run >NIL: <NIL: AmigaGuide xp-diff32_e.guide"}

			  @{" Changes  3.2 -> 4.0" system "Run >NIL: <NIL: AmigaGuide xp-diff40_e.guide"}

@endnode

@node contents "Contents"
@toc "contents"


   @{b}@{fg highlight}Contents  @{ub}@{fg text}


   @{" 1   Introduction " link "k1"}

   @{" 2   The Authors " link "k2"}

   @{" 3   Installation " link "k3"}
       @{" 3.1   System Settings " link "k3p1"}
       @{" 3.2   Setting of the graphic adapter " link "k3p2"}
       @{" 3.3   Minimum Memory Amount " link "k3p3"}
       @{" 3.4   Menus " link "k3p4"}

   @{" 4   Basics for 24 Bit Drawing " link "k4"}
       @{" 4.1   Introduction " link "k4p1"}

   @{" 5   Basics " link "k5"}
       @{" 5.1   The Xi-Paint Window " link "k5p1"}
	    @{" 5.1.1   The Windows Utilization " link "k5p1p1"}
	    @{" 5.1.2   Sizing Windows " link "k5p1p2"}
	    @{" 5.1.3   Window Width " link "k5p1p3"}
	    @{" 5.1.4   Scrolling " link "k5p1p4"}
	    @{" 5.1.5   Closing Windows " link "k5p1p5"}
       @{" 5.2  Using the Menus " link "k5p2"}
	    @{" 5.2.1   Available Options are Activated " link "k5p2p1"}
       @{" 5.3   Text Input Boxes " link "k5p3"}
       @{" 5.4   The Scrollers " link "k5p4"}

   @{" 6   First Steps " link "k6"}
       @{" 6.1   Opening a New Worksheet " link "k6p1"}
	    @{" 6.1.1   Setting the Size " link "k6p1p1"}
       @{" 6.2  Important Drawing Functions " link "k6p2"}
	    @{" 6.2.1   A House Made of Rectangles and Lines " link "k6p2p1"}
	    @{" 6.2.2   Correcting a Mistake by UNDO " link "k6p2p2"}
	    @{" 6.2.3   Precise Mouse Control by Keyboard " link "k6p2p3"}
	    @{" 6.2.4   Saving the Project " link "k6p2p4"}

   @{" 7   To Work with Colors " link "k7"}
       @{" 7.1   The Colorbox " link "k7p1"}
	    @{" 7.1.1   The Perfect Colorhues for our Painting " link "k7p1p1"}
       @{" 7.2   Filling a Painting " link "k7p2"}
       @{" 7.3   Saving the Palette " link "k7p3"}


   @{" 8   Creating and Managing Brushes " link "k8"}
       @{" 8.1   Cut Out a Brush " link "k8p1"}
	    @{" 8.1.1   Individual Objects as Basics " link "k8p1p1"}
	    @{" 8.1.2   Cutting Out the Brush " link "k8p1p2"}
       @{" 8.2   Masking a Brush " link "k8p2"}


   @{" 9   Working with Brushes " link "k9"}
       @{" 9.1   A Tube System of Tasks " link "k9p1"}
	    @{" 9.1.1   Shades in the Color Requester " link "k9p1p1"}
	    @{" 9.1.2   Making Your Work Easier by Brush Manipulation " link "k9p1p2"}
       @{" 9.2   The Grid as Position Help " link "k9p2"}
	    @{" 9.2.1   The Brush Manager " link "k9p2p1"}
       @{" 9.3   Multiple Brushes " link "k9p3"}
	    @{" 9.3.1   How the Brush Manager Works " link "k9p3p1"}
	    @{" 9.3.2   Composing the Tube System Puzzle " link "k9p3p2"}

   @{" 10  Cycle and Shade in Practice " link "k10"}
       @{" 10.1  Cycled Colors " link "k10p1"}
	    @{" 10.1.1  The Working Method of Cycle " link "k10p1p1"}
	    @{" 10.1.2  The Cycle in Practice " link "k10p1p2"}
	    @{" 10.1.3  Offset Setting for Exact Cycle Adjusment " link "k10p1p3"}
       @{" 10.2   Cycling in Practice " link "k10p2"}
	    @{" 10.2.1  A Frame " link "k10p2p1"}
	    @{" 10.2.2  Color Bars " link "k10p2p2"}
	    @{" 10.2.3  Vertical and Diagonal Stripes " link "k10p2p3"}
	    @{" 10.2.4  Shades " link "k10p2p4"}
	    @{" 10.2.5  Choice of Shades " link "k10p2p5"}
	    @{" 10.2.6  5 Point Shades for Special Effects " link "k10p2p6"}

   @{" 11  Special Effects with Brushes " link "k11"}
       @{" 11.1  The Proof of the Pudding " link "k11p1"}
	    @{" 11.1.1  A Multicolored Rectangle for Our Experiments " link "k11p1p1"}
	    @{" 11.1.2  Finishing Touches " link "k11p1p2"}
       @{" 11.2 The Related Theory " link "k11p2"}
	    @{" 11.2.1  Understanding Area Filling " link "k11p2p1"}
       @{" 11.3  Some Tips " link "k11p3"}
	    @{" 11.3.1  Getting Experience " link "k11p3p1"}
       @{" 11.4  New Shapes Using Brushes " link "k11p4"}
	    @{" 11.4.1  A Rectangle with Rounded Corners " link "k11p4p1"}
	    @{" 11.4.2  A Frame Instead of the Filled Rectangle " link "k11p4p2"}
	    @{" 11.4.3  A Rectangle with Sloped Edges " link "k11p4p3"}
       @{" 11.5  Escaping a Running Routine " link "k11p5"}

   @{" 12  Working with Fonts " link "k12"}
       @{" 12.1  Text with Shade " link "k12p1"}
	    @{" 12.1.1  Shades for Individual Letters " link "k12p1p1"}
       @{" 12.2  Scripts and Brushes " link "k12p2"}
	    @{" 12.2.1  Dealing With Text " link "k12p2p1"}
       @{" 12.3  New Script Styles " link "k12p3"}
	    @{" 12.3.1  Letters with Rounded off or Sloped Corners " link "k12p3p1"}

   @{" 13  Mask " link "k13"}
       @{" 13.1  Painting on the Mask " link "k13p1"}
       @{" 13.2  Mask-Preview " link "k13p2"}
       @{" 13.3  Exempt Motives " link "k13p3"}
	    @{" 13.3.1  The Color Look Up Table " link "k13p3p1"}

   @{" 14  Layers " link "k14"}

       @{" 14.1  Compositions with Layers " link "k14p1"}
       @{" 14.2  The Theory " link "k14p2"}
       @{" 14.3  Another example for using the layers " link "k14p3"}

   @{" 15  The Painting Tools " link "k15"}
       @{" 15.1  Two-Part Buttons " link "k15p1"}
       @{" 15.2  The Single Point Manner (Freehand tool) " link "k15p2"}
       @{" 15.3  Regular Freehand Tool " link "k15p3"}
       @{" 15.4  Filled Freehand Outlines " link "k15p4"}
       @{" 15.5  Straight Line Tool " link "k15p5"}
       @{" 15.6  Curve Tool " link "k15p6"}
       @{" 15.7  Rectangle Tool " link "k15p7"}
       @{" 15.8  Ellipse Tool " link "k15p8"}
       @{" 15.9  Polygon Tool " link "k15p9"}
	    @{" 15.9.1  Closing the Polygon " link "k15p9p1"}
       @{" 15.10 Filling Tool " link "k15p10"}

   @{" 16  More Aids " link "k16"}
       @{" 16.1  Take a Rectangular Brush " link "k16p1"}
       @{" 16.2  Take a Polygonal Brush " link "k16p2"}
       @{" 16.3  Take a Freehand Brush " link "k16p3"}
       @{" 16.4  Light Table " link "k16p4"}
       @{" 16.5  Magnifier " link "k16p5"}
	    @{" 16.5.1  Flexible Settings in the Zoom-Requester " link "k16p5p1"}
       @{" 16.6  Text " link "k16p6"}
       @{" 16.7  Undo " link "k16p7"}
	    @{" 16.7.1  Undo for a Large Number of Steps " link "k16p7p1"}
	    @{" 16.7.2  To Free Undo Memory " link "k16p7p2"}
       @{" 16.8  Redo " link "k16p8"}
       @{" 16.9  Help " link "k16p9"}
       @{" 16.10 Erase " link "k16p10"}
       @{" 16.11 Take a Pen " link "k16p11"}
	    @{" 16.11.1 Sizing Brushes by Mouseclick " link "k16p11p1"}
       @{" 16.12  Generate a One Point Pen " link "k16p12"}
       @{" 16.13  Info " link "k16p13"}


   @{" 17  Requesters " link "k17"}
	    @{" 17.0.1  Common Elements of the Different Requesters " link "k17p0p1"}
       @{" 17.1  Brush Requester " link "k17p1"}
	    @{" 17.1.1  Automatic Adaption of the Scale " link "k17p1p1"}
	    @{" 17.1.2  Brush Menu " link "k17p1p2"}
	    @{" 17.1.3  Save " link "k17p1p3"}
	    @{" 17.1.4  Delete (from brush pool) " link "k17p1p4"}
	    @{" 17.1.5  Swap to Disk " link "k17p1p5"}
	    @{" 17.1.6  Refreshing " link "k17p1p6"}
	    @{" 17.1.7  Delete " link "k17p1p7"}
       @{" 17.2  Grid requester " link "k17p2"}
       @{" 17.3  File Requester " link "k17p3"}
	    @{" 17.3.1  The File Directory " link "k17p3p1"}
	    @{" 17.3.2  How to Change Directories and Drives " link "k17p3p2"}
	    @{" 17.3.3  Manual Input of a Path " link "k17p3p3"}
	    @{" 17.3.4  Minipic Menu " link "k17p3p4"}
	    @{" 17.3.5  Store-Format Menu " link "k17p3p5"}
	    @{" 17.3.6  Alpha " link "k17p3p6"}
       @{" 17.4  Shadow Requester " link "k17p4"}
	    @{" 17.4.1  Setting the Shadow Length " link "k17p4p1"}
       @{" 17.5  Cycle Requester " link "k17p5"}
	    @{" 17.5.1  Generation of a Cycle " link "k17p5p1"}
	    @{" 17.5.2  Offset " link "k17p5p2"}
       @{" 17.6  Shade Requester " link "k17p6"}
	    @{" 17.6.1  Two Colors, Horizontal " link "k17p6p1"}
	    @{" 17.6.2  Two Colors, Vertical " link "k17p6p2"}
	    @{" 17.6.3  Three Colors, Two on Bottom " link "k17p6p3"}
	    @{" 17.6.4  Four Colors " link "k17p6p4"}
	    @{" 17.6.5  Five Colors " link "k17p6p5"}
       @{" 17.7  Style Requester " link "k17p7"}
	    @{" 17.7.1  Choosing a Style " link "k17p7p1"}
	    @{" 17.7.2  Color Fonts " link "k17p7p2"}
	    @{" 17.7.3  Minipics for Fonts " link "k17p7p3"}
	    @{" 17.7.4  Setting the Size " link "k17p7p4"}
	    @{" 17.7.5  Xdpi and Ydpi for Picture Proportions " link "k17p7p5"}
	    @{" 17.7.6  Antialiasing for Soft edges " link "k17p7p6"}
       @{" 17.8  Setting Requester " link "k17p8"}
	    @{" 17.8.1  Setting the System Fonts " link "k17p8p1"}
	    @{" 17.8.2  Number of Brushes and Pens " link "k17p8p2"}
	    @{" 17.8.3  To Set Standard Directories " link "k17p8p3"}
	    @{" 17.8.4  Local Mode " link "k17p8p4"}
	    @{" 17.8.5  Click to Front " link "k17p8p5"}
	    @{" 17.8.6  Eat first Click " link "k17p8p6"}
	    @{" 17.8.7  Saving Settings and Leaving the Program " link "k17p8p7"}
	    @{" 17.8.8  Set the Path for Macros " link "k17p8p8"}
	    @{" 17.8.9  ASL- or Xi-Paint File Requester " link "k17p8p9"}
	    @{" 17.8.10 Way of Showing Brushes " link "k17p8p10"}
	    @{" 17.8.11 Painting without moving the mouse " link "k17p8p11"}
	    @{" 17.8.12 Delete mouse moves " link "k17p8p12"}
	    @{" 17.8.13 Hot Spot " link "k17p8p13"}
       @{" 17.9  Parameter-Requester " link "k17p9"}
	    @{" 17.9.1  Anti-Aliasing " link "k17p9p1"}
	    @{" 17.9.2  Fast Fill " link "k17p9p2"}
	    @{" 17.9.3  Keep Mask " link "k17p9p3"}
	    @{" 17.9.4  pixel stream " link "k17p9p4"}
	    @{" 17.9.5  1-Pixel-stream " link "k17p9p5"}
	    @{" 17.9.6  brightness, darkness " link "k17p9p6"}
       @{" 17.10 VLab Requester " link "k17p10"}
	    @{" 17.10.1 Requirements for Working with VLab " link "k17p10p1"}
	    @{" 17.10.2 Video Offset " link "k17p10p2"}
	    @{" 17.10.3 Width and Height of the Picture " link "k17p10p3"}
	    @{" 17.10.4 Choosing the Input Signal " link "k17p10p4"}
	    @{" 17.10.5 Grabbing a Video Picture " link "k17p10p5"}
	    @{" 17.10.6 VLAB Menu " link "k17p10p6"}
       @{" 17.11 Palette Requester " link "k17p11"}
	    @{" 17.11.1 Colors for Working " link "k17p11p1"}
	    @{" 17.11.2 Color Mix Methods " link "k17p11p2"}
	    @{" 17.11.3 Copy, Changing and Shade " link "k17p11p3"}
	    @{" 17.11.4 Taking a Color " link "k17p11p4"}
	    @{" 17.11.5 RGB Triangle by Maxwell " link "k17p11p5"}
	    @{" 17.11.6 HSV Scheme " link "k17p11p6"}
	    @{" 17.11.7 Palette Menu " link "k17p11p7"}
	    @{" 17.11.8 Load " link "k17p11p8"}
	    @{" 17.11.9 Save " link "k17p11p9"}
	    @{" 17.11.10 Scheme Menu " link "k17p11p10"}
       @{" 17.12 Macros " link "k17p12"}
	    @{" 17.12.1 Macros Using AREXX " link "k17p12p1"}
	    @{" 17.12.2 Recording Macros " link "k17p12p2"}
	    @{" 17.12.3 Playing a Macro " link "k17p12p3"}
       @{" 17.13 Mask requester " link "k17p13"}
	    @{" 17.13.1 Mask for Excepting Certain Motives " link "k17p13p1"}
	    @{" 17.13.2 A color " link "k17p13p2"}
	    @{" 17.13.3 Colorarea " link "k17p13p3"}
	    @{" 17.13.4 Colormatrix (CLUT) " link "k17p13p4"}
	    @{" 17.13.5 Saturation " link "k17p13p5"}
	    @{" 17.13.6 Contrast " link "k17p13p6"}
	    @{" 17.13.7 Addition of Several Masking Steps " link "k17p13p7"}
	    @{" 17.13.8 Manipulation of Alpha Masks " link "k17p13p8"}
       @{" 17.14 Pen Requester " link "k17p14"}
	    @{" 17.14.1 Pen Preview " link "k17p14p1"}
	    @{" 17.14.2 Generate a Pen " link "k17p14p2"}
	    @{" 17.14.3 Square Pens " link "k17p14p3"}
	    @{" 17.14.4 Circular Pens " link "k17p14p4"}
	    @{" 17.14.5 Different Kinds of Airbrushes " link "k17p14p5"}
	    @{" 17.14.6 Unicolor Circular Brushes " link "k17p14p6"}
	    @{" 17.14.7 One Point Brush " link "k17p14p7"}
	    @{" 17.14.8 Pen Menu " link "k17p14p8"}
       @{" 17.15 Zoom Requester " link "k17p15"}
	    @{" 17.15.1 Enlarging a Part of the Project " link "k17p15p1"}
	    @{" 17.15.2 Scaling Down a Part of the Project " link "k17p15p2"}
	    @{" 17.15.3 One Magnifier for Each Worksheet " link "k17p15p3"}
       @{" 17.16 Layer Requester " link "k17p16"}
	    @{" 17.16.1 The Two Lists of the Layer Requester " link "k17p16p1"}
	    @{" 17.16.2 Fixing the Order " link "k17p16p2"}
	    @{" 17.16.3 Generating a Picture Composition " link "k17p16p3"}

   @{" 18  Paint Modes " link "k18"}
       @{" 18.1  Solid " link "k18p1"}
       @{" 18.2  Background " link "k18p2"}
       @{" 18.3  Shade " link "k18p3"}
       @{" 18.4  Cycle " link "k18p4"}
       @{" 18.5  Smoothing " link "k18p5"}
       @{" 18.6  Smear " link "k18p6"}
       @{" 18.7  Tear " link "k18p7"}
       @{" 18.8  As-it-is " link "k18p8"}
       @{" 18.9  Inverse " link "k18p9"}
       @{" 18.10 Color Exchange " link "k18p10"}
       @{" 18.11 Brightness Exchange " link "k18p11"}
       @{" 18.12 Saturation Exchange " link "k18p12"}
       @{" 18.13 Darken " link "k18p13"}
       @{" 18.14 Brighten " link "k18p14"}
       @{" 18.15 Saturation + " link "k18p15"}
       @{" 18.16 Saturation - " link "k18p16"}
       @{" 18.17 Color Degree " link "k18p17"}
       @{" 18.18 Contrast + " link "k18p18"}
       @{" 18.19 Contrast - " link "k18p19"}

   @{" 19  Shortcuts " link "k19"}
	    @{" 19.0.1  Mirror at the X-axis " link "k19p0p1"}
	    @{" 19.0.2  Mirror at the Y-axis " link "k19p0p2"}
	    @{" 19.0.3  Turn Brush 90° " link "k19p0p3"}
	    @{" 19.0.4  Brush Half " link "k19p0p4"}
	    @{" 19.0.5  Brush Double " link "k19p0p5"}
	    @{" 19.0.6  Brushwidth Half " link "k19p0p6"}
	    @{" 19.0.7  Brushheight Half " link "k19p0p7"}
	    @{" 19.0.8  Brushsize Individual " link "k19p0p8"}
	    @{" 19.0.9  Turn the Brush Individual " link "k19p0p9"}
	    @{" 19.0.10 Maximum Mask for the Actual Brush " link "k19p0p10"}
	    @{" 19.0.11 Mask a Brush " link "k19p0p11"}
	    @{" 19.0.12 Switch off Masking " link "k19p0p12"}
	    @{" 19.0.13 Get Color " link "k19p0p13"}
	    @{" 19.0.14 Get a One Point Pen " link "k19p0p14"}
	    @{" 19.0.15 Get a New Pen " link "k19p0p15"}
       @{" 19.1 Moving the Mouse with Keyboard " link "k19p1"}

   @{" 20  The AREXX Interface " link "k20"}
       @{" 20.1  Table of AREXX-commands " link "k20p1"}
       @{" 20.2  Description of AREXX-Commands " link "k20p2"}
       @{" 20.3  Parameter-Tabels " link "k20p3"}
	    @{" 20.3.1  Color Modes " link "k20p3p1"}

   @{" 21  VLab " link "k21"}

   @{" 22  Load- and Save-Functions " link "k22"}

   @{" 23  The Future " link "k23"}

   @{" 24  Copyrights " link "k24"}

@endnode




@node k1 "Chapter  1"
@toc "contents"


 @{b}@{fg highlight}Chapter 1 @{ub}@{fg text}


 @{b}Introduction @{ub}


Xi-Paint is a 24 bit paint program for manipulating true color pic-
tures in 16 million plus colors. It has been written to be hardware
independent, meaning it can support special features of hardware
display devices when available. These features are described in the
appendix.

To give you a better understanding of 24 Bit graphics let's take a
look at what is involved in the creation and manipulation of these
images. A 24 bit picture with a resolution of 800 x 600 pixels is an
extremely large file and we can see this by calculating its' size in
bytes. To calculate the file size, multiply the ho rizontal resolution
by the vertical resolution times the number of bits per pixel divided
by 8 (the number of bits in a byte). Given this formula H*V*24/8
the above file would be 1,440,000 Bytes in size requiring almost 1.5
megabytes of storage. This would be true whether it is being stored
on a Hard Drive or in memory.

When you wish to work with this file Xi-Paint loads the image from
the hard drive into RAM where Xi-Paint is capable of manipulating
the image directly at high speed.  One thing you will need to re-
member is that the formula just described gives the file size in RAW
format. This means that an IFF, DEEP, ILBM or even a JPeg file
will all be smaller as they all do some form of compression.  As
you can see, for a file of 1.5 megabytes we will require at least that
much memory be available after we run Xi-Paint, or we will not be
able to load the image into Xi-Paint to work on it. What this means
for our system requirements is that we will require memory for the
Program to run (1 megabyte).

We will need memory for the image to be loaded by Xi-Paint (1.5
megabytes) and then we will also require memory to use specific
features.  To cut and use brushes you must also have at least 1
megabyte available. As you can see, when manipulating such large
images the more Ram available - the faster and more productively
you can work.

Now that you are familiar with the size of 24 bit images you can see
that there are a few considerations to be made concerning storage.
The image that we used for the example came to approximately
1.5 megabytes in size.  This image must be stored on a computer
medium other than RAM when your computer is not turned on.

Normally images of this size are stored on a hard disk connected to
the system. When purchasing such a hard drive it is important to
remember the sizes of the files you plan to use. A 40 mb hard drive
would be insufficient for storing programs and the data you create
with them. You will quickly run out of room on such a small hard
drive. If you intend to do animation in 24 bit then you will require
a very large storage device and should look at drives 500 megabytes
and larger.

The last thing to under stand is file compression. The image used
for the example was in RAW format.  Most file formats available
for the Amiga include some form of compression, This com pression
enables you to store large amounts of information in smaller areas
and to make more efficient use of your hard drive. It is important
to realize that image com pression will not help with the amount
of RAM needed as the image is not compres sed when it is being
worked on in Xi-Paint.

A few of these formats are IFF, ILBM, DEEP, JPeg, and others.
For you to have access to all these image formats you must have
a conversion program such as ADPro from ASDG. WhileXi-Paint
in corporates the IFF and the JPeg file formats we suggest you
startwith the IFF format. This will compress your images approxi-
mately 30while capable of tremendous compression ratios, is a lossy
compression. This me ans that image quality may be sacrificed for
compression.  You should play with the JPeg format to determine
its usefulness for your particular purpose.

Xi-Paint is fully compatible with all versions of AmigaDOS 2.0 or
higher and will not run under AmigaOS 1.3 or previous versions of
the AmigaOS. Xi-Paint is compatible with most IFF formats inclu-
ding 8 and 24 bit. Xi-Paint is also capable of rendering all AMIGA-
DOS 2.0 and above compatible outline fonts. The ability to use all
AmigaOS compatible fonts sets gives you access to high quality out
line fonts from several third parties such as Soft Logic and Gold
Disk. Many hours have been spent on the creation of this program
and manual. While we have endea voured to create the most error
free software package available - inevitably some things do get by.
If you experience any problems/bugs or find errors in the manual
we would appreciate your comments.

@endnode



@node k2 "Chapter  2"
@toc "contents"


 @{b}@{fg highlight}Chapter 2 @{ub}@{fg text}


 @{b}The  Authors@{ub}


If you have questions about Xi-Paint - please contact us.  Write a
letter to:

   Thomas Dorn
   A-1210 Vienna
   Kerpengasse 69
   AUSTRIA

or write a note via internet to:

   tdorn@xipaint.co.at

or contact via Fido:

   2:310/98.0

or call my mailbox (Xi-PaintBBS)

   ++43-1-2714549

or simply send a FAX:

   ++43-1-2714549.

Thanks to the following people:

   Axel Bruns           Michael Hermann
   Wolf Faust           Henning Friedl
   Oliver Müller        Reinhard Pössinger
   Jürgen Schober       Rolf Stegemann
   Peter Stegemann      Hartwig Tauber
   Rolf Tingler         Tamara Trenkler
   Karl Wundsam         Peter Wlcek
   and Erich Frotzler for the paintings.

@endnode



@node k3 "Chapter  3"
@toc "contents"


 @{b}@{fg highlight}Chapter  3  @{ub}@{fg text}


 @{b}Installation @{ub}


It is very easy to install Xi-Paint.  Open the window of the hard
disk or the table of contents to which Xi-Paint should be copied.
Now open the table of contents of the Xi-Paint disk.  There you
find the Xi-Paint drawer which you simply drag, while pressing the
left mouse button, to the previous opened window.  Now release
the mouse button and all necessary files are copied. Make sure that
your hard disk provides at least 1 MB of free disk space. Otherwise
Xi-Paint will not be completely installed. If this occurs, you will get
a message. After successful installation you will find the  Xi-Paint
drawer in the selected directory.  It contains all the necessary files
you need for using Xi-Paint.

  @{" 3.1   System Settings " link "k3p1"}
  @{" 3.2   Setting of the graphic adapter " link "k3p2"}
  @{" 3.3   Minimum Memory Amount " link "k3p3"}
  @{" 3.4   Menus " link "k3p4"}

@endnode

@node k3p1 "System Settings"
@toc "contents"


 @{b}3.1     System Settings @{ub}


Before using Xi-Paint the parameters of your system configuration
have to be set. In the Xi-Paint drawer you will find a program cal-
led Xi-Prefs which enables you to fix the important system settings.
These settings have to be fixed by a particular pro gram because it
is necessary for Xi-Paint to know them before its first start. Other-
wise it could be impossible to start Xi-Paint at all.  Activate this
"presetter" Xi-Prefs by double mouseclicking.  A requester, which
offers the setting possibilities (compare screenshot), will open. The
most important setting is for your graphic adapter.  Hope fully
you're using the Retina, but Xi-Paint supports most other 24-Bit
graphic adapters and contains, depending on the version you use,
the respective number of drivers.

@endnode


@node k3p2 "Setting of the graphic adapter"
@toc "contents"


 @{b}3.2     Setting of the graphic adapter @{ub}


The available output drivers are shown in the "available graphic
adapters" catalogue.  Choose the one your computer uses with a
double left button mouseclick. A new window appears which shows
all possible resolutions.  You can choose the one which you want
Xi-Paint to use.

This setting can be changed whenever you want, so you can try
different resolutions.  To change the chosen resolution just click
the "choose display" button.  The window opens again and you
can choose the desired resolution.  Right beside the catalouge of
available graphic adapters there is an info box, which tells you the
current settings.  Beside "card" you'll find the name of the chosen
graphics adapter.

Below is the information about the chosen resolution and color
depth. The remaining info tells you the internal card display num-
ber which is not necessary for common use.  Notice that Xi-Paint
always shows, in the catalogue of available graphic adapters, all
available drivers and not just the one you use.

	 @{" Figure: XPrefs " system "Run >NIL: <NIL: Display bilder/02.xprefs"}

@endnode


@node k3p3 "Minimum Memory Amount"
@toc "contents"


 @{b}3.3     Minimum Memory Amount @{ub}


This setting addresses the minimum necessary memory you need
to start Xi-Paint. The appropriate adjustment can be entered into
the box above the words "mimimum free memory". To be able to
use Xi-Paint you should not enter a value below 1.000.000.

If your computer has less than 2 MB memory you should lower
this value, otherwise Xi-Paint will not boot up because of a lack
of memory.  After adjusting all settings store them by "Saving".
Xi-Paint will use them after each restart of the program.  If you
just want to try out the chosen settings, click the button"Use". -
Paint will use these adjustments until the next retart. If you want
to reject the current settings, click "Abort."

	 @{" Figure: XiPaint Drawer " system "Run >NIL: <NIL: Display bilder/01.xpaintschublade"}

@endnode


@node k3p4 "Menus"
@toc "contents"


 @{b}3.4     Menus @{ub}


Using the menus gives you other options.  In the "Preset" menu
you can find "reset" (<right Amiga> <Z>), "back to last saved"
(<right Amiga> <L>) and "Back to last used" (<rightAmiga>
<S>). By clicking "reset" the Xi-Prefs adjustments are setback to
fixed internal values which are shown during the very first start.
"Back to last saved" loads the latest saved values and "Back to last
used" deletes your most recent changes.

@endnode




@node k4 "Chapter  4"
@toc "contents"


 @{b}@{fg highlight}Chapter  4 @{ub}@{fg text}


 @{b}Basics for 24 Bit Drawing @{ub}


  @{" 4.1   Introduction " link "k4p1"}

@endnode


@node k4p1 "Introduction"
@toc "contents"


 @{b}4.1     Introduction @{ub}


Xi-Paint  facilitates  nearly  unlimited  creative  potential  without
worry about technical details.  Nevertheless you need some basic
information. The following several examples will show you the dif-
ferent features of Xi-Paint and will introduce the individual imple-
mentations. This will make it a useful "compact manual" in itself.
The following chapter will give you some information about the
internal procressing of 24 Bit.  If you are not interessted in this
subject you can leap over this chapter as well.

@endnode




@node k5 "Chapter  5"
@toc "contents"


 @{b}@{fg highlight}Chapter  5 @{ub}@{fg text}


 @{b}Basics @{ub}


This chapter includes basic information for working with Xi-Paints
window and menu desktop.  The steps which are explained during
the following pages won't be mentio ned in later chapters. Therefore
it is very important for the inexperienced Xi-Paint user to grok the
following information.

  @{" 5.1   The Xi-Paint Window " link "k5p1"}
       @{" 5.1.1   The Windows Utilization " link "k5p1p1"}
       @{" 5.1.2   Sizing Windows " link "k5p1p2"}
       @{" 5.1.3   Window Width " link "k5p1p3"}
       @{" 5.1.4   Scrolling " link "k5p1p4"}
       @{" 5.1.5   Closing Windows " link "k5p1p5"}
  @{" 5.2  Using the Menus " link "k5p2"}
       @{" 5.2.1   Available Options are Activated " link "k5p2p1"}
  @{" 5.3   Text Input Boxes " link "k5p3"}
  @{" 5.4   The Scrollers " link "k5p4"}

@endnode


@node k5p1 "The Xi-Paint Window"
@toc "contents"


 @{b}5.1     The Xi-Paint Window @{ub}


Xi-Paint uses windows and menus. A window might include pain-
tings (worksheets) or requesters with several options (color set-
tings,shades, etc.). All windows are placed on a background (desk-
top). It is not possible to work on the desktop itself. Any window
can be activated by mouse click. The activated window is shown by
a changed frame color. Even if the mouse pointer leaves the window,
it will remain activated until you mouse click another window.

  @{" 5.1.1   The Windows Utilization " link "k5p1p1"}
  @{" 5.1.2   Sizing Windows " link "k5p1p2"}
  @{" 5.1.3   Window Width " link "k5p1p3"}
  @{" 5.1.4   Scrolling " link "k5p1p4"}
  @{" 5.1.5   Closing Windows " link "k5p1p5"}

@endnode


@node k5p1p1 "The Windows Utilization"
@toc "contents"


 @{b}5.1.1    The Windows Utilization @{ub}


The window frame includes some buttons which allow varied ma-
nipulations for arranging your desktop the way you'd like it.  The
following screenshot shows you such a window. Not every windows
offers all the options. The headline of a new worksheet contains the
text "project X".  X refers to a number of your painting.  If your
worksheet has already been saved before, the headline shows you
the entered name.

The headline of a requester shows you the requester's name which
also tells you its function. The headline also allows you to move the
currently activated window by clicking and holding the left mouse
button pressed.  While moving a window just its frame is shown.
It will be completely redrawn in its new position. In the top right
corner there are two buttons. The right one is for straightening up
the windows.  If you want to put a window into the background
or foreground, use the depth button.  To put a window into the
foreground, the concerned window can also be doubleclicked.

@endnode


@node k5p1p2 "Sizing Windows"
@toc "contents"


 @{b}5.1.2    Sizing Windows @{ub}


To the left of the depth button there is one more symbol which
enables you to chan ge the window size.  This button makes the
window, while you do not need it, as small as possible.  Another
click on the same button resizes it again to its former size.

@endnode


@node k5p1p3 "Window Width"
@toc "contents"


 @{b}5.1.3    Window Width @{ub}


The symbol at the right bottom corner enables you to change the
width of the window as you want.

@endnode


@node k5p1p4 "Scrolling"
@toc "contents"


 @{b}5.1.4    Scrolling @{ub}


At the right and bottom side of each worksheet are the scrollers
to move to the differ tent cuts of your project.  Notice, especially
while filling, that each action just takes place for the cut you can see
at the moment. Even a brush, which ends outside your worksheet
window will just be copied to the part you can see.

@endnode


@node k5p1p5 "Closing Windows"
@toc "contents"


 @{b}5.1.5    Closing Windows @{ub}


In the left top corner is the close button. If you click it the window
will be closed. Project will be lost if you do not save them before.
For this reason there will be a "security check" before the window
is closed. You can reopen them whenever you want.

@endnode


@node k5p2 "Using the Menus"
@toc "contents"


 @{b}5.2     Using the Menus @{ub}


Xi-Paint also uses pull-down menus beside the previously explai-
ned window functions.  By pressing the right mouse button you
can make the header with its menus visible.  You'll also find the
shortcuts, i.e. right "A" + a certain letter or sign. Don't mix these
shortcuts up with the drawing shortcuts which can be activated by
pressing just the specific buttons. Menu shortcuts are only possible
if the corresponding command is available for the opened window.

  @{" 5.2.1   Available Options are Activated " link "k5p2p1"}

@endnode


@node k5p2p1 "Available Options are Activated"
@toc "contents"


 @{b}5.2.1    Available Options are Activated @{ub}


The contents of the menu bars correspond with the activated win-
dow. You have access to the menu points you can use. In adapted
bars you will always find the same shortcuts for the same functions.
To get back to the basic menus you simply click on your desktop
at any place. All windows will be deactivated and the basic menus
will be available.

@endnode


@node k5p3 "Text Input Boxes"
@toc "contents"


 @{b}5.3     Text Input Boxes @{ub}


Xi-Paint is programmed to enable you to work with the mouse,
but in some cases (project names for instance) it is neccecary to do
keyboard inputs. Xi-Paint allows you to change settings by mouse
or the input of certain values. To do inputs in such a box y click any
place on the box. It will change its color and present a cursor. For
the text boxes the following shortcuts are available, which simplify
the input of text:

	 @{" Figure: Text Input Box " system "Run >NIL: <NIL: Display bilder/05.texteingabefeld"}

  _______________________________________________________________
  |  Key                | Function                              |
  ---------------------------------------------------------------
  |  Backspace          | deletes the sign right of the cursor  |
  |  DEL                | deletes the sign left of the cursor   |
  |  SHIFT              | jumps to the beginning of a text      |
  |  SHIFT !            | Jumps to the end of a text            |
  |  <right Amiga> x    | deletes the whole text                |
  |  TAB                | jumps to the next input box           |
  |  SHIFT TAB          | jumps to the previous input box       |
  |  Enter              | takes the text and finishes the input |
  ---------------------------------------------------------------

If you press TAB in the last input box, the cursor will appear in
the first input box.

@endnode


@node k5p4 "The Scrollers"
@toc "contents"


 @{b}5.4     The Scrollers @{ub}


In many cases you can use scrollers to set certain values or to choose
clips. They can be moved by holding the left mouse button pressed.
The Xi-Paint scrollers are size sensitive, which means that they
always show the correct size relation between the control area and
the size of the scroller bar.  If you reduce a paint window which
showed the whole painting before just a little bit, the scroller bar
will fill a big part of the scroller and you can use a small part for
moving.  This feature always enables you to know the size of your
project.

@endnode




@node k6 "Chapter  6"
@toc "contents"


 @{b}@{fg highlight}Chapter  6 @{ub}@{fg text}


 @{b}First  Steps @{ub}


In this chapter you'll learn the basics of how Xi-Paint paint func-
tions. To ensure that you get the same results which are described
in the following chapters - restart Xi-Paint, to reset the different
options. Otherwise you may get different results than the se.

  @{" 6.1   Opening a New Worksheet " link "k6p1"}
       @{" 6.1.1   Setting the Size " link "k6p1p1"}
  @{" 6.2  Important Drawing Functions " link "k6p2"}
       @{" 6.2.1   A House Made of Rectangles and Lines " link "k6p2p1"}
       @{" 6.2.2   Correcting a Mistake by UNDO " link "k6p2p2"}
       @{" 6.2.3   Precise Mouse Control by Keyboard " link "k6p2p3"}
       @{" 6.2.4   Saving the Project " link "k6p2p4"}

@endnode


@node k6p1 "Opening a New Worksheet"
@toc "contents"


 @{b}6.1     Opening a New Worksheet @{ub}


This is the first step for a new painting. Xi-Paint gives every works-
heet its own window in which the worksheet is shown. Choose from
the menu "project" the option "new" or press the shortcut <right
Amiga> <n>.  If you have not restarted Xi-Paint and you can-
not find the project menu now or "new" is not available, activate
another window or click directly on the desktop.  After this the
desired menu option will be there.

  @{" 6.1.1   Setting the Size " link "k6p1p1"}

@endnode


@node k6p1p1 "Setting the Size"
@toc "contents"


 @{b}6.1.1    Setting the Size @{ub}


After choosing "new" a small requester opens which asks you to set
the size for your new project.

	 @{" Figure: New-Requester " system "Run >NIL: <NIL: Display bilder/06.neurequester"}

This value doesn't correspond with the chosen resolution.  If the
project is smaller than the chosen resolution a window in the ap-
propriate size will be opened.  If the project is bigger than the
chosen resolution, a screen covering window with scrollers, which
shows the left top of your project, will be opened.  The maximum
size depends on existing memory. If you recognize, while painting,
that your chosen window is too small, just pick your project as a
brush and put it in a new and bigger window. This is also possible
if your window is too big, but not recomended, because you will
lose some details.

The size of the graphic always depends on your intended use.  For
presentations, for example, you can use the typical screen resoluti-
ons (640x480, 800x600, etc.)  for getting a full screen picture.  For
posters or covers it is useful to use the width and height relations
of a different format.  For DIN A4 this will be about 5:7 which
means a size about 1000x1400 or 500x700.  For the first steps a
small graphic will be enough, so let's use 320x200.  Click first on
the input box, delete the values by <right Amiga> <x> and then
insert 320. Do not fix this input by pressing Enter but simply use it
by pressing Tab. This automatically activates the next input box,
which deals with the desired height. Delete the given value <right
Amiga> <x> again and insert 200. Now press Enter to enable both
changes.  To open the defined worksheet just click the OK button
or press Enter. If choosing "new" was a mistake just click "cancel"
and the event will be stopped.

@endnode


@node k6p2 "Important Drawing Functions"
@toc "contents"


 @{b}6.2     Important Drawing Functions @{ub}


After having chosen the size of the new worksheet a new paint
window will open. First we want to use some simple drawing tools.
Try to copy this easy line graphic.  As a new tool is explained in
the following pages for the first time, the shortcut will be shown in
brackets. Decide for yourself if you prefer working with the mouse
or on the keyboard.  Using the keyboard will require more time
to learn, but it will allow you greater speed and more fluency.  If
you need more detailed information during certain steps, i.e. for a
certain requester, please look in the appropriate chapters.

  @{" 6.2.1   A House Made of Rectangles and Lines " link "k6p2p1"}
  @{" 6.2.2   Correcting a Mistake by UNDO " link "k6p2p2"}
  @{" 6.2.3   Precise Mouse Control by Keyboard " link "k6p2p3"}
  @{" 6.2.4   Saving the Project " link "k6p2p4"}

@endnode


@node k6p2p1 "A House Made of Rectangles and Lines"
@toc "contents"


 @{b}6.2.1    A House Made of Rectangles and Lines @{ub}


Let's start with the house.  First choose the rectangle tool(<r>).
Now you can draw the rectangle needed for the outline. Place the
mouse pointer to the position where the left top of the rectangle
should be positioned, then press left mouse button. While pressing
the mouse button you can pull the rectangle to the desired size.

	 @{" Figure: House " system "Run >NIL: <NIL: Display bilder/07.Strichgrafik"}

A rubber band will show your mouse moving and also the size of the
rectangle. Release the button at the desired size and the rectangle
will be drawn.  The color will depend upon the settings in the -
Paint color requester. These color settings will be explained later
in this chapter. Now we can draw the windows and the door of our
house. This should be done in the same way we did the outline.

@endnode


@node k6p2p2 "Correcting a Mistake by UNDO"
@toc "contents"


 @{b}6.2.2    Correcting a Mistake by UNDO @{ub}


If a mistake happens you can correct it by clicking the Undo button
(<u>). By pressing it once, the last step will be undone,by pressing
it twice also the last but one step will be undoneand so on.  The
number of possible undones just depends to theavailable memory.
If pressing undo is a mistake itself you can"undo" the undone by
clicking Redo button (<U>).  Just try thesefunctions by yourself
by removing and "re-removing" the windowsof our line house. But
there also has to be a roof for our house.  For drawing it we need
the line tool (<v>). But toposition the mouse pointer exact to the
right position is notvery easy.

@endnode


@node k6p2p3 "Precise Mouse Control by Keyboard"
@toc "contents"


 @{b}6.2.3    Precise Mouse Control by Keyboard @{ub}


The mouse pointer can be controled by keyboard.  First move the
pointer by mouse as near as possible to the position where you want
to draw. Keep both amiga keys pressed and use the cursor keys to
move to the exact position you want the pointer. This will happen
in one point steps.  After having positioned the pointer, keep the
left mouse button pressed (otherwise the exact position will be lost
again) and then stretch the line.
You can also simulate the left button press by keyboard (<left
Amiga>and <ALT>). Keep both buttons pressed and use the cur-
sor keys to stretch the line. By releasing ALT the line will be fixed.
The chimney can be made in the same way.  The smoke and the
cloud on the side can be made by freehand tool. (<d>) as well as
the horizon in the background. The sun is a simple circle (<c>).

@endnode


@node k6p2p4 "Saving the Project"
@toc "contents"


 @{b}6.2.4     Saving the Project @{ub}


Now we have produced our first work of art.  Before we continue,
we need to save it. Make certain that this window is activated (the
frame has a different color than the deactivated windows).  Now
choose from project menu "picture save as : : :"(<right Amiga>
<a>). A requester will open and you can type the path and name
for your picture. Xi-Paint uses the IFF DEEP format, but you also
can use different formats which can be chosen in the file requester
(menu bar).

@endnode




@node k7 "Chapter  7"
@toc "contents"


 @{b}@{fg highlight}Chapter  7 @{ub}@{fg text}


 @{b}To  Work  with  Colors @{ub}


Our painted house is beautiful but a little bit colorless. That's why
we want to color it. Call up the command"colors" (<right Amiga>
<C>) from the "menus" menu. The colorbox will open.

  @{" 7.1   The Colorbox " link "k7p1"}
       @{" 7.1.1   The Perfect Colorhues for our Painting " link "k7p1p1"}
  @{" 7.2   Filling a Painting " link "k7p2"}
  @{" 7.3   Saving the Palette " link "k7p3"}

@endnode


@node k7p1 "The Colorbox"
@toc "contents"


 @{b}7.1      The Colorbox @{ub}


The colorbox allows you to choose and to mix colors.The top half
contains the scrollers for setting the color values, the bottom has
the 256 Colorboxes into which colors can be assigned. Some colors
are already assigned. By selecting, it will be used as actual painting
color.

	 @{" Figure: Colorbox " system "Run >NIL: <NIL: Display bilder/08.colorbox"}

Try it by drawing an element onto our beautiful house. By using the
three scrollers (standing for red, green blue) the activated color can
be changed.  All unused colorboxes will assigned by Xi-Paint the
value for black. Click one of these empty boxes, mix an individual
color , and use it in your painting. To use the chosen color you first
have to press "assign". Otherwisethe "old" color will be used even
if in the colorbox the new one is shown.  For further help look in
the information part of this manual.

  @{" 7.1.1   The Perfect Colorhues for our Painting " link "k7p1p1"}

@endnode


@node k7p1p1 "The Perfect Colorhues for our Painting"
@toc "contents"


 @{b}7.1.1     The Perfect Colorhues for our Painting @{ub}


First we need blue for our sky. Click one of the free colorboxes. Put
the scrollers for red and green to the very left (the textbox shows
"0") and the one for blue to the very right (the textbox shows
"255").  Green for the grass and red for the roof you can produce
in the same manner. Yellow for the sun can be produced by puting
red and green to the far right, and blue to the far left.  The other
colors can be produced in the same way. Dont forget to use a new
box for every new color, otherwise you'll loose your old color.

	      _________________________________
	      |       Hue  |red  |green |blue |
	      ---------------------------------
	      |      blue  |  0  |  0   | 255 |
	      |     green  |  0  | 255  |  0  |
	      |    yellow  | 255 | 255  |  0  |
	      |       red  | 150 |  0   |  0  |
	      |      grey  | 150 | 150  | 150 |
	      |    purple  | 180 |  87  | 255 |
	      |    brown   | 162 |  85  |  0  |
	      |     white  | 255 | 255  | 255 |
	      |     black  |  0  |  0   |  0  |
	      |  darkgrey  |  80 |  80  |  80 |
	      ---------------------------------

@endnode


@node k7p2 "Filling a Painting"
@toc "contents"


 @{b}7.2      Filling a Painting @{ub}


Now choose blue for your sky and activate your paint window. Then
switch on the filling tool (<f>). A mouse click on the sky will color
it quickly with blue.  If the filling isn't correct, check the drawing
mode.  In the menu "drawing mode" there should be the setting
"solid" (<left Amiga> <1>).

	 @{" Figure: House colored " system "Run >NIL: <NIL: Display bilder/09.Strgrgefuellt"}

If the color runs out, check your object for leaks.  To close small
"leaks", you can use the freehand tool.  and, for very exact pixel
setting, use the magnifying glass (tool button or <m>).  The ma-
gnifying glass will appear as a rectangle around the mouse pinter,
with which you can choose the area which has to be magnified. The
magnify window will show you the desired area. Now fill your house
with the different colors.  After you finishe your piece of art, save
your picture.  Save it again with "save as..." under a new name,
because we will need the "old" picture in the next chapter.

@endnode


@node k7p3 "Saving the Palette"
@toc "contents"


 @{b}7.3      Saving the Palette @{ub}


Maybe we will need the palette which we needed for our house at a
later time. Well, we can save it. Activate the colorbox. Now click
the right mouse button. A different menu will appear, which shows
the possibilities you will needf or editing a palette, for example
"save as..." (<right Amiga><a>). As you can see, we tried to give
similar actions the same name and shortcut. Now you can save your
palette in the same man ner you did with your painting. You now
know about the basic functions of Xi-Paint and have learned about
the most important tools of this program. Before reading the next
chapter, play with what you`ve learned.  Beginning with the next
Chapter we will deal with Xi-Paints advanced functions.

@endnode




@node k8 "Chapter  8"
@toc "contents"


 @{b}@{fg highlight}Chapter  8 @{ub}@{fg text}


 @{b}Creating  and  Managing Brushes @{ub}


This chapter deals with one of the most important functions of -
Paint.  First we want to learn something about the basic concept
you'll need for working with Xi-Paint.  Later we will learn about
more advanced possibilities.

  @{" 8.1   Cut Out a Brush " link "k8p1"}
       @{" 8.1.1   Individual Objects as Basics " link "k8p1p1"}
       @{" 8.1.2   Cutting Out the Brush " link "k8p1p2"}
  @{" 8.2   Masking a Brush " link "k8p2"}

@endnode


@node k8p1 "Cut Out a Brush"
@toc "contents"


 @{b}8.1      Cut Out a Brush @{ub}


For our house we will need a fence, a real slatted fence with peaks,
which should look like the following example:  Because we don't
want to draw each slat for itself, we are going to use one of the
special skills of Xi-Paint, the paste function, which allows you to
draw one object and insert it where and when you want.

  @{" 8.1.1   Individual Objects as Basics " link "k8p1p1"}
  @{" 8.1.2   Cutting Out the Brush " link "k8p1p2"}

@endnode


@node k8p1p1 "Individual Objects as Basics"
@toc "contents"


 @{b}8.1.1     Individual Objects as Basics @{ub}


Xi-Paint can work with several windows. First load our line pain-
ting.  For designing the slat we will open a new window with the
size 100x100. If you do not want to use the chosen color, open the
colorbox and choose another color.  The slat itself is easily desi-
gned with three rectangles and two lines.  The top margin of the
peg has to be removed afterwards by covering it with the chosen
background color.

	 @{" Figure: Parts of fence " system "Run >NIL: <NIL: Display bilder/10.Zaunteile"}

@endnode


@node k8p1p2 "Cutting Out the Brush"
@toc "contents"


 @{b}8.1.2     Cutting Out the Brush @{ub}


After finishing the object, it can be copied.  Choose the tool for
cutting out a rectangular brush (<b>) and choose the desired part
for cutting out by placing the frame around it. The brush will stick
on your mousepointer and can be placed in this window and also
in any other Xi-Paint window as often as you want.  So you can
exchange and interchange objects between different windows.

@endnode


@node k8p2 "Masking a Brush"
@toc "contents"


 @{b}8.2      Masking a Brush @{ub}


When you place your brush you'll recognice that the brushs' back-
ground is not trans parent.  We know for which color the brush
should be transparent (the currently chosen background color, with
which you have cleared your worksheet), but Xi-Paint doesn't. So
you have to choose which color of the brush should be transparent.
Select the colorbox and activate the box which contains the back-
ground color.  After that you just have to press < / > and all the
parts of the brush which contain the chosen colors will be trans-
parent.  Then you can place your slats in front of your house whe
reever you want. If you want to use black as your background color,
just press < [ >, which will create a maximum mask and will create
the desired result.  Now create the slat fence, to get the following
painting:

	 @{" Figure: Picture of fence " system "Run >NIL: <NIL: Display bilder/11.Zaungrafik"}

If you just need some parts of your slats, cut out that particular
part and position it in your "house"window. This slat fence can also
be colored.  Use the same color you used for the doors.  Call the
previously saved palette with "load" in the "palette"menu (<right
Amiga> <l>) and choose the right palette name from the requester.
Now you can color your painting with your previously saved colors.

	 @{" Figure: Picture of fence (filled) " system "Run >NIL: <NIL: Display bilder/12.Zaungrafikgefuellt"}

@endnode


@node k9 "Chapter  9"
@toc "contents"


 @{b}@{fg highlight}Chapter  9 @{ub}@{fg text}


 @{b}Working  with  Brushes @{ub}


This chapter will deal with advanced brush possibilities. The new
managing system will be the main topic.

  @{" 9.1   A Tube System of Tasks " link "k9p1"}
       @{" 9.1.1   Shades in the Color Requester " link "k9p1p1"}
       @{" 9.1.2   Making Your Work Easier by Brush Manipulation " link "k9p1p2"}
  @{" 9.2   The Grid as Position Help " link "k9p2"}
       @{" 9.2.1   The Brush Manager " link "k9p2p1"}
  @{" 9.3   Multiple Brushes " link "k9p3"}
       @{" 9.3.1   How the Brush Manager Works " link "k9p3p1"}
       @{" 9.3.2   Composing the Tube System Puzzle " link "k9p3p2"}

@endnode


@node k9p1 "A Tube System of Tasks"
@toc "contents"


 @{b}9.1      A Tube System of Tasks @{ub}


For this option, we want to work out a project which seems to be
very complicated but is very easy to execute with Xi-Paint.  Just
look at the following picture:

	 @{" Figure: Tubes (completed) " system "Run >NIL: <NIL: Display bilder/13.Roehrenfertig"}

It's a tube system which covers the whole screen. You can use the
same duplicating system you learned about when we produced our
fence. Now it's even easier. The whole system is made from three
parts which can be put together in the desired positions. The three
elements look like:

	 @{" Figure: Tubes (Parts) " system "Run >NIL: <NIL: Display bilder/14.Roehrenteile"}

The 3D-effect is easy to produce, you just have to create 6 colors,
each one being darker than the one before. The color requester al-
lows you to generate them by its function "Shade". Shade generates
a very smooth transition between two colorhues.

  @{" 9.1.1   Shades in the Color Requester " link "k9p1p1"}
  @{" 9.1.2   Making Your Work Easier by Brush Manipulation " link "k9p1p2"}

@endnode


@node k9p1p1 "Shades in the Color Requester"
@toc "contents"


 @{b}9.1.1    Shades in the Color Requester @{ub}


For our tubes just create one colorbox with white (255, 255,255).
Now count up to the sixth box and set it to blue (0, 0,255).  Now
click the white box, the button "Shade" and then the blue box.
Automatically the colors in between will be created. Remember to
press assign.  Otherwise the new colors won't be accepted.  After
creating the colors, paint your three elements. Take care that each
part is sized 20x20 points. For better positioning, especially for the
arrows, it is recomended to use the magnifier. Please save the three
elements.  The crossing can be used for every direction.  But the
arrow can only be used in one direction and the line allows you just
a horizontal use.

@endnode


@node k9p1p2 "Making Your Work Easier by Brush Manipulation"
@toc "contents"


 @{b}9.1.2     Making Your Work Easier by Brush Manipulation @{ub}


The parts we need can be created by Xi-Paint's brush manipulation.
First cut out the line as a rectangular brush then press <z>. This
rotates the brush abouts 90°.  Now we've got the element for the
vertcal line.  Take care that each brush is exactly 20x20 and the
element is situated in the middle of the brush.  That's not very
easy, but by using the magnifier it should not be a problem. If you
aren't careful, you will not be able to use the positioning help we
are going to use.

Now we need the four arrows, for allowing curves to bend in all
directions.  There are two different ways to get this result.  First
you can use the <z> key for rotating the brush four times about
90O.  And second you can use two other tools Xi-Paint offers you,
which are the reflections.  After taking the brush, press<y>.  It
reflects the brush by its vertical axis and you can insert the result
to your painting.  Now rotate the brush about 90o again and you
will get the third arrow to use. At least you just need to press <x>
which reflects the brush this time to its vertical axis.  Then insert
this part on the worksheet. After finishing the worksheet, save your
object collection.

@endnode


@node k9p2 "The Grid as Position Help"
@toc "contents"


 @{b}9.2      The Grid as Position Help @{ub}


Now we want to compose our tube system. First open a new win-
dow.  It would be very exhausting to position the small parts in
an exact way. Therefore we want to use a position grid. Click the
grid button in the toolbox or press <right Amiga><G>.The grid
requester will appear.

	 @{" Figure: Grid-Requester " system "Run >NIL: <NIL: Display bilder/16.Gitterreq"}

Now you can set the grid size.The beginnings and endings of your
objects just can be positions at the crossings of this invisible grid.
For our tube elements set the hight and width of our grid to 20
points. Don't forget to set the switch in the left bottom corner to
"on". Otherwise there will be no grid. You can quit this requester
by "close".  If you decide to switch off the grid, don't close the
requester. So you simply have to switch the on/off switcher.

  @{" 9.2.1   The Brush Manager " link "k9p2p1"}

@endnode


@node k9p2p1 "The Brush Manager"
@toc "contents"


 @{b}9.2.1     The Brush Manager @{ub}


To produce the tube system in a such an easy way, make sure that
the brush is exactly sized, in this case, to 20x20. You need not cut
out the brush each time you need it,just use Xi-Paint's fantastic
feature, the brush manager.

	 @{" Figure: Brush-Requester " system "Run >NIL: <NIL: Display bilder/17.Pinselreq"}

@endnode


@node k9p3 "Multiple Brushes"
@toc "contents"


 @{b}9.3      Multiple Brushes @{ub}


Xi-Paint  enables  you  to  manage  up  to  128  brushes,  depending
upon what number you set in the "settings"requester.  The pro-
gramm stores them and offers them after starting Xi-Paint.  Call
from"menus" menu the comand "brush..." (<right Amiga> <B>).
A new requester will open.  Use the scroller for finding the area
where your tube parts are situated. Xi-Paint saves each brush you
take in this "list". Therefore you will also see some older brushes,
for example from our fence.

  @{" 9.3.1   How the Brush Manager Works " link "k9p3p1"}
  @{" 9.3.2   Composing the Tube System Puzzle " link "k9p3p2"}

@endnode


@node k9p3p1 "How the Brush Manager Works"
@toc "contents"


 @{b}9.3.1     How the Brush Manager Works @{ub}


If the list is complete, Xi-Paint starts to overwrite the old brushes,
beginning with the oldest one.  So you might find the tubes some-
where in the middle of the list.  If you click the free part of the
scroller the list will move further for one page.

@endnode


@node k9p3p2 "Composing the Tube System Puzzle"
@toc "contents"


 @{b}9.3.2     Composing the Tube System Puzzle @{ub}


To choose a brush to use, just click on it. It will stick on the pointer
and can be placed in each window. As you recall, we took care that
the brushes are sized 20x20, so they will exactly fit in our grid.
Do not be puzzelled by the representation of a certain brush in the
brush window. Xi-Paint tries to show the brush format filling. The
tube system is just an easy example for using the brush manager.
For everyday work you will need this feature again and again.

@endnode




@node k10 "Chapter  10"
@toc "contents"


 @{b}@{fg highlight}Chapter  10 @{ub}@{fg text}


 @{b}Cycle and Shade in Practice @{ub}


Cycling and shading are extremely important.  Xi-Paint takes full
advantage of the power inherent in these two options.

  @{" 10.1  Cycled Colors " link "k10p1"}
       @{" 10.1.1  The Working Method of Cycle " link "k10p1p1"}
       @{" 10.1.2  The Cycle in Practice " link "k10p1p2"}
       @{" 10.1.3  Offset Setting for Exact Cycle Adjusment " link "k10p1p3"}
  @{" 10.2   Cycling in Practice " link "k10p2"}
       @{" 10.2.1  A Frame " link "k10p2p1"}
       @{" 10.2.2  Color Bars " link "k10p2p2"}
       @{" 10.2.3  Vertical and Diagonal Stripes " link "k10p2p3"}
       @{" 10.2.4  Shades " link "k10p2p4"}
       @{" 10.2.5  Choice of Shades " link "k10p2p5"}
       @{" 10.2.6  5 Point Shades for Special Effects " link "k10p2p6"}

@endnode


@node k10p1 "Cycled Colors"
@toc "contents"


 @{b}10.1      Cycled Colors @{ub}


This functions offer a lot of special effects, which may be difficult
to comprehend.  So do not give up if you find this chapter a little
bit difficult. With just a bit of practice and experimentation you'll
become extremely fond of this paint mode.  The basic function is
easy to explain.  Activate "Cycle" (<right Amiga> >4>) and -
Paint will use the next color from the defined cycle requester for
each new object. The object can be a brush or some object. This
means that for example for a rectangle, which was produced by a 1
point standard brush, each point will get the next color.

  @{" 10.1.1  The Working Method of Cycle " link "k10p1p1"}
  @{" 10.1.2  The Cycle in Practice " link "k10p1p2"}
  @{" 10.1.3  Offset Setting for Exact Cycle Adjusment " link "k10p1p3"}

@endnode


@node k10p1p1 "The Working Method of Cycle"
@toc "contents"


 @{b}10.1.1     The Working Method of Cycle @{ub}


Call the Color requester (<right Amiga> <C>). That's important
because cycling uses the colors you have defined before.  Take red
(255, 0, 0) for the first box, for the second blue (0,0, 255) and for
the third one choose red again. Do not forget to click "assign" and
then close the color requester. If your memory requires more than
2 MB the requester can remain open as well.  Now call the cycle
requester (<right Amiga> <Y>). For number of steps insert "50".
The shade should start with red, go to blue and then back to red.
Therefore you have to fill in "from" "0" and at "to" "2". The cycle
will also go from the first to the third colorbox (Xi-Paint starts at
zero).

	 @{" Figure: Cycle-Requester " system "Run >NIL: <NIL: Display bilder/18.Zyklusrequester"}

To check the effect of the newly created cycle and to make the
program accept the new cycle, click "generate". The cycle will also
be created internally and shown in the preview bar.

@endnode


@node k10p1p2 "The Cycle in Practice"
@toc "contents"


 @{b}10.1.2     The Cycle in Practice @{ub}


Open a new worksheet for trying out your new cycle. Set the paint
mode to "cycle" (<right Amiga> <4>) and choose an unfilled rec-
tangle.  Paint it as big as possible.  Starting in the left top corner
Xi-Paint changes its color for each point. The line starts with red,
becomes blue and then red again. At the end of a cycle, the color
starts from the beginning again.  In our case you can't recognice
that, because our first and last color is the same.  Just the left
top corner shows a color crack because Xi-Paint starts there with
painting.  By freehand drawing you can watch the cycling while
drawing. Follow the line until it becomes blue.

@endnode


@node k10p1p3 "Offset Setting for Exact Cycle Adjusment"
@toc "contents"


 @{b}10.1.3     Offset Setting for Exact Cycle Adjusment @{ub}


If you continue drawing in another place, you'll recognize that the
cycle now starts in blue. Draw again until you see blue again. Now
set "offset" in the cycle requester to "0" and click "default " button.
If you continue drawing Xi-Paint will not start with the previous
blue color, but it will start with red again. Offset selects in which
color of the cycle the next step should be done. Xi-Paint itself uses
the value for the color with which you finished before.

Cycle can be used for any existing pencil and brush. Brushes have
to be used in "outline" mode.  This means their outline but not
their color will be used.  For cycling you can use any number of
colors you want. While using more colors, it may happen that you
have to extend the value from "steps". As a rule of thumb take 15
to 20 steps for each selected color. If there are mistakes, try some
different values (+/- 10). DO NOT FORGET TO "GENERATE" !!!!
Otherwise some mistakes will occur. Do not use too many steps
while using too few colors. Otherwise the cycle might not seem to
work.

@endnode


@node k10p2 "Cycling in Practice"
@toc "contents"


 @{b}10.2      Cycling in Practice @{ub}


There are many situations in which you want to frame a certain
object or use the frame as a piece of art itself.

  @{" 10.2.1  A Frame " link "k10p2p1"}
  @{" 10.2.2  Color Bars " link "k10p2p2"}
  @{" 10.2.3  Vertical and Diagonal Stripes " link "k10p2p3"}
  @{" 10.2.4  Shades " link "k10p2p4"}
  @{" 10.2.5  Choice of Shades " link "k10p2p5"}
  @{" 10.2.6  5 Point Shades for Special Effects " link "k10p2p6"}

@endnode


@node k10p2p1 "A Frame"
@toc "contents"


 @{b}10.2.1     A Frame @{ub}


Choose from the pencil requester (<right Amiga> <P>) a bigger
pencil (minimum 2x2). Let's say we want our frame to start at red,
become blue, green, again blue and then red (to close the cycle)
again. So we define in the color requester the box "0" and the box
"4"to red (255, 0, 0), "1" and "3" blue (0, 0, 255) and the "2"green
(0, 255, 0).  After doing that call the cycle requester.  For "steps"
choose "50" and for "from" and "to" set "0" and "4". Set "offset"
to "0".

Then click "generate".  The preview bar will show you the cycle.
There are certain requirements for a steady frame. No tice that, for
a steady frame, the frames length has to be a multiple of the steps.
So each corner will show the end of the cycle. To get this result we
use Xi-Paint's grid. Call the grid requester (<right Amiga> < G>)
and insert 50 for both width and height. Then set the switcher to
"on". Before painting with cycle, set the painting mode to "cycle".
As you now paint an unfilled rectangle, you are just able to paint
frames with a size multiple from 50.  If the color in the corners of
your rectangle is not the first one in your cycle, set "offset" in the
cycle requester to "zero"and press "default".

@endnode


@node k10p2p2 "Color Bars"
@toc "contents"


 @{b}10.2.2     Color Bars @{ub}


Sometimes you'll need an effective background. While using"cycle,"
Xi-Paint can produce color bars. This is not easy to describe so try
it for yourself. Use the same set tings you fixed for the frame. Even
"steps" will remain the same.  But switch off the grid and paint a
filled rectangle.  Depending on its size it will be filled with more
or less arranged patterns.  For getting a "more arranged" pattern
activate the grid and set width to "50" and height to "1". For obtai-
ning vertical Bars set "offset" to "0" and press " default". Draw a
filled rectangle and you'll be surprised. If you change "offset" (DO
NOTFORGET TO RESET TO DEFAULT) and paint another filled rectangle,
you'll get diagonal bars which might be much more
beautiful than vertical bars.

	 @{" Figure: Cycled rectangle " system "Run >NIL: <NIL: Display bilder/19.Zyklusrechteck"}

@endnode


@node k10p2p3 "Vertical and Diagonal Stripes"
@toc "contents"


 @{b}10.2.3     Vertical and Diagonal Stripes @{ub}


How has this effect been done?  Xi-Paint starts a filled rectangle
from the top left corner and continues linewise from the top to the
bottom.  Let's stay with a 50 step cycle with an offset of 0.  If we
now draw a rectangle that's 50 pixels wide, Xi-Paint will start to
draw the first line and then run through the complete cycle.

At the end of the first line the last color of the cycle is reached. The
next line will now begin with the first color again, and therefore the
pixel colors of each row will be the same. You have the impression
of looking at many color bars. If you change the offsets, you'll get
similar results, but the cycles will now have offsets.

You'll then get the impression of diagonal stripes.  You can now
understand that an ellipse can never be used with this effect. That's
because the width of one line varies so the cycles aren't underneath
each other. The same is true for polygons but this cycle opens many
new options. Even though there are no visible color bars, you can
generate using nice effects using circles and polygons.

You should try to practice this function. It will give you increased
skills with these variations.

@endnode


@node k10p2p4 "Shades"
@toc "contents"


 @{b}10.2.4     Shades @{ub}


Xi-Paint supports the common basic shades because special effects
need a very long generating time in 24 Bit. Later it will also support
outline and highlight filling.

@endnode


@node k10p2p5 "Choice of Shades"
@toc "contents"


 @{b}10.2.5     Choice of Shades @{ub}


You need not limit your ideas. Xi-Paint offers, along with the two
point shade, 3-, 4-, and 5-point shades.  The colors can be defined
as you want.  The simplest shade is the one between two colors,
which is possible to get in vertical and horizontal hue.  The first
color will be used for the top or left, the second for the bottom or
right edge. That's also valid for all other shades, each colorbox will
be used from left to right and from top to bottom.

@endnode


@node k10p2p6 "5 Point Shades for Special Effects"
@toc "contents"


 @{b}10.2.6     5 Point Shades for Special Effects @{ub}


The fifth color will be used for a freely placed point, not only for
the center as com mon.  To place this point Xi-Paint offers you
two scrollers in the shade requester for x and y direction.  This
value will be fixed as a percentage because every shade can take a
different expansion.  A setting above 1 wouldn't work.  x=0mean
that the fifth point is situated in the left top corner, which makes no
sense be cause it will be covered by the first color point. Make sure
that the fifth point is minimally distanced 25the bottom margin,
a quarter away from the left margin. To "preview" the new shade
click "preview".  Xi-Paint shows the new shade immediately after
you create it,  so you need not press something like "generate".
After defining a certain shade, choose the "shade" painting mode
(<right Amiga> <3>). Lines and freehand drawing will be shown
as shades like filled areas. Play with the possibilities.

	 @{" Figure: Shade Requester " system "Run >NIL: <NIL: Display bilder/20.Farbverlaufsbox"}

@endnode




@node k11 "Chapter  11"
@toc "contents"


 @{b}@{fg highlight}Chapter  11 @{ub}@{fg text}


 @{b}Special  Effects  with Brushes @{ub}


The flexible handling of the Xi-Paint brushes offers you a lot of very
new possibilities. For basic knowledge, read the following pages.

  @{" 11.1  The Proof of the Pudding " link "k11p1"}
       @{" 11.1.1  A Multicolored Rectangle for Our Experiments " link "k11p1p1"}
       @{" 11.1.2  Finishing Touches " link "k11p1p2"}
  @{" 11.2 The Related Theory " link "k11p2"}
       @{" 11.2.1  Understanding Area Filling " link "k11p2p1"}
  @{" 11.3  Some Tips " link "k11p3"}
       @{" 11.3.1  Getting Experience " link "k11p3p1"}
  @{" 11.4  New Shapes Using Brushes " link "k11p4"}
       @{" 11.4.1  A Rectangle with Rounded Corners " link "k11p4p1"}
       @{" 11.4.2  A Frame Instead of the Filled Rectangle " link "k11p4p2"}
       @{" 11.4.3  A Rectangle with Sloped Edges " link "k11p4p3"}
  @{" 11.5  Escaping a Running Routine " link "k11p5"}

@endnode


@node k11p1 "The Proof of the Pudding"
@toc "contents"


 @{b} 11.1       The Proof of the Pudding @{ub}


We use the filling possibilities of Xi-Paint together with the possi-
bilities of the brushes. Set in the shade requester (<right Amiga>
<U>) a "3 colors, 2 bottom" - shade.  Now call the color reque-
ster (<right Amiga> <C>) and set the first three color boxes to
very red, very blue, and very green. After pressing "preview" you'll
see a shade which is red on the bottom margin and has bottom
corners colored blue (left) and green (right).  If you can't see your
new shade, press "assign"in the color requester.  After that press
"preview" again. Then open a new worksheet. Set the paint mode
to "shade" (<rightAmiga> <3>) and activate the painting tool for
filled rectangles. Activate the one point brush (< . >).

  @{" 11.1.1  A Multicolored Rectangle for Our Experiments " link "k11p1p1"}
  @{" 11.1.2  Finishing Touches " link "k11p1p2"}

@endnode


@node k11p1p1 "A  Multicolored  Rectangle  for  Our  Experiments"
@toc "contents"


 @{b} 11.1.1      A  Multicolored  Rectangle  for  Our  Experiments @{ub}


We need a rectangle about 10 to 15 points length.  But its sides
need not have the same size. For painting this small of a rectangle
use the magnifier. If the rectangle does not appear with the chosen
shade, check if you've set the paint mode to "shade". The correct
rectangle could be cut out by the brush tool (<b>).  Take care
not to cut out the background around your rectangle. Turn off the
magnifier.  The small rectangle, filled with shade, sticks on your
pointer. Now activate the tool for filled freehand lines (<W>) and
activate the paint mode "as it is" (<right Amiga> <8>).  Now
paint an outline, similar to the one shown below:

	 @{" Figure: Outline " system "Run >NIL: <NIL: Display bilder/21.Umriss"}

After releasing the mouse button, Xi-Paint starts to work. Depen-
ding on size and resolution, Xi-Paint will need up to a few minutes.
This fill also depends on the capacity of you computer. After finis-
hing you'll like the result.  It will be much more interesting than
the picture in the manual shows. You'll see a filled object, green on
the right and, if visible, blue on its left.  This causes a pseudo 3D
effect, which is used very often, especially by broadcasting stations.
Try the different effects by yourself.

	 @{" Figure: Filled Outline " system "Run >NIL: <NIL: Display bilder/22.Fuellkoerper"}

@endnode


@node k11p1p2 "Finishing Touches"
@toc "contents"


 @{b}11.1.2     Finishing Touches @{ub}


Set the shade requester to "2colors, vertical" and activate the filling
tool (<f>).  Do not forget to use the one point brush (<.  >) and
to set the paint mode to "shade".  Now fill the red area to get a
much more beautiful effect. Sometimes a five point shade can also
be beautiful, just try it.

@endnode


@node k11p2 "The Related Theory"
@toc "contents"


 @{b}11.2      The Related Theory @{ub}


The above described effects look quite nice.  But to really know
how to use it, it's necessary to learn some of the theory. As already
mentioned Xi-Paint doesn't always use the one point pen to fill
areas. It can also use the currently selected brush. This isn't used
like one piece of a mosaic, but rather each single point of the area
to be filled will be drawn separately.  This means that for each
point of the related area, the entire brush will have to be displayed.
This explains the relatively long calculating time required, even for
filling a small area.  Xi-Paint always starts with the top left and
fills towards the bottom right.

Using this method you can create a pseudo 3-D effect.  This is
because the right and left border will always display the rest of the
brush. If you understand the methodology involved, you'll be able
to understand this aspect of Xi-Paint.

Set every setting once again in the same manner as before in the
freehand area set tings.  This time select a filled ellipse (<E>).  If
you draw an ellipse this time you'll notice there is no 3-D effect,
but the lower half is filled with blue and the upper half is filled with
red.

  @{" 11.2.1  Understanding Area Filling " link "k11p2p1"}

@endnode


@node k11p2p1 "Understanding Area Filling"
@toc "contents"


 @{b}11.2.1     Understanding Area Filling @{ub}


This continues where the previous chapter left off.  You can easily
recognize how  Xi-Paint  generates a filled ellipse. The upper half
will be filled from the top left to the bottom right. The lower half
will be filled from the bottom left to the upper right. We encourage
you to test the other drawing tools.  You'll notice right away that
the results depend on the manner that Xi-Paint uses to generate
specific objects. An unfilled ellipse (<e>) will be put together using
4 parts. Both of the upper sections will be drawn from the top to
the bottom, and the lower will be drawn from the bottom to the
top.

@endnode


@node k11p3 "Some Tips"
@toc "contents"


 @{b}11.3       Some Tips @{ub}


To get used to the brush results choose the freehand tool (<d>).
By drawing some outlines, you'll recognize the different possibilities,
depending upon if you start your line on the bottom or on the top.
The 3D effect will be disturbed by changing the direction. It's even
more visible if you use the line tool. Draw the following four lines
(use the shaded rectangle as brush and the paint mode "solid"):

	 @{" Figure: Lines " system "Run >NIL: <NIL: Display bilder/23.Linien"}

A physically impossible figure will appear.

  @{" 11.3.1  Getting Experience " link "k11p3p1"}

@endnode


@node k11p3p1 "Getting Experience"
@toc "contents"


 @{b}11.3.1     Getting Experience @{ub}


The result will be different which each setting and with different
drawing directions.  Most of the time the 3D setting will be lost.
Using the brush effects will need some planning and experience.

@endnode


@node k11p4 "New Shapes Using Brushes"
@toc "contents"


 @{b}11.4      New Shapes Using Brushes @{ub}


Xi-Paint offers rectangles with angular corners. Normally that will
be enough, but in certain cases you'd like to get a rectangle with
rounded corners.  Let's deal with how to do that.  Let's create a
filled, unicolor rectangle with rounded corners.

	 @{" Figure: Rectangle with round corners " system "Run >NIL: <NIL: Display bilder/24.Rechteckrundeecken"}

  @{" 11.4.1  A Rectangle with Rounded Corners " link "k11p4p1"}
  @{" 11.4.2  A Frame Instead of the Filled Rectangle " link "k11p4p2"}
  @{" 11.4.3  A Rectangle with Sloped Edges " link "k11p4p3"}

@endnode


@node k11p4p1 "A Rectangle with Rounded Corners"
@toc "contents"


 @{b}11.4.1     A Rectangle with Rounded Corners @{ub}


Set the color requester the color you want your rectangle to appear.
Then set the paint mode to "solid" and activate the one point brush.
For a painting tool choose the filled ellipse.  Now draw a circle or
an ellipse.  Each quarter of it will be one angle of our rectangle.
Make sure that your ellipse does not become too big. The diameter
should be around 20 to 30 points. Later on you'll understand why.
After drawing the ellipse cut the whole ellipse, not just parts of it,
out. It is unavoidable not to cut out the ellipse together with some
parts of the background. That's the reason to mask it.

To do so, just click, as you did with the fence, the background color
in the color requester. After that the background parts can be made
invisible by pressing < / >. This brush we be used to construct the
rectangle with rounded corners. Select the filled rectangle tool and
draw a rectangle. Dependent upon the size of the rectangle and the
speed of your computer this may last up to a few minutes.

@endnode


@node k11p4p2 "A Frame Instead of the Filled Rectangle"
@toc "contents"


 @{b}11.4.2     A Frame Instead of the Filled Rectangle @{ub}


Let's not use the unfilled rectangle tool as the frame will be as
thick as the ellipse is - an undesirable result.  Before painting the
frame, call the grid requester (<rightAmiga> <G>).  There you
can set the desired thickness of the frame.  Set X and Y to the
desired values. You can even set the horizontal and vertical lines to
different thickness. Let's choose "3". Activate the grid by pressing
"on". Do you have the ellipse brush from the prior selection? No?
Then deactivate the grid again and "regenerate" it by using the
brush manager.

Now activate the filled rectangle tool and draw a rectangle in the
desired size.  A filled rectangle with rounded corners will appear.
Now call the color requester and set one of the color box to the
background color. Activate it as current color and choose the paint
mode "solid" (<right Amiga > <1>). For a painting tool reuse the
filled rectangle.  Position the pointer in the left top corner, where
you've started with the previous rectangle. Before drawing the new
rectangle, move the mouse pointer exactly one grid position to the
right and one position down. This will be easier using the keyboard
by pressing <left Amiga> and using the cursor keys.

After having reached the desired position press the <left ALT>.
This simulates a press of the left mouse button.  Keep both keys
pressed and drag the rubber band using the cursor keys for the
desired size. After releasing all the keys, Xi-Paint paints this second
rectangle. The result will be a frame with the desired width. If you
do not like the result, use "Undo" (<u>) and try it again.

	 @{" Figure: Frame with round corners " system "Run >NIL: <NIL: Display bilder/25.Rahmenrundeecken"}

@endnode


@node k11p4p3 "A Rectangle with Sloped Edges"
@toc "contents"


 @{b}11.4.3     A Rectangle with Sloped Edges @{ub}


Use a rhomboid brush instead of the ellipse shaped one. This rhom-
boid shape is easy to get in the grid requester. Set the grid width
to 10 points.  Paint again with the one point brush and now use
the polygon tool (<W>).  Paint a rhomboid as it is shown above.
The corners should be distanced one grid position from each other.
After doing that, deactivate the grid and cut out the rhomboid as
brush. Mask again the background color as you did it before. The
result will be a rectangle with sloped corners. If you use this brush
together with very small ellipses, the result will be a strange look
alike. These suggestions are just some ideas for your experimenta-
tion. Play with the shades.

	 @{" Figure: Rhomboeder " system "Run >NIL: <NIL: Display bilder/26.Raute"}

@endnode


@node k11p5 "Escaping a Running Routine"
@toc "contents"


 @{b} 11.5      Escaping a Running Routine @{ub}


If you suspect Xi-Paint may need too long for an operation or if
it's crashed, simply press <ESC>. A small requester which shows
the work in progress will open and will ask you if the you want
to cancel the currently running operation.  If you have called the
requester to get some information, just press "No". Pressing "Yes"
will cancel the current project.  To undo the changes completed,
simply remove them using "UNDO."

@endnode




@node k12 "Chapter  12"
@toc "contents"


 @{b}@{fg highlight}Chapter  12 @{ub}@{fg text}


 @{b}Working  with  Fonts @{ub}


By using the different Xi-Paint tools and paint modes you can get
several effects, which eclipse a lot of very expensive video titling
programs.  The following pages will give you an overview of some
possible experiments. Remember to try all the possibilities by your-
self.

  @{" 12.1  Text with Shade " link "k12p1"}
       @{" 12.1.1  Shades for Individual Letters " link "k12p1p1"}
  @{" 12.2  Scripts and Brushes " link "k12p2"}
       @{" 12.2.1  Dealing With Text " link "k12p2p1"}
  @{" 12.3  New Script Styles " link "k12p3"}
       @{" 12.3.1  Letters with Rounded off or Sloped Corners " link "k12p3p1"}

@endnode


@node k12p1 "Text with Shade"
@toc "contents"


 @{b}12.1      Text with Shade @{ub}


This  is  a  very  effective  trick.   Call  the  color  requester  (<right
Amiga> <C>) and assign red (255, 0, 0) and yellow (255, 255,
0) to the first two colorboxes. DON'T FORGET TO CLICK "AS-
SIGN". Now open the shade requester (<right Amiga> <U>) and
set a "two color - vertical" shade.  Next call the style requester
(<right Amiga> <T>) and set a big script size.  Click the disk
symbol and choose from the font requester a font you know to be
relatively thick (try one ending with "bold" or "_B"). Set the size
to a minimum of 50 points (depending upon your resolution you can
also choose larger sizes). 50 point fonts are optional for 640x480 or
800x600.

	 @{" Figure: Style-Requester " system "Run >NIL: <NIL: Display bilder/27.Stylerequester"}

Do not change the values for xdpi and ydpi and set antialiasing
to "on".  That's especially important for non  compugraphic but
common Amiga formatted fonts.  Now open a new worksheet.  Set
the paint mode to "shade"(<right Amiga> <3>) and use the text
tool <t>. It is important to use the one point pencil. A text input
requester will appear. Finish your input with<enter>. The tipped
letters or signs will stick as brush on the pointer and can dragged to
the position you want. By pressing the left mouse button you can
fix the text to your worksheet.  You'll be amazed with the result.
Of course you can use each possible shade. Try for example the four
point shade. But how to use the shade for each individual letter or
sign?

  @{" 12.1.1  Shades for Individual Letters " link "k12p1p1"}

@endnode


@node k12p1p1 "Shades for Individual Letters"
@toc "contents"


 @{b}12.1.1     Shades for Individual Letters @{ub}


Clear the old worksheet.  Set the worksheet paint mode to "solid"
(>right Amiga> <1>). Now insert your text again (use the brush
requester or the text tool).  Now as sign to your color requester
the first four boxes with red (255,0,0), yellow (255,255,0), green
(0,255,0) and blue (0,0,255). In the shade requester choose 4 color
shade.  Check it using the preview.  Now use the one point pencil
and choose the paint mode "shade".  Painting tool is "fill" (<f>).
Now click each letter of your text.  The shade will be assigned to
each letter.

	 @{" Figure: Text with shading " system "Run >NIL: <NIL: Display bilder/28.Textverlauf"}

@endnode


@node k12p2 "Scripts and Brushes"
@toc "contents"


 @{b}12.2      Scripts and Brushes @{ub}


To get the most beautiful results you need a lot of practice and ex-
perimentation. Copy the following methods exactly for exercising,
otherwise the text might appear a little bit ugly.

  @{" 12.2.1  Dealing With Text " link "k12p2p1"}

@endnode


@node k12p2p1 "Dealing With Text"
@toc "contents"


 @{b}12.2.1     Dealing With Text @{ub}


Open the color requester and assign the first four color boxes again
with red, yellow, green and blue. Activate a 4 color shade. For pain-
ting mode use"shade"and as tool "filled rectangle" (<R>).  Then
activate the magnifier because our rectangle should have exactly
8x6 points. Then choose the tool for cutting out rectangular brus-
hes (<b>) and take that rectangle as brush.  Avoid cutting out
parts of the background.  Turn off the magnifier.  Choose a very
fat font from the style requester - a size of at least 75 points.  Set
the paint mode to "solid" and activate the text tool.  Insert any
short text.  Try inserting a space between each letter because of
the fat letters.  Finish your inserting with <enter> and insert the
text at any place in your worksheet.  The text will appear with a
very effective 3D effect.  The result will be even more astounding,
if you choose a "2 color, vertical" shade and activate the one point
pen cil, the filling tool and as Paint mode "shade". Now click each
letter. Well, how do you like the result??

	 @{" Figure: Text with brush " system "Run >NIL: <NIL: Display bilder/29.Textpinsel"}

@endnode


@node k12p3 "New Script Styles"
@toc "contents"


 @{b}12.3       New Script Styles @{ub}


Sometimes you'll need one or two very big letters as background,
for example.  In this instance you'd like to get rounded off letters.
Unfortunately you may not have the right font. So, what to do?

  @{" 12.3.1  Letters with Rounded off or Sloped Corners " link "k12p3p1"}

@endnode


@node k12p3p1 "Letters with Rounded off or Sloped Corners"
@toc "contents"


 @{b}12.3.1     Letters with Rounded off or Sloped Corners @{ub}


By using the brushes together with text, a desired corner shape
can be created. Notice that this is useful for very big letters (bigger
than 150 points). Draw a circle or a rhomboid. It's size depends on
the chosen letter size.  For a 150 point letter use a rhomboid with
4 points or a circle with a diameter about 8 points.  Cut out this
brush and mask the background color (choose the background color
from the color reque ster and press </>). Now set the desired font,
enter your text and write it to your worksheet. You'll get your text
and the desired rounded off corners. Of course you can arrange the
corner shapes however you want.  You can brighten up the letters
for example with a shade to add an extra touch.

@endnode



@node k13 "Chapter  13"
@toc "contents"


 @{b}@{fg highlight}Chapter  13 @{ub}@{fg text}


 @{b}Mask @{ub}


The Mask function is one of the most powerful features of a com-
puter paint program.  In the world of material art the ability to
mask off portions of an image is used by airbrush artists, professio-
nal photographers, printers, and even sign makers.  With the help
of the mask function it is easily possible to separate a person from
any type of background or even to change the color of the sky from
blue to orange. This is one of the more difficult features to master
but one of the most rewarding!

First of all, we work with an example. Open the file "Eis.jpeg".

	 @{" Figure: Eis.jpeg " system "Run >NIL: <NIL: Display bilder/73.Eis"}

We start with the simplest kind of mask.  We want to paint only
in the background of the ice-cream wafer. Normally, you can paint
around the wafer, but it is very difficult not to destroy the wafer.
Now we want to make a mask, which stencils out the wafer. Open
the mask menu with the shortcut <Amiga> <M>.

	 @{" Figure: Mask-Requester " system "Run >NIL: <NIL: Display bilder/72.maskenrequester"}

Note:  the mask-functions always work on the project activated
most recently!  So, if you have many projects open, click on this
one, which you want to manipulate.

Often when you click on Preview (the mask, "show"), and a new
project, which contains only the grey-mask of the previous selec-
ted picture will open.  This window is then active.  For the next
mask-operation, you have to activate your paint-project or close
the preview, so the last project will be activated.

  @{" 13.1  Painting on the Mask " link "k13p1"}
  @{" 13.2  Mask-Preview " link "k13p2"}
  @{" 13.3  Exempt Motives " link "k13p3"}
       @{" 13.3.1  The Color Look Up Table " link "k13p3p1"}

@endnode


@node k13p1 "Painting on the Mask"
@toc "contents"


 @{b}13.1      Painting on the Mask @{ub}


The next step is to tell Xi-Paint which color we want to use for
masking. An easy way is to press "#" to get the actual color after
the next mouseclick. So, please click after pressing "#" on the black
of the ice-cream-project.  If the support-color in the mask-menu is
on 0, the actual color-register is on 0, the rectangle in the mask-
menu will be black.  If the support color is not 0, please move the
scroller to the left.

Then, we want to paint on the mask. So click on the top-left button
one time, to get the feature "Paint on Mask".

After this, we have to tell Xi-Paint the mask-mode.  This is done
by choosing the right mode in the mask-menu (the menus from the
mask-window). There we choose "One Color" or we press <Amiga>
<o>.

Now we click on "Add". Xi-Paint calculates the mask.

@endnode


@node k13p2 "Mask-Preview"
@toc "contents"


 @{b}13.2       Mask-Preview @{ub}


To have a look to the mask, we can click on "Show". Xi-Paint opens
a new project which contains the actual mask in black/white. Now
close this project.

Click on "Switch on Mask?" to activate the mask-function.  Then
you can paint on the picture "Eis.jpeg" without destroying the wa-
fer.

	 @{" Figure: Mask of Icecream " system "Run >NIL: <NIL: Display bilder/87.eismaske"}

@endnode


@node k13p3 "Exempt Motives"
@toc "contents"


 @{b}13.3       Exempt Motives @{ub}


If we have a complicated picture and we want to exempt for example
a person in front of the sea, we need a little more knowledge of -
Paint. For the next Example please open the picture "Blume.jpeg".

	 @{" Figure: Blume.jpeg " system "Run >NIL: <NIL: Display bilder/88.blume"}

Our target is to work with the flower without the leaves.

	 @{" Figure: Flower without background " system "Run >NIL: <NIL: Display bilder/89.blumefrei"}

One of the ways to realize this is to mask out the green color. But
this way won't work due of some reflections on the flower itself.

Also the Saturation and Contrast-mask functions are not useful
because of the same values of the leaves and the flower.

The last possibility is to do it with the CLUT (Color Look Up
Table).

  @{" 13.3.1  The Color Look Up Table " link "k13p3p1"}

@endnode


@node k13p3p1 "The Color Look Up Table"
@toc "contents"


 @{b}13.3.1     The Color Look Up Table @{ub}


First choose in the menu bar the entry "CLUT".  Next, we have
to pick some colors from the picture. Therefore Xi-Paint gives you
the ability to pick a square of 1x1 up to 20x20 pixels at one time.
You can set the width with the slider "CLUT length".  Move this
slider to 20, then click on "Clear Mask" to clear the old mask out
of the picture.
With "Get Clut" you can pick a portion of pixels, which will be
masked out.  The mouse pointer will change to a square.  Pick
the middle of the flower of your project.  Then click "Add" in the
mask-window.
Next click "Show" to look at the mask.   If you haven't chosen
enough pixels to mask out the flower, then pick some new CLUTS
with "Get CLUT" and "Add".

	 @{" Figure: Mask of flower " system "Run >NIL: <NIL: Display bilder/90.Blumenmaske"}

Don't forget to close the actual preview-window!
Now, as you will see, the mask is white around the flower, and black
on the leaves. We already want to paint on the leaves. So we have
to invert the mask. Do this by choosing "Invert" in the mask-menu
(<Amiga> <v>).
This will invert the actual mask of the actual project.
In this example, you never will get all of the pixels correct. So we
have to do some manual work to mask out the flower perfectly. Do
this by painting with a solid color in the zoom-mode with one single
pixel.

	 @{" Figure: Flower almost finished " system "Run >NIL: <NIL: Display bilder/91.Blumefastfertig"}

This will also reflect in the mask. After switching on the mask, you
can paint around and over the flower - the leaves will disappear,
the flower will be exempt.

	 @{" Figure: Flower finished " system "Run >NIL: <NIL: Display bilder/89.Blumefrei"}

@endnode




@node k14 "Chapter  14"
@toc "contents"


 @{b}@{fg highlight}Chapter  14 @{ub}@{fg text}


 @{b}Layers @{ub}

  @{" 14.1  Compositions with Layers " link "k14p1"}
  @{" 14.2  The Theory " link "k14p2"}
  @{" 14.3  Another example for using the layers " link "k14p3"}

@endnode


@node k14p1 "Compositions with Layers"
@toc "contents"


 @{b}14.1       Compositions with Layers @{ub}


This feature is one of the specialties of Xi-Paint.  It allows you
to compose many different pictures into one. The composition de-
pends on the Maximum (Alpha) Mask, wherein some of the layers
have a special function. The different layers are composed by ma-
thematical functions which have as parameters the hue of a color,
the intensity, the value or a value of the Alpha-Mask.


Example

Open a new project with the width and height of 150. Then choose
load a picture, to open the file "Blumeklein.jpeg". This is our first
picture for the composition.

	 @{" Figure: Blumeklein.jpg " system "Run >NIL: <NIL: Display bilder/88.Blume"}

Now open a second project,  which has the width and height of
150 pixels (create this with New).  In this project, we will paint a
circle, which is bright in the middle and becomes darker towards
the borders. We are working with a little project, because we will
need a bit of memory for the different projects.

To paint this circle, we create a pen. Open the pen-requester (with
Amiga P) and click on an empty record. Then click on "Generate
Pen" to open a new window.  Then click on "Gen.  Curve" .  Give
both sliders the value of 100. Close this window and put the pixel-
slider to the maximum of 100.  Then click on "round" to generate
the new Pen.

Now pick from the Menu of the new project the painting mode
"Solid".  To place the pen in the middle of the flower, click on
the border of the flower-picture and select on the menu bar "Back-
ground". Now select the new project window (click on the border)
and switch on the light table. Now you can see the flower in lower
intensity. Place the actual pen in the middle of the flower and press
the left mouse button for a few seconds.

	 @{" Figure: Pen " system "Run >NIL: <NIL: Display bilder/92.stift"}

Then turn off the light table.  Now you have 2 pictures for the
composition.

	 @{" Figure: Layerwindow " system "Run >NIL: <NIL: Display bilder/93.Layerkorrekt"}

Open the layer window. Click on "Blumeklein.jpeg", then on "add".
The name appears to the right.  Then click on "project 2" and on
"add".  Then click on show.  After a few seconds, a new window
will open which shows you the composition of the two projects.

	 @{" Figure: Flowerlayer finished " system "Run >NIL: <NIL: Display bilder/94.Layerfertig"}

Note: All Layers have to be the same size for optimal results!

If you don't have enough memory (Memory-Warn),  please close
some unused boxes to save memory.

@endnode


@node k14p2 "The Theory"
@toc "contents"


 @{b}14.2       The Theory @{ub}


The example above was a very easy one.  But has happened?  -
Paint has taken the intensities of the first project (in the listview
gadget, right) and the colors from the second project.

If you have three pictures, Xi-Paint takes the intensities (bright-
ness) of the first project, the colors and saturation-values from the
second one.  Then it takes the values from the Alpha-Mask of the
third project, and calculates the percentage. Then it composes the
result above with the third picture in relation to the mask value.

	 @{" Figure: 3-Layer picture " system "Run >NIL: <NIL: Display bilder/95.3layer"}

If you have more pictures, the last point will be repeated.

@endnode


@node k14p3 "Another example for using the layers"
@toc "contents"


 @{b} 14.3      Another example for using the layers @{ub}


Open three projects, each the same size. Make a white Background
(clear with white K). Paint a bicycle on the first project with a
black smooth airbrush. Choose for this project "Background" from
the paint-mode-menu. Then activate the second project and switch
on the light table.  Take a larger airbrush and choose color cycle
from the paint-mode-menu. Colorize the bicycle.

Finally paint in the third project with "As-it-is" some Airbrush-
dots, around the bicycle.  Alternative you can choose a digitized
picture and clear the Alpha-Mask in the region of the bicycle.

After composing these three pictures, you have a new composition
with a background and a colorized object.

	 @{" Figure: 4-Layer picture " system "Run >NIL: <NIL: Display bilder/96.4layer"}

@endnode




@node k15 "Chapter  15"
@toc "contents"


 @{b}@{fg highlight}Chapter  15 @{ub}@{fg text}


 @{b}The  Painting  Tools @{ub}


	 @{" Figure: Tool icons " system "Run >NIL: <NIL: Display bilder/30.Zeichenwerkzeuge"}

The painting tools are the heart of Xi-Paint. There are several tools
which allow you nearly free composition of your paintings.

  @{" 15.1  Two-Part Buttons " link "k15p1"}
  @{" 15.2  The Single Point Manner (Freehand tool) " link "k15p2"}
  @{" 15.3  Regular Freehand Tool " link "k15p3"}
  @{" 15.4  Filled Freehand Outlines " link "k15p4"}
  @{" 15.5  Straight Line Tool " link "k15p5"}
  @{" 15.6  Curve Tool " link "k15p6"}
  @{" 15.7  Rectangle Tool " link "k15p7"}
  @{" 15.8  Ellipse Tool " link "k15p8"}
  @{" 15.9  Polygon Tool " link "k15p9"}
       @{" 15.9.1  Closing the Polygon " link "k15p9p1"}
  @{" 15.10 Filling Tool " link "k15p10"}

@endnode


@node k15p1 "Two-Part Buttons"
@toc "contents"


 @{b}15.1      Two-Part Buttons @{ub}


The painting tools can be activated by its buttons or by short cuts.
Notice that some buttons of the tool requester are separated in two
different halves with different functions. You'll recognize it by the
different look alike of the two halves of a button.  So take care to
press the desired half. Each painting tool will work with the chosen
painting mode and the last chosen brush or pencil.

@endnode


@node k15p2 "The Single Point Manner  (Freehand tool)"
@toc "contents"


 @{b}15.2      The Single Point Manner  (Freehand tool) @{ub}


Shortcut: none

	 @{" Figure: Freehand icon " system "Run >NIL: <NIL: Display bilder/31.Freihand"}

This tool is for freehand drawing.  But because these lines will be
composed of single points, this tool is made for inserting brushes or
to set points.  So if you want to draw the outline of an object you
want to fill afterwards, never use this tool. Otherwise the color will
run out.

@endnode


@node k15p3 "Regular Freehand Tool"
@toc "contents"


 @{b}15.3      Regular Freehand Tool @{ub}


two time occupied tool:

Top shortcut: F
Bottom shortcut: D

	 @{" Figure: Regular Freehand Icon " system "Run >NIL: <NIL: Display bilder/32.Freihanddurchgehend"}

This tool produces run trough lines. If you move the mouse too fast.
(what too fast means depends on your computer!) the line will have
squares. While using pens or brushes bigger than 10 points you can
make this procedure faster by setting the pixel stream bigger than 1.
But take care to set odd numbers, otherwise ellipses, for example,
will just be painted in one half.

@endnode


@node k15p4 "Filled Freehand Outlines"
@toc "contents"


 @{b}15.4      Filled Freehand Outlines @{ub}


The bottom part of this tool offers you the ordinary freehand tool.
The top part produces filled outlines.  You also paint the line by
holding the left mouse button pressed. But suddenly after releasing
the button the first and last point of the line will be put together
and the resulting area will be filled.  Xi-Paint also recognizes if a
line crosses itself.

@endnode


@node k15p5 "Straight Line Tool"
@toc "contents"


 @{b}15.5      Straight Line Tool @{ub}


Shortcut: v

	 @{" Figure: Straight Line Icon " system "Run >NIL: <NIL: Display bilder/33.Gerade"}

Xi-Paint starts the line where you press the left mouse button first
and ends it where you release the button.  If you use a shade, a
cycle, or a brush the drawing direction causes different results.

@endnode


@node k15p6 "Curve Tool"
@toc "contents"


 @{b} 15.6      Curve Tool @{ub}


Shortcut: q

	 @{" Figure: Curve Icon " system "Run >NIL: <NIL: Display bilder/34.Kurve"}

Place your mouse pointer to the beginning of the desired line and
press left mouse button.  Now drag a line to your desired ending
point.  After releasing the button the line "sticks" on the pointer
and the line can be formed to a curve.  By pressing again the left
button the curve can be fixed. Sinus curves and similar curves can
be produced by putting single curves together.

@endnode


@node k15p7 "Rectangle Tool"
@toc "contents"


 @{b}15.7      Rectangle Tool @{ub}


twice occupied tool

Top shortcut: r
Bottom shortcut: R

	 @{" Figure: Rectangle Icon " system "Run >NIL: <NIL: Display bilder/35.Rechteck"}

With this tool rectangles and squares can be produced.  Place the
pointer to one place and press the left button.   Then drag the
rectangle to the size you want. The diagonal opposite point will be
the other corner.  After releasing the button, the rectangle will be
painted. The frame of a rectangle will always be painted clockwise.
That's important to know for using Cycles, shades and brushes.

@endnode


@node k15p8 "Ellipse Tool"
@toc "contents"


 @{b}15.8       Ellipse Tool @{ub}


twice occupied tool

Top shortcut: e
Bottom shortcut: E

	 @{" Figure: Ellipse Icon " system "Run >NIL: <NIL: Display bilder/36.Ellipse"}

This tool is used to paint ellipses. Move the pointer to the middle of
the desired ellipse and drag the ellipse to the size you want. After
releasing the button, the ellipse will be painted.  The ellipse can
be painted filled or outlined. The ellipse frame is produced in four
steps.  First the right top quarter and the left top quarter will be
painted and afterwards, beginning with the very bottom point of
the ellipse, the right and then the left bottom part will be painted.

@endnode


@node k15p9 "Polygon Tool"
@toc "contents"


 @{b}15.9       Polygon Tool @{ub}


twice occupied tool:

Top shortcut: w
Bottom shortcut: W

	 @{" Figure: Polygon Icon " system "Run >NIL: <NIL: Display bilder/37.Polygon"}

Move the pointer to the start of the polygon and press the left
mouse button.  Then release the button.  The "rubberband" will
stick on your pointer. After moving it to the different corners press
the button again. The one line will be painted and the new one will
be started at the new corner.

  @{" 15.9.1  Closing the Polygon " link "k15p9p1"}

@endnode


@node k15p9p1 "Closing the Polygon"
@toc "contents"


 @{b}15.9.1     Closing the Polygon @{ub}


You can set the last point exactly at the beginning of the first
line (very difficult!)  or you press the right mouse button.  This
will automatically paint a line between the first and the last point
of your polygon..  The lines will be painted in the same order as
painted.  Painting a filled polygon will occur linewise, from left to
right and from top to bottom.

@endnode


@node k15p10 "Filling Tool"
@toc "contents"


 @{b}15.10        Filling Tool @{ub}


Shortcut: f

	 @{" Figure: Fill Icon " system "Run >NIL: <NIL: Display bilder/38.Fuellen"}

Just click a point inside the area you want to be filled. If the color
runs out just check by magnifier if your object is really closed. For
filling the selected painting mode and brush will be used.  It will
be filled from left to the right and linewise from top to bottom.
For speeding up the filling function you can choose from system-
2-window the option "fast fill". But notice that an optional alpha
mask will be deleted in this way. Also undo will be impossible.

@endnode




@node k16 "Chapter  16"
@toc "contents"


 @{b}@{fg highlight}Chapter  16 @{ub}@{fg text}


 @{b}More  Aids @{ub}


	 @{" Figure: More Tool Icons " system "Run >NIL: <NIL: Display bilder/39.weiterehilfsmittel"}

Xi-Paint offers many more tools which will help to make your work
easier.

  @{" 16.1  Take a Rectangular Brush " link "k16p1"}
  @{" 16.2  Take a Polygonal Brush " link "k16p2"}
  @{" 16.3  Take a Freehand Brush " link "k16p3"}
  @{" 16.4  Light Table " link "k16p4"}
  @{" 16.5  Magnifier " link "k16p5"}
       @{" 16.5.1  Flexible Settings in the Zoom-Requester " link "k16p5p1"}
  @{" 16.6  Text " link "k16p6"}
  @{" 16.7  Undo " link "k16p7"}
       @{" 16.7.1  Undo for a Large Number of Steps " link "k16p7p1"}
       @{" 16.7.2  To Free Undo Memory " link "k16p7p2"}
  @{" 16.8  Redo " link "k16p8"}
  @{" 16.9  Help " link "k16p9"}
  @{" 16.10 Erase " link "k16p10"}
  @{" 16.11 Take a Pen " link "k16p11"}
       @{" 16.11.1 Sizing Brushes by Mouseclick " link "k16p11p1"}
  @{" 16.12  Generate a One Point Pen " link "k16p12"}
  @{" 16.13  Info " link "k16p13"}

@endnode


@node k16p1 "Take a Rectangular Brush"
@toc "contents"


 @{b}16.1       Take a Rectangular Brush @{ub}


Shortcut: b

	 @{" Figure: Rectangular Brush Icon " system "Run >NIL: <NIL: Display bilder/40.Brushrechteck"}

Just drag a rectangle around the desired area.  Everything inside
will be part of the brush.  After taking a brush it will stick at the
pointer as it is or as a symbolic rectangle, depending on the brush
size.  The size (after which the brush will be shown while moving
as a symbol) can be varied by ARexx or by using the "settings"
requester.  It may happen that after cutting out a brush nothing
will occurs. This happens if you have too little chip memory. Close
all unnecessary requesters and try it again.

@endnode


@node k16p2 "Take a Polygonal Brush"
@toc "contents"


 @{b}16.2       Take a Polygonal Brush @{ub}


Shorctut: /

	 @{" Figure: Polygonial Brush Icon " system "Run >NIL: <NIL: Display bilder/41.Brushpolygon"}

Use this tool analogous to the polygon tool. For "how the program
shows the brush while moving" refer to the section before.

@endnode


@node k16p3 "Take a Freehand Brush"
@toc "contents"


 @{b}16.3       Take a Freehand Brush @{ub}


Shortcut: &

	 @{" Figure: Freehand Brush Icon " system "Run >NIL: <NIL: Display bilder/42.Brushfreihand"}

Use this tool in the same way as the freehand tool.

@endnode


@node k16p4 "Light Table"
@toc "contents"


 @{b}16.4       Light Table @{ub}


Shortcut: <alt> <u>

	 @{" Figure: Lighttable Icon " system "Run >NIL: <NIL: Display bilder/43.Leuchttisch"}

The object of the activated window will be shown in darker colors
and the object of the window which had been defined as background
will shine through. This enables you to simulate tracing. The light
table will not work beside activated magnifier.  How to assign a
background painting to a painting window is explained in the chap-
ter about painting modes, under the topic "background picture".

@endnode


@node k16p5 "Magnifier"
@toc "contents"


 @{b}16.5       Magnifier @{ub}


Shortcut: <alt> <m>

	 @{" Figure: Magnifier Icon " system "Run >NIL: <NIL: Display bilder/44.Lupe"}

For each activated painting window its own magnifier window can
be assigned. The mouse pointer will show a rectangle which shows
the last magnified cut out part.  Click the left mouse button and
the magnifier window will open. It is possible to draw in the pain-
ting window as well as in the magnifier window. The changes will
immediately appear in the other window.

  @{" 16.5.1  Flexible Settings in the Zoom-Requester " link "k16p5p1"}

@endnode


@node k16p5p1 "Flexible Settings in the Zoom-Requester"
@toc "contents"


 @{b}16.5.1     Flexible Settings in the Zoom-Requester @{ub}


The magnifying factors can be set as desired by changing the values
of the zoom requester. Also it is possible to change the magnifying
factor with the + and - keys. Moving is possible with the Cursor-
keys.

@endnode


@node k16p6 "Text"
@toc "contents"


 @{b}16.6       Text @{ub}


Shortcut: t

	 @{" Figure: Text Icon " system "Run >NIL: <NIL: Display bilder/45.text"}

This tool is used for inserting any text in any painting window.
After calling a requester an input box will appear. You can insert
the desired text will all common editing possibilities.

	 @{" Figure: Textinput Requester " system "Run >NIL: <NIL: Display bilder/86.Texteingabe"}

First enter the text. Xi-Paint will then generate, using the selected
style (style requester!) and size, a brush with text. This brush can
be used like every other brush with all its special possibilities.

NOTICE, THAT Xi-Paint IS NOT A TEXTPROGRAM.

Each generated text is also available via brush manager.

@endnode


@node k16p7 "Undo"
@toc "contents"


 @{b}16.7       Undo @{ub}


Shortcut: u

	 @{" Figure: Undo Icon " system "Run >NIL: <NIL: Display bilder/46.Undo"}

With undo you can delete the latest steps, regardless of what it
was.

  @{" 16.7.1  Undo for a Large Number of Steps " link "k16p7p1"}
  @{" 16.7.2  To Free Undo Memory " link "k16p7p2"}

@endnode


@node k16p7p1 "Undo for a Large Number of Steps"
@toc "contents"


 @{b}16.7.1     Undo for a Large Number of Steps @{ub}


You can undo as many steps as your memory (the memory of the
computer!)  allows it to.  If the computer runs out of memory the
oldest of the steps will be forgotten.  There is an individual undo
memory for every painting window.

@endnode


@node k16p7p2 "To Free Undo Memory"
@toc "contents"


 @{b}16.7.2     To Free Undo Memory @{ub}


If your computer has enough memory you need not worry about
this.  With under 2MB RAM it may be possible that, because of
undo, some functions which need a lot of memory become unusable.
It's recommended to make the undo memory empty by "empty
undo" (<right Amiga> <f>) from the menu.  This empties the
whole undo memory.

@endnode


@node k16p8 "Redo"
@toc "contents"


 @{b}16.8       Redo @{ub}


Shortcut: U

	 @{" Figure: Redo Icon " system "Run >NIL: <NIL: Display bilder/47.Redo"}

In the same manner that you can make each step undone, you can
also REDO them again.  In this way mistakes will no longer be a
problem.

@endnode


@node k16p9 "Help"
@toc "contents"


 @{b}16.9       Help @{ub}


Shortcut: HELP

	 @{" Figure: Help Icon " system "Run >NIL: <NIL: Display bilder/78.Hilfereq"}

Pressing HELP will give you information for the most important
functions of Xi-Paint.  Just place the pointer on the icon or other
item you need information about and press help.  Immediately a
requester with the information will open.  You can scroll the text
with the scroll bars. You can close the help requesters by pressing
"close".  If there is no information on a topic, the help requester
will be empty.

@endnode


@node k16p10 "Erase"
@toc "contents"


 @{b}16.10        Erase @{ub}


Shortcut: none

	 @{" Figure: Erase Icon " system "Run >NIL: <NIL: Display bilder/75.Schwamm"}

Click the sponge symbol and the actual painting window will be
cleared with the actual painting color.  If you made changes and
have not saved them before using the sponge, Xi-Paint will ask if
you want to save your changes before erasure.

@endnode


@node k16p11 "Take a Pen"
@toc "contents"


 @{b}16.11       Take a Pen @{ub}


Shortcut: ,

	 @{" Figure: Take-Pen Icon " system "Run >NIL: <NIL: Display bilder/76.getsize"}

The pen management is carried out by its own requester, which
allows the generation of any circular or angular pens. Circular ones
can also be created as airbrushes.

  @{" 16.11.1 Sizing Brushes by Mouseclick " link "k16p11p1"}

@endnode


@node k16p11p1 "Sizing Brushes by Mouseclick"
@toc "contents"


 @{b}16.11.1      Sizing Brushes by Mouseclick @{ub}


By using this function you need not change to the pen requester
each time you want to resize your pen size. Using this function you
can drag an ellipse by mouse to create the size you want for your
pen size.  Its lookalike will be defined by the settings in the pen
requester. By taking a new pen the actual pen will be dropped.

@endnode


@node k16p12 "Generate a One Point Pen"
@toc "contents"


 @{b}16.12       Generate a One Point Pen @{ub}


Shortcut: .

The one point pen is a special case.  On the one hand it is very
difficult to generate manually. On the other hand you'll never need
a pen more often than this one.  That's why Xi-Paint offers a one
point pen by key pressing.  If you press < .  > , Xi-Paint imme-
diately generates the desired brush.  But notice that this function
overwrites the actual pen of the pen manager.

@endnode


@node k16p13 "Info"
@toc "contents"


 @{b}16.13       Info @{ub}


shortcut: <alt> <i>

	 @{" Figure: Info Icon " system "Run >NIL: <NIL: Display bilder/48.info"}

After calling info a small requester will open, which shows you the
number of your Xi-Paint version and its date of production. It will
also tell you the names of the Xi-Paint programmers. After clicking
"understood" button, the requester will close again.

@endnode



@node k17 "Chapter  17"
@toc "contents"


 @{b}@{fg highlight}Chapter  17 @{ub}@{fg text}


 @{b}Requesters @{ub}


Xi-Paint offers several requesters for setting many different settings.
Call each requester by clicking on its tool in the toolbox or by
choosing the point from the "menus" menu.  Some requesters can
just be called by menu. A requester works in the same way a paint
window does but doesn't have scrollers after it's made smaller.

       @{" 17.0.1  Common Elements of the Different Requesters " link "k17p0p1"}
  @{" 17.1  Brush Requester " link "k17p1"}
       @{" 17.1.1  Automatic Adaption of the Scale " link "k17p1p1"}
       @{" 17.1.2  Brush Menu " link "k17p1p2"}
       @{" 17.1.3  Save " link "k17p1p3"}
       @{" 17.1.4  Delete (from brush pool) " link "k17p1p4"}
       @{" 17.1.5  Swap to Disk " link "k17p1p5"}
       @{" 17.1.6  Refreshing " link "k17p1p6"}
       @{" 17.1.7  Delete " link "k17p1p7"}
  @{" 17.2  Grid requester " link "k17p2"}
  @{" 17.3  File Requester " link "k17p3"}
       @{" 17.3.1  The File Directory " link "k17p3p1"}
       @{" 17.3.2  How to Change Directories and Drives " link "k17p3p2"}
       @{" 17.3.3  Manual Input of a Path " link "k17p3p3"}
       @{" 17.3.4  Minipic Menu " link "k17p3p4"}
       @{" 17.3.5  Store-Format Menu " link "k17p3p5"}
       @{" 17.3.6  Alpha " link "k17p3p6"}
  @{" 17.4  Shadow Requester " link "k17p4"}
       @{" 17.4.1  Setting the Shadow Length " link "k17p4p1"}
  @{" 17.5  Cycle Requester " link "k17p5"}
       @{" 17.5.1  Generation of a Cycle " link "k17p5p1"}
       @{" 17.5.2  Offset " link "k17p5p2"}
  @{" 17.6  Shade Requester " link "k17p6"}
       @{" 17.6.1  Two Colors, Horizontal " link "k17p6p1"}
       @{" 17.6.2  Two Colors, Vertical " link "k17p6p2"}
       @{" 17.6.3  Three Colors, Two on Bottom " link "k17p6p3"}
       @{" 17.6.4  Four Colors " link "k17p6p4"}
       @{" 17.6.5  Five Colors " link "k17p6p5"}
  @{" 17.7  Style Requester " link "k17p7"}
       @{" 17.7.1  Choosing a Style " link "k17p7p1"}
       @{" 17.7.2  Color Fonts " link "k17p7p2"}
       @{" 17.7.3  Minipics for Fonts " link "k17p7p3"}
       @{" 17.7.4  Setting the Size " link "k17p7p4"}
       @{" 17.7.5  Xdpi and Ydpi for Picture Proportions " link "k17p7p5"}
       @{" 17.7.6  Antialiasing for Soft edges " link "k17p7p6"}
  @{" 17.8  Setting Requester " link "k17p8"}
       @{" 17.8.1  Setting the System Fonts " link "k17p8p1"}
       @{" 17.8.2  Number of Brushes and Pens " link "k17p8p2"}
       @{" 17.8.3  To Set Standard Directories " link "k17p8p3"}
       @{" 17.8.4  Local Mode " link "k17p8p4"}
       @{" 17.8.5  Click to Front " link "k17p8p5"}
       @{" 17.8.6  Eat first Click " link "k17p8p6"}
       @{" 17.8.7  Saving Settings and Leaving the Program " link "k17p8p7"}
       @{" 17.8.8  Set the Path for Macros " link "k17p8p8"}
       @{" 17.8.9  ASL- or Xi-Paint File Requester " link "k17p8p9"}
       @{" 17.8.10 Way of Showing Brushes " link "k17p8p10"}
       @{" 17.8.11 Painting without moving the mouse " link "k17p8p11"}
       @{" 17.8.12 Delete mouse moves " link "k17p8p12"}
       @{" 17.8.13 Hot Spot " link "k17p8p13"}
  @{" 17.9  Parameter-Requester " link "k17p9"}
       @{" 17.9.1  Anti-Aliasing " link "k17p9p1"}
       @{" 17.9.2  Fast Fill " link "k17p9p2"}
       @{" 17.9.3  Keep Mask " link "k17p9p3"}
       @{" 17.9.4  pixel stream " link "k17p9p4"}
       @{" 17.9.5  1-Pixel-stream " link "k17p9p5"}
       @{" 17.9.6  brightness, darkness " link "k17p9p6"}
  @{" 17.10 VLab Requester " link "k17p10"}
       @{" 17.10.1 Requirements for Working with VLab " link "k17p10p1"}
       @{" 17.10.2 Video Offset " link "k17p10p2"}
       @{" 17.10.3 Width and Height of the Picture " link "k17p10p3"}
       @{" 17.10.4 Choosing the Input Signal " link "k17p10p4"}
       @{" 17.10.5 Grabbing a Video Picture " link "k17p10p5"}
       @{" 17.10.6 VLAB Menu " link "k17p10p6"}
  @{" 17.11 Palette Requester " link "k17p11"}
       @{" 17.11.1 Colors for Working " link "k17p11p1"}
       @{" 17.11.2 Color Mix Methods " link "k17p11p2"}
       @{" 17.11.3 Copy, Changing and Shade " link "k17p11p3"}
       @{" 17.11.4 Taking a Color " link "k17p11p4"}
       @{" 17.11.5 RGB Triangle by Maxwell " link "k17p11p5"}
       @{" 17.11.6 HSV Scheme " link "k17p11p6"}
       @{" 17.11.7 Palette Menu " link "k17p11p7"}
       @{" 17.11.8 Load " link "k17p11p8"}
       @{" 17.11.9 Save " link "k17p11p9"}
       @{" 17.11.10 Scheme Menu " link "k17p11p10"}
  @{" 17.12 Macros " link "k17p12"}
       @{" 17.12.1 Macros Using AREXX " link "k17p12p1"}
       @{" 17.12.2 Recording Macros " link "k17p12p2"}
       @{" 17.12.3 Playing a Macro " link "k17p12p3"}
  @{" 17.13 Mask requester " link "k17p13"}
       @{" 17.13.1 Mask for Excepting Certain Motives " link "k17p13p1"}
       @{" 17.13.2 A color " link "k17p13p2"}
       @{" 17.13.3 Colorarea " link "k17p13p3"}
       @{" 17.13.4 Colormatrix (CLUT) " link "k17p13p4"}
       @{" 17.13.5 Saturation " link "k17p13p5"}
       @{" 17.13.6 Contrast " link "k17p13p6"}
       @{" 17.13.7 Addition of Several Masking Steps " link "k17p13p7"}
       @{" 17.13.8 Manipulation of Alpha Masks " link "k17p13p8"}
  @{" 17.14 Pen Requester " link "k17p14"}
       @{" 17.14.1 Pen Preview " link "k17p14p1"}
       @{" 17.14.2 Generate a Pen " link "k17p14p2"}
       @{" 17.14.3 Square Pens " link "k17p14p3"}
       @{" 17.14.4 Circular Pens " link "k17p14p4"}
       @{" 17.14.5 Different Kinds of Airbrushes " link "k17p14p5"}
       @{" 17.14.6 Unicolor Circular Brushes " link "k17p14p6"}
       @{" 17.14.7 One Point Brush " link "k17p14p7"}
       @{" 17.14.8 Pen Menu " link "k17p14p8"}
  @{" 17.15 Zoom Requester " link "k17p15"}
       @{" 17.15.1 Enlarging a Part of the Project " link "k17p15p1"}
       @{" 17.15.2 Scaling Down a Part of the Project " link "k17p15p2"}
       @{" 17.15.3 One Magnifier for Each Worksheet " link "k17p15p3"}
  @{" 17.16 Layer Requester " link "k17p16"}
       @{" 17.16.1 The Two Lists of the Layer Requester " link "k17p16p1"}
       @{" 17.16.2 Fixing the Order " link "k17p16p2"}
       @{" 17.16.3 Generating a Picture Composition " link "k17p16p3"}

@endnode


@node k17p0p1 "Common  Elements  of  the  Different  Requesters"
@toc "contents"


 @{b}17.0.1      Common  Elements  of  the  Different  Requesters @{ub}


Each requester can be closed by <enter>, but the cursor must not
be in a textbox and the requester has to be activated.  If there is
a difference between "confirming" (in most cases using "OK") and
"cancel" (button "cancel"), pressing <enter> will have the same
effect as clicking the confirmation button.  The "menus" menu is
just available, if a painting window, the toolbox, or the background
are activated.  In learning about the requesters we will always use
the following order: title, icon in the toolbox, menu command and
shortcut. An introduction describes in a few words the purpose of
the requester.  Then the requester is shown and its functions are
described exactly. At the end of this text there is a table, containing
the menu to which the requester belongs and the different shortcuts.
"A" always means <right Amiga>.

@endnode


@node k17p1 "Brush Requester"
@toc "contents"


 @{b}17.1       Brush Requester @{ub}


Shortcut: <right Amiga> <B>

	 @{" Figure: Brush Requester Icon " system "Run >NIL: <NIL: Display bilder/49.Pinselreq"}

This requester allows you to manage up to 128 of the most recently
produced brushes.  The number of brushes being managed can be
set in the "Settings" requester and depends upon your computers
harddisk memory. Each cut out or manipulated brush (even turning
or reflecting a brush will be stored as new brush!!!) will be stored in
the brush manager. After reaching the maximum amount of stored
brushes the oldest ones will be deleted. The requester itself contains
eight buttons, a scroller and the "close" button. The eight buttons
each show a picture of the brush they represent.

  @{" 17.1.1  Automatic Adaption of the Scale " link "k17p1p1"}
  @{" 17.1.2  Brush Menu " link "k17p1p2"}
  @{" 17.1.3  Save " link "k17p1p3"}
  @{" 17.1.4  Delete (from brush pool) " link "k17p1p4"}
  @{" 17.1.5  Swap to Disk " link "k17p1p5"}
  @{" 17.1.6  Refreshing " link "k17p1p6"}
  @{" 17.1.7  Delete " link "k17p1p7"}

@endnode


@node k17p1p1 "Automatic Adaption of the Scale"
@toc "contents"


 @{b}17.1.1     Automatic Adaption of the Scale @{ub}


The representation picture on the buttons doesn't say anything
about the real size of the brush.  Xi-Paint uses the offered area as
well as possible, regardless of the scale.  After clicking a button,
its brush will automatically stick on your pointer and can be used
as just cut out.  The scroller allows you to get a preview of all
the stored brushes in the order you have stored them.  If you do
not need the requester any longer, just press "Close".  The brush
manager has two menus which contain the following commands:

@endnode


@node k17p1p2 "Brush Menu"
@toc "contents"


 @{b}17.1.2     Brush Menu @{ub}


load shortcut: <right Amiga> <l>

This menu allows you to load a certain brush, from another paint
program or a whole picture, which Xi-Paint should use as brush.
After choosing this menu point a file requester will appear, where
you can insert the desired file. To import a brush Xi-Paint uses, (as
it does it by loading pictures) the multipic.library. You can use each
file format which is supported by this library. Further information
you can access in the section "file requester".

@endnode


@node k17p1p3 "Save"
@toc "contents"


 @{b}17.1.3     Save @{ub}


Shortcut: <right Amiga> <s>

If you want to save a brush permanently, use this menu feature.
First click on the desired brush and then choose "save".  A file
requester will open where you can insert the path and filename.
Saving also uses the multipic.library, so you can use each format
this library supports. Further information you'll find in the section
"filerequester".

@endnode


@node k17p1p4 "Delete (from brush pool)"
@toc "contents"


 @{b}17.1.4     Delete (from brush pool) @{ub}


Shortcut: <right Amiga> <x>

After finishing a project it's recommended to delete the brushes
you'll no longer need, to free up hard disk space.  This is done
by using the menu point "delete (from pool)". Click the brush you
want to delete in the brush requester and then call this menu point.

@endnode


@node k17p1p5 "Swap to Disk"
@toc "contents"


 @{b}17.1.5     Swap to Disk @{ub}


Shortcut: <right Amiga> <w>

Xi-Paint stores each brush manipulation first to the RAM and not
on the harddisk, to avoid unnecessary harddisk use.  If there is
not enough room in your RAM, Xi-Paint writes the brushes to the
harddisk.  If your computer breaks down, the brushes stored in
RAM will be lost. This command forces the saving of the brush to
the harddisk.

@endnode


@node k17p1p6 "Refreshing"
@toc "contents"


 @{b}17.1.6     Refreshing @{ub}


Shortcut: <right Amiga> <f>

You'll need this command if your brushes get into disorder (for
example by manipulation by another program).  By calling this
command all brushes will be saved from RAM to harddisk.  After
this each brush will be loaded and each symbol for the brushreque-
ster will be newly generated.  This command also checks to see if
there are symbols without brushes because they had been deleted
by another program. In this case refreshing will delete the symbol.
But notice that this command takes some time, so just use it if it's
really necessary.

@endnode


@node k17p1p7 "Delete"
@toc "contents"


 @{b}17.1.7     Delete @{ub}


Shortcut: <right Amiga> <D>

This command deletes all brushes under management.


Review of menu commands

      ____________________________________________________
      |              brush   |     |        Pool  |      |
      ----------------------------------------------------
      |               load   |A-l  |swap to Disk  | A-w  |
      |               save   |A-s  |      refresh | A-f  |
      |  delete (from pool)  |A-x  |      delete  | A-D  |
      ----------------------------------------------------

@endnode


@node k17p2 "Grid requester"
@toc "contents"


 @{b}17.2       Grid requester @{ub}


Shortcut: <right Amiga> <G>

	 @{" Figure: Grid-Requester Icon " system "Run >NIL: <NIL: Display bilder/51.Gitterreq"}

With this command you can activate an invisible position grid.

	 @{" Figure: Grid-Requester " system "Run >NIL: <NIL: Display bilder/52.Gitterrequester"}

This might be helpful in certain cases, especially for technical pro-
jects or if you want to compose your object from certain parts. You
see, it simulates graph paper, wherein the squares can be sized as
you want. You just have to insert the desired values to "width" and
"height".  The start of the grid can be fixed anywhere.  You need
not start in the left top corner.  You can choose at which distance
from the top and the left edge the grid should start. Set the values
in "X-offset" and "Y-offset".  The grid can be switched on and off
by "on"/"off" buttons. The grid is always activated for all opened
painting windows, it can't be set for just one window. It's not valid
for opened requesters.

@endnode


@node k17p3 "File Requester"
@toc "contents"


 @{b}17.3       File Requester @{ub}


Call this requester if you want to load or save a certain file.  The
standard file requester always looks the same, regardless of whether
you want to save/load a brush, picture, palette or anything else.

	 @{" Figure: File Requester " system "Run >NIL: <NIL: Display bilder/53.Filerequester"}

  @{" 17.3.1  The File Directory " link "k17p3p1"}
  @{" 17.3.2  How to Change Directories and Drives " link "k17p3p2"}
  @{" 17.3.3  Manual Input of a Path " link "k17p3p3"}
  @{" 17.3.4  Minipic Menu " link "k17p3p4"}
  @{" 17.3.5  Store-Format Menu " link "k17p3p5"}
  @{" 17.3.6  Alpha " link "k17p3p6"}

@endnode


@node k17p3p1 "The File Directory"
@toc "contents"


 @{b}17.3.1     The File Directory @{ub}


Most parts of the requester use the file directory. It shows all pos-
sible drives, directories and files.  If the number of directories and
files is bigger than the window, use the scroller. The inserts to the
directories will always be shown in alphabetical order.  First the
directory and then the files are shown.

@endnode


@node k17p3p2 "How to Change Directories and Drives"
@toc "contents"


 @{b}17.3.2     How to Change Directories and Drives @{ub}


To get into a directory just click on it. Its files will then be shown.
If you want to get one step higher in the hierarchy, click "parent".
By clicking "drivers" all possible physical and logical drivers will
be shown. By clicking a driver, its content will be shown.

@endnode


@node k17p3p3 "Manual Input of a Path"
@toc "contents"


 @{b}17.3.3     Manual Input of a Path @{ub}


You can also insert the path in the insert box "drawer".  After
pressing <enter> the drawers content will be shown. If the drawer
does not exist the directory will remain empty. The file name can
also be inserted by hand ("Insertbox "file") or by choosing it from
the file list.  To save a file under a new name,  use the manual
method. After you finish inserting, close the requester by pressing
OK. If you have chosen a file from the file list, you can also double
click it to close the requester.

@endnode


@node k17p3p4 "Minipic Menu"
@toc "contents"


 @{b}17.3.4     Minipic Menu @{ub}


Generate shortcut: <right Amiga> <g>

Xi-Paint automatically generates a minipic to each project.  Exi-
sting projects have no minipic, but you can generate one by "ge-
nerate". Just click the desired project in the file requester, so that
its name appears in the "file" input box.  Now press "generate"
and the minipic will be created.  The minipics will be stored in
the same directory as the original project, but its ending will be
".mpic". So if you want to delete it you just need to delete this file.
IFF-ILBM formatted files contain their minipic, which means that
it is invisible for you.

To stop Xi-Paint doing minipics, you can switch this feature off in
the "Settings-Menu".

@endnode


@node k17p3p5 "Store-Format Menu"
@toc "contents"


 @{b}17.3.5     Store-Format Menu @{ub}


This menu lists all the formats available for saving.  Xi-Paint uses
multipic.library, so how many formats are available depends on the
version of the library. The settings are valid for pictures as well as
for brushes. The activated format is shown by a hook.

@endnode


@node k17p3p6 "Alpha"
@toc "contents"


 @{b}17.3.6     Alpha @{ub}


Shortcut: none

If this has been activated (shown by an hook in front of the com-
mand), the alpha channel of a picture will also be stored.  It will
use more room on you harddisk, but if you have masked your brush
before it's useful to choose this feature. In this way the brush will
be available still masked.


Review of the menu commands

	__________________________________________________
	|  Minipic   |     |  Storeformats               |
	--------------------------------------------------
	|  generate  |A-g  |  Depends on your version of |
	|            |     |  "multipic.library"         |
	|            |     |-----------------------------|
	|            |     |  Alpha                      |
	--------------------------------------------------

@endnode


@node k17p4 "Shadow Requester"
@toc "contents"


 @{b}17.4       Shadow Requester @{ub}


Shortcut: <right Amiga> <H>

	 @{" Figure: Shadow Requester Icon " system "Run >NIL: <NIL: Display bilder/55.Schattenreq"}

If you want , Xi-Paint will automatically produce shadows for the
most important painting options.

	 @{" Figure: Shadow Requester " system "Run >NIL: <NIL: Display bilder/56.Schattenrequester"}

The shadows position and look can be defined in this requester.
The manual production of a shadow is very difficult, so Xi-Paint
does this for you. Even the direction of the shadow can be defined.
For these definitions you'll find two scrollers ("X-offset" und "Y-
offset") which set the shadow's x and y distance to your object.

  @{" 17.4.1  Setting the Shadow Length " link "k17p4p1"}

@endnode


@node k17p4p1 "Setting the Shadow Length"
@toc "contents"


 @{b} 17.4.1     Setting the Shadow Length @{ub}


It's possible to use values between -20 and 20.  Right beside the
scrollers there are two input boxes, which show the actual shadow
position.  It's also possible, to insert the desired values directly to
this box.  If insert values are lower or higher than the acceptable
values, they will be automatically corrected. The "preview" should
give you an idea of how the shadow will look.  For best results
shadows with a x/y distance from 3 to 6 are recommended.  To
activate the shadow for painting, use the "on" / "off" switcher in
the bottom left corner of the requester. The requester can remain
open while you're painting. Close it by pressing "close". If shadow
is activated, it will remain activated.

@endnode


@node k17p5 "Cycle Requester"
@toc "contents"


 @{b}17.5       Cycle Requester @{ub}


Shortcut: <right Amiga> <Y>

	 @{" Figure: Cycle Requester Icon " system "Run >NIL: <NIL: Display bilder/57.Zyklusreq"}

This function allows the definition of the cycle area, which is reali-
zed by the colors of the paint mode.

	 @{" Figure: Cycle Requester " system "Run >NIL: <NIL: Display bilder/58.Zyklusrequester"}

Xi-Paint offers the special paint mode "cycle" (for further infor-
mation:  see "paint modes").  First set the number of steps which
should cover the cycled area.  A value about 2000 will mean that
the cycle will use 2000 different colorhues between the two "from"
and "to" colors, then it will start with the first color again. "From"
"To" deals with the colorboxes and concerns the look of the cy-
cle.  "From" means the first color in the colorrequester, "to" the
last one.  Xi-Paint will produce a cycle by using the colorhues in
between these two colors. If one of the colors is not defined yet, -
Paint will use the automatically set color "black. The value "From"
always has to be smaller than "to", otherwise Xi-Paint generates

NO cycle but gives no message.

  @{" 17.5.1  Generation of a Cycle " link "k17p5p1"}
  @{" 17.5.2  Offset " link "k17p5p2"}

@endnode


@node k17p5p1 "Generation of a Cycle"
@toc "contents"


 @{b}17.5.1     Generation of a Cycle @{ub}


A new cycle will only be generated if you press "generate".  After
having been generated, a cycle is ready to use for all paint ope-
rations (NOTICE, make sure to choose "cycle" beforehand!). The
window need not to be closed.

@endnode


@node k17p5p2 "Offset"
@toc "contents"


 @{b}17.5.2     Offset @{ub}


It's important to take care of the offset, especially if you want to
start your cycle of the next operation with a certain color. For get-
ting vertical lines it's necessary to paint a rectangle, which contains
an exact multiple of the step number. In this case set the offset to
"O". For diagonal lines you'll need a higher value.

@endnode


@node k17p6 "Shade Requester"
@toc "contents"


 @{b}17.6       Shade Requester @{ub}


Shortcut: <right Amiga> <U>

	 @{" Figure: Shade Requester Icon " system "Run >NIL: <NIL: Display bilder/59.Verlaufreq"}

Here you can set the appearance of shades.  Here Xi-Paint offers
very special features.

	 @{" Figure: Shade Requester " system "Run >NIL: <NIL: Display bilder/60.Farbverlaufsbox"}

For setting the appearance of the shade use this requester.  But it
will only be valid if you set the paint mode to "shade".  Xi-Paint
offers six different shade possibilities to you, which use between two
and five colors each. Which colors are used can be set in the color
requester. Xi-Paint always uses the first five colorboxes.

The different colors will be used from left to right and from top to
bottom. For a four color shade this means that the first top corner
gets the first, the right top corner the second, the left bottom corner
the third and the right bottom corner the fourth color. Which one
of the possible shades will be used, can be chosen in the bottom
third of the shade requester.  By clicking the next possibility will
be shown.

  @{" 17.6.1  Two Colors, Horizontal " link "k17p6p1"}
  @{" 17.6.2  Two Colors, Vertical " link "k17p6p2"}
  @{" 17.6.3  Three Colors, Two on Bottom " link "k17p6p3"}
  @{" 17.6.4  Four Colors " link "k17p6p4"}
  @{" 17.6.5  Five Colors " link "k17p6p5"}

@endnode


@node k17p6p1 "Two Colors, Horizontal"
@toc "contents"


 @{b}17.6.1     Two Colors, Horizontal @{ub}


Shade from left to right.

@endnode


@node k17p6p2 "Two Colors, Vertical"
@toc "contents"


 @{b}17.6.2     Two Colors, Vertical @{ub}


Shade from top to bottom (for sunsets, texts, etc.).

@endnode


@node k17p6p3 "Three Colors, Two on Bottom"
@toc "contents"


 @{b}17.6.3     Three Colors, Two on Bottom @{ub}


The first color on the top border, the second one in the left and the
third one in the right bottom corner.

@endnode


@node k17p6p4 "Four Colors"
@toc "contents"


 @{b}17.6.4     Four Colors @{ub}


To each corner one color will be assigned which will meet each other
in the middle.

@endnode


@node k17p6p5 "Five Colors"
@toc "contents"


 @{b}17.6.5     Five Colors @{ub}


The first four colors start from the corners, the fifth point can be
set wherever you want. To do so use the two scrollers "5th point".
You can precisely set the position of your fifth point. The per cent
values can be set between 0 - 100

0/0 means that the fifth point is set to the left top corner.  But
notice that this will cover the first color.   It's recommended to
choose values which set the fifth point to the center or to one side.
(50/50 center, 0/50 middle of the left side, 50/0 center of the top
side, etc.)

Preview gives you an idea of how the shade will appear. If "shade"
is activated, each manipulation will be valid.

@endnode


@node k17p7 "Style Requester"
@toc "contents"


 @{b}17.7       Style Requester @{ub}


Shortcut: <right Amiga> <T>

	 @{" Figure: Style Requester Icon " system "Run >NIL: <NIL: Display bilder/61.Stylereq"}

Use this requester to choose style and size for a text operation.

	 @{" Figure: Style Requester " system "Run >NIL: <NIL: Display bilder/62.Stylerequester"}

Xi-Paint uses all styles which are supported directly by the opera-
ting system.  This means Xi-Paint is able to load each font which
is to be found in the font directory. Xi-Paint also supports compu-
graphic styles.

  @{" 17.7.1  Choosing a Style " link "k17p7p1"}
  @{" 17.7.2  Color Fonts " link "k17p7p2"}
  @{" 17.7.3  Minipics for Fonts " link "k17p7p3"}
  @{" 17.7.4  Setting the Size " link "k17p7p4"}
  @{" 17.7.5  Xdpi and Ydpi for Picture Proportions " link "k17p7p5"}
  @{" 17.7.6  Antialiasing for Soft edges " link "k17p7p6"}

@endnode


@node k17p7p1 "Choosing a Style"
@toc "contents"


 @{b}17.7.1     Choosing a Style @{ub}


Type the name of the font directly into the text box in the style
requester or choose it by mouse directly from the file requester
(you'll get the requester by clicking the disk symbol beside the
insert box). This requester also offers you the ability to set the size
of your text. Just load files with the ending .font. Otherwise you'll
get an error message.

@endnode


@node k17p7p2 "Color Fonts"
@toc "contents"


 @{b}17.7.2     Color Fonts @{ub}


Xi-Paint does not support color fonts.  But that's not important,
Xi-Paint is capable of producing wonderful colors and even special
effects.

@endnode


@node k17p7p3 "Minipics for Fonts"
@toc "contents"


 @{b}17.7.3     Minipics for Fonts @{ub}


As a special feature it is also possible to create minipics for Fonts.
To load a special font, click its name. After closing the file requester,
the name will automatically be used by the style requester.  The
style requester offers three scrollers beside the input boxes. These
boxes can be manipulated directly or by mouse or keyboard.

@endnode


@node k17p7p4 "Setting the Size"
@toc "contents"


 @{b}17.7.4     Setting the Size @{ub}


The first scrollers allows you to fix the size.  Values between 1
and 255 are possible.  While using some special fonts it might be
possible that some sizes won't be supported. In this case Xi-Paint
will always jump back to the smallest possible value. This is not a
limitation of Xi-Paint but a problem of the operating system.

@endnode


@node k17p7p5 "Xdpi and Ydpi for Picture Proportions"
@toc "contents"


 @{b}17.7.5     Xdpi and Ydpi for Picture Proportions @{ub}


These values are used for setting the x/y distortion of the text.
Default is 75/75.  That's necessary because each font is made for
a certain resolution, so the dpi values have to be set.  If a font is
designed for a resolution of 320x256 (5:4) it will look odd if you use
it for a resolution of 800x600 (4:3).

By changing the dpi values you can cause a distortion. 75/75, which
is the right value for 320x256, just set for example 60/56 or 120x112.
In practice you won't need this feature very often.

@endnode


@node k17p7p6 "Antialiasing for Soft edges"
@toc "contents"


 @{b}17.7.6     Antialiasing for Soft edges @{ub}


If you want to get a very soft adapting text it's recommended to
set "antialiase" to "on".  Xi-Paint will try to get a transition as
soft as possible between text and background. Most times this will
cause a very nice looking effect, but it needs a longer time than the
insertion of simple text.

@endnode


@node k17p8 "Setting Requester"
@toc "contents"


 @{b}17.8       Setting Requester @{ub}


Shortcut: <right Amiga> <S>

	 @{" Figure: Setting Requester Icon " system "Run >NIL: <NIL: Display bilder/63.Sysreq"}

In the setting requester you have to set some values which effect
your work with Xi-Paint.

	 @{" Figure: Setting Requester " system "Run >NIL: <NIL: Display bilder/64.Einstellungenrequester"}

  @{" 17.8.1  Setting the System Fonts " link "k17p8p1"}
  @{" 17.8.2  Number of Brushes and Pens " link "k17p8p2"}
  @{" 17.8.3  To Set Standard Directories " link "k17p8p3"}
  @{" 17.8.4  Local Mode " link "k17p8p4"}
  @{" 17.8.5  Click to Front " link "k17p8p5"}
  @{" 17.8.6  Eat first Click " link "k17p8p6"}
  @{" 17.8.7  Saving Settings and Leaving the Program " link "k17p8p7"}
  @{" 17.8.8  Set the Path for Macros " link "k17p8p8"}
  @{" 17.8.9  ASL- or Xi-Paint File Requester " link "k17p8p9"}
  @{" 17.8.10 Way of Showing Brushes " link "k17p8p10"}
  @{" 17.8.11 Painting without moving the mouse " link "k17p8p11"}
  @{" 17.8.12 Delete mouse moves " link "k17p8p12"}
  @{" 17.8.13 Hot Spot " link "k17p8p13"}

@endnode


@node k17p8p1 "Setting the System Fonts"
@toc "contents"


 @{b}17.8.1     Setting the System Fonts @{ub}


The first two values deal with the fonts used for window titles, me-
nus, etc.  You can use any standard Amiga font.  Insert its name
in the insert box beside "system Font Name" or choose it by mou-
seclick.  After clicking the disk symbol beside the insert box, the
standard font requester will open, in which you can choose the font
by mouse click.  Then you can set the size of your font.  Xi-Paint
allows a value between 6 and 13 points. A font size below 10 points
is only recommended in case of a very low resolution (lower than
640x480) or if you are a real man and have a big screen (bigger
than 17 inches).

@endnode


@node k17p8p2 "Number of Brushes and Pens"
@toc "contents"


 @{b}17.8.2     Number of Brushes and Pens @{ub}


By using the scroller beside "number of brushes" you can set the
maximum amount of managed brushes. You have the same options
to set the number of pens.  For both options you can use values
between 1 to 256.  This choice is important, because each pen or
brush will be stored and needs room on your hard disk.

@endnode


@node k17p8p3 "To Set Standard Directories"
@toc "contents"


 @{b}17.8.3     To Set Standard Directories @{ub}


Each time Xi-Paint opens a file requester, it will show a certain
directory and its content.  Which directory this should be can be
fixed by the setting "global path". Insert the desired name directly
to the input box or choose it by mouse,  after clicking the disk
symbol beside the insert box. With the same steps it's also possible
to define your own path for saving the color palettes (input box
beside "palette path").

@endnode


@node k17p8p4 "Local Mode"
@toc "contents"


 @{b}17.8.4     Local Mode @{ub}


If this mode is activated, in each paint window different paint modes
can be set.  Otherwise each project will be affected if you change
one tool for a certain window.

@endnode


@node k17p8p5 "Click to Front"
@toc "contents"


 @{b}17.8.5     Click to Front @{ub}


Xi-Paint enables you to click certain project windows to front. But
if the time interval is set too long, Xi-Paint might understand some
paint operations as a double click.  In this case just shorten the
allowed time for double click or switch off "Click to front".

@endnode


@node k17p8p6 "Eat first Click"
@toc "contents"


 @{b}17.8.6     Eat first Click @{ub}


The first click to an inactivated window just activates it.  If you
want to draw with your first click, switch off this feature.

@endnode


@node k17p8p7 "Saving Settings and Leaving the Program"
@toc "contents"


 @{b}17.8.7     Saving Settings and Leaving the Program @{ub}


"Save settings" fixes each setting so they are automatically saved
when you leave Xi-Paint. You can use them again with a new start.
"Close" overtakes the values and leaves the settings requester.

	 @{" Figure: 2nd Setting Requester " system "Run >NIL: <NIL: Display bilder/99.Einstellungen2"}

Depending on the version you use, the second page of this requester
offers several other features.

@endnode


@node k17p8p8 "Set the Path for Macros"
@toc "contents"


 @{b}17.8.8     Set the Path for Macros @{ub}


The first setting fixes the path for self made macros.  Default is
"macro" in the Xi-Paint directory.  If you want to change this de-
fault setting you can do that in the standard way.

@endnode


@node k17p8p9 "ASL- or Xi-Paint File Requester"
@toc "contents"


 @{b}17.8.9     ASL- or Xi-Paint File Requester @{ub}


ASL requester can only be opened on its own system screen. That's
why Xi-Paint has a requester had been programmed which is similar
to the ASL requester. If you do not want to miss your ASL original,
you can make Xi-Paint use it. But if you use it, Xi-Paint always has
to switch between the workbench screen and the Xi-Paint screen.
Minipics are also not possible. An individual menu definition is also
impossible. Just for choosing a font ASL offers some advantages by
its preview list.

@endnode


@node k17p8p10 "Way of Showing Brushes"
@toc "contents"


 @{b}17.8.10      Way of Showing Brushes @{ub}


Xi-Paint always tries to show pens and brushes in its full size, even
while moving. This might need a lot of time, dependent upon your
computers memory. If this showing lasts too long, it can just be as
just a frame. The size from which starting a brush or pen should be
shown as a frame can be defined.  This happens using the scroller
"Brush Opaque Move". The smaller the set value is, the quicker a
brush will be shown as a frame.

@endnode


@node k17p8p11 "Painting without moving the mouse"
@toc "contents"


 @{b}17.8.11     Painting without moving the mouse @{ub}


To give Xi-Paint more Events for drawing, increase this slider.

@endnode


@node k17p8p12 "Delete mouse moves"
@toc "contents"


 @{b}17.8.12     Delete mouse moves @{ub}


For a faster working with Xi-Paint (in special case with big brushs),
increase this value.

@endnode


@node k17p8p13 "Hot Spot"
@toc "contents"


 @{b}17.8.13     Hot Spot @{ub}


Here you can move the "hot spot" of the mouse pointer. Especially
if you work with your own Pointer (which is named "Pointer.Pic"
and "Busy.Pic") you can set the hot spot.  The pictures has to be
in an 32-Bit format, which has a valid alpha-plane.

@endnode


@node k17p9 "Parameter-Requester"
@toc "contents"


 @{b}17.9      Parameter-Requester @{ub}


Shortcut: <rechte Amiga> <D>

	 @{" Figure: Parameter Requester " system "Run >NIL: <NIL: Display bilder/98.Parameter"}

  @{" 17.9.1  Anti-Aliasing " link "k17p9p1"}
  @{" 17.9.2  Fast Fill " link "k17p9p2"}
  @{" 17.9.3  Keep Mask " link "k17p9p3"}
  @{" 17.9.4  pixel stream " link "k17p9p4"}
  @{" 17.9.5  1-Pixel-stream " link "k17p9p5"}
  @{" 17.9.6  brightness, darkness " link "k17p9p6"}

@endnode


@node k17p9p1 "Anti-Aliasing"
@toc "contents"


 @{b}17.9.1     Anti-Aliasing @{ub}

The quality of painted lines depends upon the value you set for
"line-Antialiasing factor" by the scroller.  You can use, depending
to the desired effect, values between 1 and 255. This feature allows
you to minimize the well known stair effect which reminds you of
the single points an object is made of.

@endnode


@node k17p9p2 "Fast Fill"
@toc "contents"


 @{b}17.9.2     Fast Fill @{ub}


If you use this feature, be careful when using "mask". Filling signi-
ficantly impacts the mask function which would write over a user
defined mask. For avoiding that, Xi-Paint "saves", before starting
to fill existing masks and "rebuilds" them after having finished fil-
ling.  This action may need some time.  If you activate "fast fill",
you allow Xi-Paint to overwrite existing masks which will speed up
the procedure.

@endnode


@node k17p9p3 "Keep Mask"
@toc "contents"


 @{b}17.9.3    Keep Mask @{ub}


Some operations are faster, if they can erase the mask. If you need
the alpha-mask, you can save it by activating this button.

@endnode


@node k17p9p4    pixel stream
@toc "contents"


 @{b}17.9.4    pixel stream @{ub}


If you want to paint with an fast airbrush, so put this slider on a
value between 3 and 8. So the airbrush is 3 to 8 times faster.

@endnode


@node k17p9p5 "1-Pixel-stream"
@toc "contents"


 @{b}17.9.5    1-Pixel-stream @{ub}


Put this slider on a value greater 1 if you want to have a dotted
line (rectangle etc.).

@endnode


@node k17p9p6 "brightness, darkness"
@toc "contents"


 @{b}17.9.6    brightness, darkness @{ub}


Gives a value for the function "darker" and "brighter" in %.

@endnode


@node k17p10 "VLab Requester"
@toc "contents"


 @{b}17.10        VLab Requester @{ub}


menu: VLab...
shortcut: <right Amiga> <V>

By using this requester Xi-Paint can directly digitize pictures for
editing them. You just have to have the amazing VLab Y/C digi-
tizer. After having installed it, the menu point "VLab" is ready to
use.

  @{" 17.10.1 Requirements for Working with VLab " link "k17p10p1"}
  @{" 17.10.2 Video Offset " link "k17p10p2"}
  @{" 17.10.3 Width and Height of the Picture " link "k17p10p3"}
  @{" 17.10.4 Choosing the Input Signal " link "k17p10p4"}
  @{" 17.10.5 Grabbing a Video Picture " link "k17p10p5"}
  @{" 17.10.6 VLAB Menu " link "k17p10p6"}

@endnode


@node k17p10p1 "Requirements for Working with VLab"
@toc "contents"


 @{b}17.10.1      Requirements for Working with VLab @{ub}


NOTICE: If you do not have VLab-Digitzer, this menu topic CANNOT BE USED.

Xi-Paint identifies and can use VLab versions
starting from 8.1. Most of the VLab requester is filled with a show
box, which shows the actual signal from your digitizer. The number
of pictures per second depends on you computer's speed.

@endnode


@node k17p10p2 "Video Offset"
@toc "contents"


 @{b}17.10.2      Video Offset @{ub}


At the right side you'll find several scrollers, with which you can
fix different settings concerning your video picture.  The first two
scrollers "offset left" and "offset top" fix which distance from the
left top corner of the video picture should be digitized.  This fea-
ture allows you just to read some cut outs of your picture to the
computer.

@endnode


@node k17p10p3 "Width and Height of the Picture"
@toc "contents"


 @{b}17.10.3      Width and Height of the Picture @{ub}


This sets the size of the digitized picture in points.  You can set
each value which enables you to define the exact regulation of the
digitized cut of the picture.

@endnode


@node k17p10p4 "Choosing the Input Signal"
@toc "contents"


 @{b}17.10.4      Choosing the Input Signal @{ub}


VLab enables you to plug in different video sources (for VLab 2
sources, for VLab Y/C you can have 3).  With the scroller "in-
put channel" you can define the input entry signal that should be
digitized.  The switch "monitor" shows you the video picture in
the preview monitor of Xi-Paint. This enables you to check which
source you digitize in the moment.

@endnode


@node k17p10p5 "Grabbing a Video Picture"
@toc "contents"


 @{b}17.10.5      Grabbing a Video Picture @{ub}


For doing that, just press "freeze". A new paint window, containing
the digitized picture, will be opened, where you can now edit the
picture. "Close" closes the VLab requester. To the VLab requester
the following menu is assigned:

@endnode


@node k17p10p6 "VLAB Menu"
@toc "contents"


 @{b}17.10.6      VLAB Menu @{ub}


DeInterlace
-----------

Shortcut: <right Amiga> <d>

For digitizing fast moving pictures in good quality, Xi-Paint uses the
"DeInterlace" method. Call this point if you recognize an intensive
half picture alternation as one of your pictures.


VTR
---

Shortcut: <right Amiga> <v>

If you digitize a recorded picture, it might happen that you lose
quality. To get a better result, Xi-Paint offers a special VTR mode,
which results in a synchronization while digitizing from a recorded
picture.


Mode
----

Shortcut: none

VLab  digitizer  supports  the  European  PAL-  and  the  American
NTSC- system.  To get a correct result, choose the right system
from the menu point "mode".


Overview of menu commands

	_______________________
	|      Video  |       |
	-----------------------
	| DeInterlace | A-d   |
	|        VTR  | A-v   |
	|      Modus  |       |
	-----------------------

@endnode


@node k17p11 "Palette Requester"
@toc "contents"


 @{b}17.11       Palette Requester @{ub}


Shortcut: <right Amiga> <C>

	 @{" Figure: Palette Requester Icon " system "Run >NIL: <NIL: Display bilder/67.Farbreq"}

Using Xi-Paint's colorbox you can produce each colorhue you want.

	 @{" Figure: Palette Requester " system "Run >NIL: <NIL: Display bilder/68.Farbrequester"}

But because it would be very difficult to choose the desired color
from a list of 16.7 million colors, Xi-Paint offers you a working
palette with 256 different color hues which can be defined by the
user. Changes in the color palette happen totally independent from
your painting windows.

  @{" 17.11.1 Colors for Working " link "k17p11p1"}
  @{" 17.11.2 Color Mix Methods " link "k17p11p2"}
  @{" 17.11.3 Copy, Changing and Shade " link "k17p11p3"}
  @{" 17.11.4 Taking a Color " link "k17p11p4"}
  @{" 17.11.5 RGB Triangle by Maxwell " link "k17p11p5"}
  @{" 17.11.6 HSV Scheme " link "k17p11p6"}
  @{" 17.11.7 Palette Menu " link "k17p11p7"}
  @{" 17.11.8 Load " link "k17p11p8"}
  @{" 17.11.9 Save " link "k17p11p9"}
  @{" 17.11.10 Scheme Menu " link "k17p11p10"}

@endnode


@node k17p11p1 "Colors for Working"
@toc "contents"


 @{b}17.11.1     Colors for Working @{ub}


Nearly at the lower middle of the color requester you'll find the
list of colors you can work with. These are marked by a rectangle.
Xi-Paint always shows 64 colorhues at one time, the other one will
be shown if you move the scroller on the right side.  To define a
color just click the desired rectangle and then generate the color
by using the scrollers in the top half of the requester. You can use
three different color mix methods:

@endnode


@node k17p11p2 "Color Mix Methods"
@toc "contents"


 @{b}17.11.2     Color Mix Methods @{ub}


The best known method is surely the RGB-process which calculates
the colors by additive color mixing. Xi-Paint also supports the HLS
method and the CMKY method.  They are not as well known as
RGB, but highly regarded by DTP users and artists. Do not forget
to press "assign" after having chosen a color, otherwise Xi-Paint
won't use your new color, even if it's already shown in the color
requester.  You need not click "assign" after the definition of each
color, just press it after you have finished all of your definitions.

@endnode


@node k17p11p3 "Copy, Changing and Shade"
@toc "contents"


 @{b}17.11.3     Copy, Changing and Shade @{ub}


Xi-Paint offers three more features for the color requester. The first
one is "copy", which allows the duplication of an existing color.
Click the first color, press "copy" and click the colorbox, the "new"
duplicate color should appear.  "Change" allows you to exchange
two colors. The is done in the same manner as by copying. "Shade"
is a very special feature, which allows you to automatically gene-
rate a shade between two colors.  The number of steps can also
be defined.  The only limit is the number of colors in the palette.
But nevertheless this should be more than enough for most of your
projects.  To generate a shade, press the "start"color, then click
"shade" and then click the "end"color. The in between colorboxes
will be filled with the defined shade.

@endnode


@node k17p11p4 "Taking a Color"
@toc "contents"


 @{b}17.11.4     Taking a Color @{ub}


You can also choose a color directly from a paint window. First click
the colorbox to which the color should be assigned. Then click the
selected window. Press <#> and then click the desired color point
in the window. The colorhue will automatically be assigned to the
colorbox.

The color requester also "owns" three sub requesters which offer you
more possibilities for the choice of a color. You can reach this sub
requester using the switchers right beside the scrollers in the top
half of the colorrequester. By clicking one of the following windows
will open:

@endnode


@node k17p11p5 "RGB Triangle by Maxwell"
@toc "contents"


 @{b}17.11.5      RGB Triangle by Maxwell @{ub}


	 @{" Figure: RGB Triangle " system "Run >NIL: <NIL: Display bilder/69.RGB-Dreieck"}

This triangle contains all possible colors.  The basic colors /red,
green, blue) can be found in the three corners.  You can choose a
certain color by clicking on it. The fine tuning can be done by the
scrollers in the color requester.

@endnode


@node k17p11p6 "HSV Scheme"
@toc "contents"


 @{b}17.11.6     HSV Scheme @{ub}


	 @{" Figure: HSV Scheme " system "Run >NIL: <NIL: Display bilder/70.HSV-Schema"}

This window contains two shades. One of them runs to black, the
other to white. Choose the desires hue by clicking. Fine tuning can
be done by the scrol lers.

@endnode


@node k17p11p7 "Palette Menu"
@toc "contents"


 @{b}17.11.7     Palette Menu @{ub}

  @{" 17.11.8  Load " link "k17p11p8"}
  @{" 17.11.9  Save " link "k17p11p9"}
  @{" 17.11.10 Scheme Menu " link "k17p11p10"}

@endnode


@node k17p11p8 "Load"
@toc "contents"


 @{b}17.11.8     Load @{ub}


Shortcut: <right Amiga> <l>

This feature can load a saved palette which won't have any influence
upon the already completed parts of a painting.

@endnode


@node k17p11p9 "Save"
@toc "contents"


 @{b}17.11.9      Save @{ub}


Shortcut:  <right Amiga> <a>

This features allows you to save the actual palette. So you can at any
time recall a previously used palette.

@endnode


@node k17p11p10 "Scheme Menu"
@toc "contents"


 @{b}17.11.10     Scheme Menu @{ub}


In this menu you can choose which one of the color mix methods the
color requester should use.  You can choose between RGB (<right
Amiga> <r>), HSL (<right Amiga> <h>) and CMYK (<right
Amiga> <y>).  Depending to your choice the look of the colorre-
quester will change.


Overview of the menu commands

	____________________________________
	|   palette  |     |Scheme  |      |
	------------------------------------
	|      load  | A-l |    RGB | A-r  |
	|      save  | A-s |    HSL | A-h  |
	| save_as... | A-a |   CMYK | A-y  |
	------------------------------------

@endnode


@node k17p12 "Macros"
@toc "contents"


 @{b}17.12       Macros @{ub}


menu: others/macro

Xi-Paint's macro function is not really a requester. It enables you
to automate recurring routines.

  @{" 17.12.1 Macros Using AREXX " link "k17p12p1"}
  @{" 17.12.2 Recording Macros " link "k17p12p2"}
  @{" 17.12.3 Playing a Macro " link "k17p12p3"}

@endnode


@node k17p12p1 "Macros Using AREXX"
@toc "contents"


 @{b}17.12.1      Macros Using AREXX @{ub}


AREXX is supported by Xi-Paint, and enables you automate some
routines and to produce completely new options.  Unfortunately
you'll need some experiences in programming and in working with
AREXX. Many users may not be interested in this feature. That's
why Xi-Paint offers a very comfortable solution to you:  Macros,
which are nothing more than working steps, are recorded by -
Paint and can be reproduced whenever you want.  Xi-Paint itself
stores each Macro as an AREXX script, which means that you can
record some basic working steps by Macro and later refine them by
AREXX.

@endnode


@node k17p12p2 "Recording Macros"
@toc "contents"


 @{b}17.12.2      Recording Macros @{ub}


menu: start....
shortcut: <right Amiga> <m>

To produce a macro you have to record the steps. Xi-Paint records
them step by step and defines a macro. To start recording, call the
corresponding feature of the menu.  A window, which informs you
about recording, will open.  After having finished the input of the
steps which should be contained by the macro, click "finish".  A
standard file requester will open and you can set the name under
which your macro should be stored.

@endnode


@node k17p12p3 "Playing a Macro"
@toc "contents"


 @{b}17.12.3      Playing a Macro @{ub}


menu: perform ...
shortcut: <right Amiga> <u>

After recording a macro,  you can play it as often as you want.
For doing that call the corresponding menu point.   A standard
file requester will open and you can choose the desired macro by
mouseclick. The chosen macro will be loaded and completed.

@endnode


@node k17p13 "Mask requester"
@toc "contents"


 @{b}17.13        Mask requester @{ub}


menu: mask....
shortcut: <right Amiga> <M>

	 @{" Figure: Mask Requester Icon " system "Run >NIL: <NIL: Display bilder/71.Maskenreq"}

This requester allows you to ban certain colors of a painting. That's
important for getting certain cut outs of a project or just to mani-
pulate certain parts. You'll always need masks for blocking certain
parts of a project from manipulation.

	 @{" Figure: Mask Requester " system "Run >NIL: <NIL: Display bilder/72.Maskenrequester"}

  @{" 17.13.1 Mask for Excepting Certain Motives " link "k17p13p1"}
  @{" 17.13.2 A color " link "k17p13p2"}
  @{" 17.13.3 Colorarea " link "k17p13p3"}
  @{" 17.13.4 Colormatrix (CLUT) " link "k17p13p4"}
  @{" 17.13.5 Saturation " link "k17p13p5"}
  @{" 17.13.6 Contrast " link "k17p13p6"}
  @{" 17.13.7 Addition of Several Masking Steps " link "k17p13p7"}
  @{" 17.13.8 Manipulation of Alpha Masks " link "k17p13p8"}

@endnode


@node k17p13p1 "Mask for Excepting Certain Motives"
@toc "contents"


 @{b}17.13.1      Mask for Excepting Certain Motives @{ub}


If you want to color the background of a flower it will be very
difficult to take off its outline and to fill the background manually.
Xi-Paint enables you to mask the flower and also to color your back-
ground by putting a colored rectangle in front of your flower. The
most important settings are fixed in the menu "Way of Masking".

@endnode


@node k17p13p2 "A color"
@toc "contents"


 @{b}17.13.2      A color @{ub}


menu: a color
shortcut: <right Amiga> <o>

The easiest way of masking is to ban just one color.  You set your
color with the "support color" by the scroller beside it.  The pos-
sible values go from 1 to 255 and represent each a color of your
colorrequester. To mask a color just set the "support color" scrol-
ler to the number of the corresponding color box. To get the exact
color it's recommended to pick it directly from the paint window.
(Activate the window, press <#>, click the desired colorpixel)

@endnode


@node k17p13p3 "Colorarea"
@toc "contents"


 @{b}17.13.3      Colorarea @{ub}


menu: colorarea
shortcut: <right Amiga> <m>

You may need to mask more than one color. That's why Xi-Paint
also allows a banning of similar colors, starting from the "support
color". The support color is set in the same manner as it is for just
one color. Try to find the best representative of your colors, the best
one would be one of the middle of the area.  By using the scroller
"+/ degrees in color circle" you can set the difference between the
support color and the other colors to be masked. Xi-Paint will show
you the well known color circle, with each of the basic colors 120
degrees distance from each other. In between transitions between R,
G and B. By help of "+/ degrees in color circle" you can set which
section of the circle should be masked. The bigger your choice, the
more colors will be masked.

@endnode


@node k17p13p4 "Colormatrix (CLUT)"
@toc "contents"


 @{b}17.13.4      Colormatrix (CLUT) @{ub}


menu: color matrix
shortcut: <right Amiga> <m>

Sometimes you'll have to mask colors which are not near each other
in the color circle. That's why Xi-Paint offers you the ability to use
the color matrix.  You mark a rectangular area of your picture
and the colors it contains will be masked.  But you can also set
divergences. The necessary steps are:

First you set the size of the rectangular area which should be mas-
ked.  Use the scroller "CLUT sides", with which you can set the
rectangle size between 1 and 20 color points.  Now press "Take
CLUT".  Now activate your paint window - a rectangle with the
set side length will stick on your mouse pointer.  Now click the
part of your painting which contains most of the colors you want
to mask. That's how you can choose a variety of different colors to
be masked.

@endnode


@node k17p13p5 "Saturation"
@toc "contents"


 @{b}17.13.5      Saturation @{ub}


menu: saturation
shortcut: <right Amiga> <s>

Sometimes you may want to mask the most garish color of your
object.  But colors can also be masked by their saturation.  First
define at "one color " a "support color". This will not set the color
itself, but its saturation.  By using the scroller "+/ saturation",
which can be set between 0 and 127, you can define how much the
colors to be masked (now saturations) are allowed to differ from the
support color.

@endnode


@node k17p13p6 "Contrast"
@toc "contents"


 @{b}17.13.6      Contrast @{ub}


menu: contrast
shortcut: <right Amiga> <c>

Contrast is set in the same manner as saturation. In this case the
settings will be fixed using the scroller "+/- contrast".

The mask requester also contains some other important features.
"Delete mask" deletes the actual mask of your paint window. The
setting of the manner of masking and the area to be masked are
not enough for banning the desired areas.  First you have to click
"add".  Doing this enables you to define masks as complex as you
want.

@endnode


@node k17p13p7 "Addition of Several Masking Steps"
@toc "contents"


 @{b}17.13.7      Addition of Several Masking Steps @{ub}


By clicking "add" - fixed settings will be added to an existing mask.
This way it's possible to create several masks in different worksteps
by using different methods. You can use for one area colorarea for
masking, for another one color matrix or saturation. If these areas
cover each other you need not worry.  "Show" is a special feature.
If you click it, a window with the same size of your paint window
will open and will show the actual mask in grey color.


Black points mean that this area does not belong to the mask.  If
you want, it's possible to save the contents of this special window
for using it for another project or for anything else.  The switch
"mask on color" / "paint on color" is also very important. It fixes
if all points belonging to the mask (mask on color) or all points
NOT belonging (paint on color) should be banned.  If you make a
mistake and choose the wrong setting, you just need to use "inverse"
(<right Amiga> <v>), which inverses the mask.  To activate a
defined mask for a certain window, use the on/off switch "switch
on mask". "Close" closes the mask requester, but the mask settings
are still active.

@endnode


@node k17p13p8 "Manipulation of Alpha Masks"
@toc "contents"


 @{b}17.13.8      Manipulation of Alpha Masks @{ub}


Xi-Paint even offers a tool for manipulation of alpha masks. With
"maximum mask" the maximum RGB value of each pixel will be
taken and written to the alpha channel.  "Minimum mask" takes
the minimum RGB value of each pixel.  "Inverse" generates the
reciprocal value, a "negative " of your mask will be produced.  If
your mask is to weak, "double alpha value" might be helpful. Values
over 255 will become 255.  "Halve alpha value" halves the value,
values below 0 become 0.  "Over take mask" is something special.
It allows you to take the alpha mask of another project or another
mask into your actual paint window. A list window will open from
which you can choose the "from" mask.


Overview of menu commands

  ____________________________________________________________
  |  Way of masking  |          | Mask operation      |      |
  ------------------------------------------------------------
  |       one color  | A-o      |        inverse      | A-v  |
  |    color matrix  | A-m      |   maximum mask      | A-a  |
  |      color area  | A-n      |   minimum mask      | A-i  |
  |      saturation  | A-s      |  halve alpha value  | A-h  |
  |        contrast  | A-c      | double alpha value  | A-d  |
  |                  |          |    take mask over   | A-s  |
  ------------------------------------------------------------

@endnode


@node k17p14 "Pen Requester"
@toc "contents"


 @{b}17.14        Pen Requester @{ub}


menu: pens....
shortcut: <right Amiga> <P>

	 @{" Figure: Pen Requester Icon " system "Run >NIL: <NIL: Display bilder/77.Stiftreq"}

This requester fulfills two tasks.  It generates the most important
basic pens and also offers management of several pens.  It looks
similar to the brush manager and also offers similar functions. The
16 rectangles can contain 32 pens, by using the scroller 16 are shown
at one time.

	 @{" Figure: Pen Requester " system "Run >NIL: <NIL: Display bilder/80.Stiftrequester"}

  @{" 17.14.1 Pen Preview " link "k17p14p1"}
  @{" 17.14.2 Generate a Pen " link "k17p14p2"}
  @{" 17.14.3 Square Pens " link "k17p14p3"}
  @{" 17.14.4 Circular Pens " link "k17p14p4"}
  @{" 17.14.5 Different Kinds of Airbrushes " link "k17p14p5"}
  @{" 17.14.6 Unicolor Circular Brushes " link "k17p14p6"}
  @{" 17.14.7 One Point Brush " link "k17p14p7"}
  @{" 17.14.8 Pen Menu " link "k17p14p8"}

@endnode


@node k17p14p1 "Pen Preview"
@toc "contents"


 @{b}17.14.1      Pen Preview @{ub}


To choose a pen just click on it. As in the brush manager, the pen
manager tries to use the whole area of the preview boxes.  This
means that the pens might lose their proportion.  That's why the
real size of each pen is shown in the top right corner.

@endnode


@node k17p14p2 "Generate a Pen"
@toc "contents"


 @{b}17.14.2      Generate a Pen @{ub}


For automatic generation use the button "generate pen ".  If you
click it a window will open which lets you insert the most important
settings for your pen. Before generating a pen choose the place of
the pen requester - where the new pen should be put.  Otherwise
the selected pen will be overwritten.

	 @{" Figure: Generate Requester " system "Run >NIL: <NIL: Display bilder/79.stift-generieren"}

The first setting concerns the size.  Values between 1 to 100 are
possible.  For a rectangular pen this value means the length of a
side, for a circular pen it means the diameter.

@endnode


@node k17p14p3 "Square Pens"
@toc "contents"


 @{b}17.14.3      Square Pens @{ub}


"Square" generates square pens.  The only necessary parameter is
the size, because this kind of pen will be generated in one color.

@endnode


@node k17p14p4 "Circular Pens"
@toc "contents"


 @{b}17.14.4      Circular Pens @{ub}


For circular pens the generation of airbrushes is also possible. Set
the size the same way as above. The basic of the generation of an
airbrush is a variable curve, which is shown in a special window you
can call with the button "generate curve".

@endnode


@node k17p14p5 "Different Kinds of Airbrushes"
@toc "contents"


 @{b}17.14.5      Different Kinds of Airbrushes @{ub}


The appearance of the airbrush should be set by this curve. Imagine
that a peak of the curve means a light brightness and a very flat part
of the curve means that the airbrush becomes darker and darker.
If you feel puzzled, just try it.

	 @{" Figure: Curve Requester " system "Run >NIL: <NIL: Display bilder/81.kurvegenerieren"}

The curve can be manipulated by two scrollers. One contains a va-
lue area between 1 and 100, the other one contains an area between
1 and 400. The first (top) scroller allows you to influence the margin
area of your airbrush (should the airbrush become completely dark
or just a little bit darker). The second (bottom) scroller influences
the steepness of the curve, which means how fast the shade from
light to dark should happen. Small values will give a flat curve, big
values mean a steep curve.

@endnode


@node k17p14p6 "Unicolor Circular Brushes"
@toc "contents"


 @{b}17.14.6      Unicolor Circular Brushes @{ub}


You'll need them very often and can produce them by airbrushing.
Just set the top scroller to "1". The pen will be generated with one
steady bright color.

@endnode


@node k17p14p7 "One Point Brush"
@toc "contents"


 @{b}17.14.7      One Point Brush @{ub}


You need not generate it on your own.  Just press <:>,  which
generates automatically a one point brush and overwrites it with
the actual pen in the pen requester.

The menu for the pen requester contains some additional features
for pen management:

@endnode


@node k17p14p8 "Pen Menu"
@toc "contents"


 @{b}17.14.8      Pen Menu @{ub}


Swap to disk
------------

shortcut: <right Amiga> <w>

This is the same features as described for the brush manager, which
causes the same effect for the pen.


Refresh
-------

shortcut: <right Amiga> <f>

This is also the same feature as for the brush manager and it also
causes the same effect (on the pens).


Delete
------

shortcut: <right Amiga> <D>

This is the same feature for the pen manager as it is explained for
the brush manager.


Delete Pen
----------

shortcut: <right Amiga> <x>

This feature allows you to delete selected pens but to keep the other
ones, which may be recommended because of the space they need
on your harddisk.


Overview menu commands

	_________________________
	|          pens  |      |
	-------------------------
	|  Swap to Disk  | A-w  |
	|        Refresh | A-f  |
	|         Delete | A-D  |
	|  Delete a pen  | A-x  |
	-------------------------

@endnode


@node k17p15 "Zoom Requester"
@toc "contents"


 @{b}17.15        Zoom Requester @{ub}


menu: zoom ....
shortcut: <right Amiga> <Z>

	 @{" Figure: Zoom Icon " system "Run >NIL: <NIL: Display bilder/44.lupe"}

Xi-Paint offers a variable use of the magnifier.  The magnifying
factor can be freely chosen and it's even possible to scale down
your object.

  @{" 17.15.1 Enlarging a Part of the Project " link "k17p15p1"}
  @{" 17.15.2 Scaling Down a Part of the Project " link "k17p15p2"}
  @{" 17.15.3 One Magnifier for Each Worksheet " link "k17p15p3"}

@endnode


@node k17p15p1 "Enlarging a Part of the Project"
@toc "contents"


 @{b}17.15.1      Enlarging a Part of the Project @{ub}


The available enlarging factor can be set between 1 (1:1) and 64
(64:1).  Set this factor by using the scroller in the zoom requester.
The magnifier will open its own window. Therein the size can be set
using the zoom requester and its input boxes "width" and "height".
But notice that even this magnifier window needs RAM!!!  Corre-
sponding to the chosen factor, a variable sized rectangle for cutting
out the desired section will be shown. The bigger the chosen factor,
the smaller the rectangle.  It's possible to work simultaneously in
both of the windows. Each change will be shown in both windows.

@endnode


@node k17p15p2 "Scaling Down a Part of the Project"
@toc "contents"


 @{b}17.15.2      Scaling Down a Part of the Project @{ub}


This is an exciting new feature!!!  This feature is especially inter-
esting if you want to manipulate oversized projects.  It allows you
to show the whole oversized project (scaled down) on your screen.
The project can be scaled down up to (1:64). That's possible only
if this step makes sense.  It won't be possible to show a 320x200
project scaled down by the factor 20. Xi-Paint will ignore this com-
mand which would make your painting sized 16x10 points. Scaling
down will not show you a rectangle to choose the desired section. It
opens a window which is sized exactly to contain the scaled down
picture.

@endnode


@node k17p15p3 "One Magnifier for Each Worksheet"
@toc "contents"


 @{b}17.15.3      One Magnifier for Each Worksheet @{ub}


Xi-Paint offers you for each worksheet your own magnifier in case
you'd like to mani pulate several projects at once. If you open a new
magnifier, the old one will close. This is done to prevent confusing
the user.

@endnode


@node k17p16 "Layer Requester"
@toc "contents"


 @{b}17.16        Layer Requester @{ub}


menu: layer ...
shortcut: <right Amiga> <E>

	 @{" Figure: Layer Requester Icon " system "Run >NIL: <NIL: Display bilder/71.Maskenreq"}

Using this feature, very interesting project manipulations become
possible.  This is easy and intuitive, as you already know from -
Paint. With these layers you can produce results which are perfect
for professionals.

	 @{" Figure: Layer Requster " system "Run >NIL: <NIL: Display bilder/83.layerrequester"}

  @{" 17.16.1 The Two Lists of the Layer Requester " link "k17p16p1"}
  @{" 17.16.2 Fixing the Order " link "k17p16p2"}
  @{" 17.16.3 Generating a Picture Composition " link "k17p16p3"}

@endnode


@node k17p16p1 "The Two Lists of the Layer Requester"
@toc "contents"


 @{b}17.16.1      The Two Lists of the Layer Requester @{ub}


The left list contains all shown paint windows, with the right one
you can mix up the desired projects. Each layer is made from two
graphics. The first one offers its brightness, the second one its color
information.  You can also add other projects, on which mask the
selected information depends. The order of the graphics can be set
in the "layer" list, to which you can copy as many entries from the
project list as you want. This happens by clicking the desired entry
of the project list once and pressing "add" afterwards.  The new
entry will appear in the layer list.  It's also possible to copy one
and the same graphic several times. File names (without path) will
be used as names for the entries, or if there is none, the standard
name "project X".  The different projects you use for a layer need
not be same size.  The result will always be sized as the largest of
the chosen objects.

@endnode


@node k17p16p2 "Fixing the Order"
@toc "contents"


 @{b}17.16.2      Fixing the Order @{ub}


Xi-Paint also allows a later re-ordering of your list. For that use the
four buttons right beside the text "order". They are for moving the
different entries in the list. This command concerns the last clicked
line, which is highlighted.  By "O" ("very top") the actual entry
will be put to the top of the list.  "U" ("very bottom") will put
the chosen entry to the bottom.  To highlight another entry, use
the two other buttons. If you've made a mistake and have chosen a
project for the layer list you don't want, click this entry and press
"del" button.

@endnode


@node k17p16p3 "Generating a Picture Composition"
@toc "contents"


 @{b}17.16.3      Generating a Picture Composition @{ub}


After producing the layerlist, the new graphic is ready to be ge-
nerated.  This happens by "show".  Click it and a new worksheet
with the new graphic will open.  Depending upon your processor,
this might need some time.  The new project can be manipulated
like any other independent project.  The composition result can
even be used as a layer itself. There are no menus assigned to the
layer requester, because each setting can be changed by the shown
buttons.

@endnode




@node k18 "Chapter  18"
@toc "contents"


 @{b}@{fg highlight}Chapter  18 @{ub}@{fg text}


 @{b}Paint  Modes @{ub}


Xi-Paint offers you a lot of painting possibilities, which can all be
found in the menu "paintmode".  The setting of the paint mode
is completely independent from the paint tool in use and is also
unaffected if you have chosen either a brush or a pen. While using
brushes their outline will be used for applying the various paint
modes.

  @{" 18.1  Solid " link "k18p1"}
  @{" 18.2  Background " link "k18p2"}
  @{" 18.3  Shade " link "k18p3"}
  @{" 18.4  Cycle " link "k18p4"}
  @{" 18.5  Smoothing " link "k18p5"}
  @{" 18.6  Smear " link "k18p6"}
  @{" 18.7  Tear " link "k18p7"}
  @{" 18.8  As-it-is " link "k18p8"}
  @{" 18.9  Inverse " link "k18p9"}
  @{" 18.10 Color Exchange " link "k18p10"}
  @{" 18.11 Brightness Exchange " link "k18p11"}
  @{" 18.12 Saturation Exchange " link "k18p12"}
  @{" 18.13 Darken " link "k18p13"}
  @{" 18.14 Brighten " link "k18p14"}
  @{" 18.15 Saturation + " link "k18p15"}
  @{" 18.16 Saturation - " link "k18p16"}
  @{" 18.17 Color Degree " link "k18p17"}
  @{" 18.18 Contrast + " link "k18p18"}
  @{" 18.19 Contrast - " link "k18p19"}

@endnode


@node k18p1 "Solid"
@toc "contents"


 @{b}18.1       Solid @{ub}


menu: solid
shortcut: <right Amiga> <1>

Xi-Paint activates "solid" after being started. Even if you choose a
brush it will be shown in the activated color.

@endnode


@node k18p2 "Background"
@toc "contents"


 @{b}18.2       Background @{ub}


menu: background
shortcut: <right Amiga> <2>

This feature allows you to "trace" parts of a "behind placed" pro-
ject. Of course you need not place the background picture exactly
behind your project.  Xi-Paint offers you special features to do so.
You can assign to each project any background you want.  The
size is not important.  The background project can be sized larger
or smaller.  But notice that you just can choose ONE picture as
background. Activate the project you want to use as background.

Thenchoose the menu feature "H-window?" (<right Amiga> <g>).
The feature will be marked and the chosen window can now be used
as background.  It can be used as background until you close the
background window or until another project is defined as back-
ground.

If you manipulate a project to which you have assigned a back-
ground, notice that you CAN'T paint in another window.  In this
case nothing will happen and you need to deactivate "background"
first.

@endnode


@node k18p3 "Shade"
@toc "contents"


 @{b}18.3       Shade @{ub}


menu: shade
shortcut: <right Amiga> <3>

By using shade you can get wonderful effects. For doing so activate
"shade". The defined shade (2 point to 5 point) will be used, inde-
pendent of the chosen tool. Shade needs a lot of work even from a
very fast Amiga, so take care to choose a 1 point pen to fill bigger
areas with shade.  To get some special effects.  look in the tutorial
part of this manual. If you are not sure if Xi-Paint is still working
or if your computer crashed, just press <esc>.  A window, which
shows you the completed work, will appear.

@endnode


@node k18p4 "Cycle"
@toc "contents"


 @{b}18.4       Cycle @{ub}


menu: cycle
shortcut: <right Amiga> <4>

This causes a repetition of a special color combination, which has
been set in the cycle requester.  After having been activated, "cy-
cle" influences each paint operation regardless of the chosen tool.
Regarding the time necessary, refer to "@{Shade link k18p3}".

@endnode


@node k18p5 "Smoothing"
@toc "contents"


 @{b}18.5       Smoothing @{ub}


menu: smooth
shortcut: <right Amiga> <5>

Smooth tries to paint smooth transitions instead of sharp edges. If
you try to use it in the middle of a unicolored area, nothing will
happen because an area can not become smoother.

@endnode


@node k18p6 "Smear"
@toc "contents"


 @{b}18.6       Smear @{ub}


menu: smear
shortcut: <right Amiga> <6>

By using smear the colors and outlines of your project will be mer-
ged. For this feature it's recommended to use freehand tools, other-
wise "smear" will not cause real effects.  A simulation of the wet
watercolor effect in which colors run into each other is not possible
to produce with this feature.

@endnode


@node k18p7 "Tear"
@toc "contents"


 @{b}18.7       Tear @{ub}


menu: tear
shortcut: <right Amiga> <7>

Do not confuse this feature with "smear".  "Tear" is a completely
different task.  It causes the color located under the bottom of a
brush to be shown, while moving the mouse, at the next position
(while using big brushes the mouse pointer's position will be taken).

For this feature it's also recommended to use freehand tools with
very small brushes. Otherwise the selected color may cover its whole
environment. You can imagine how it would look - imagine sticking
your finger into fresh oil paint and moving this finger into another
color.

@endnode


@node k18p8 "As-it-is"
@toc "contents"


 @{b}18.8       As-it-is @{ub}


menu: as it is
shortcut: <right Amiga> <8>

Until now the outlines and area of brushes/pens has been used to
cause special effects. If you want to take a brush for copying parts
of a project, use the paint mode "as it is".  The chosen brush will
be inserted 1:1 into your new project.  This mode can be used in
common cases for brush manipulations.

@endnode


@node k18p9 "Inverse"
@toc "contents"


 @{b}18.9       Inverse @{ub}


menu: inverse

You'll need this feature just for some special effects. You can cause
a total alienation of your project. Just try it to see what it can look
like!

@endnode


@node k18p10 "Color Exchange"
@toc "contents"


 @{b}18.10        Color Exchange @{ub}


menu: color exchange

This feature allows you to dye an object a different color without
changing outlines and contrast.  Imagine the effect as looking at
the chosen area through a filter.  Xi-Paint allows you to set any
color any position. For color exchange Xi-Paint will always use the
activated color. Black and white take a special position. They are
not affected by "color exchange".  Black has no brightness, so it
will remain black.  White contains each color itself, so it won't be
exchanged.

@endnode


@node k18p11 "Brightness Exchange"
@toc "contents"


 @{b}18.11        Brightness Exchange @{ub}


menu: exchange brightness

By using this feature you can brighten or darken each part of a
project without changing the color.  For the value of brightness
the brightness of the activated color will be used, that's why it's
recommended to choose HSV instead of RGB. It is very difficult to
explain this effect, but let's try it out:

Load a project as dark as possible and choose the color white (RGB
= 255, 255, 255). Now choose an average sized brush (20x20) and
paint by using a freehand tool over your project. It will get the full
brightness.  If you choose a dark grey (RGB = 50, 50, 50) instead
of white, the affected areas will become darker. For this mode each
tool can be used, but most time you will use the filled freehand
area, the filled polygon or the filled rectangle.

@endnode


@node k18p12 "Saturation Exchange"
@toc "contents"


 @{b}18.12        Saturation Exchange @{ub}


menu: Satur. Change

This feature will transfer the saturation of the activated color to
you project. To do so it's recommended to use HSV for setting an
exact value for saturation.  Any paint tool can be used, but it's
recommended to use filled objects.

@endnode


@node k18p13 "Darken"
@toc "contents"


 @{b}18.13        Darken @{ub}


menu: Darken

Use this tool to darken complete areas of your project (you can set
values between 0 and 100

@endnode


@node k18p14 "Brighten"
@toc "contents"


 @{b}18.14        Brighten @{ub}


menu: Brighten

Use this tool to brighten complete areas of your project (you can
set a value between 0 and 100

@endnode


@node k18p15 "Saturation +"
@toc "contents"


 @{b}18.15        Saturation + @{ub}


menu: Saturation +

With this tool you can enrich the saturation of complete areas of
your project, even by airbrushing.

@endnode


@node k18p16 "Saturation -"
@toc "contents"


 @{b}18.16        Saturation - @{ub}


menu: Saturation -

This tool lowers the saturation of complete areas of your project or
bring it by airbrush closer to grey.

@endnode


@node k18p17 "Color Degree"
@toc "contents"


 @{b}18.17        Color Degree @{ub}


menu: Color Degree

With this tool you can change the hue values of complete areas of
your project. You can also realize rainbow shades by airbrush.

@endnode


@node k18p18 "Contrast +"
@toc "contents"


 @{b}18.18        Contrast + @{ub}


menu: Contrast +

Use this tool to raise the contrast of complete areas of your project.

@endnode


@node k18p19 "Contrast -"
@toc "contents"


 @{b}18.19        Contrast - @{ub}


menu: Contrast -

With this tool you can lower the contrast of complete areas of your
project.

@endnode




@node k19 "Chapter  19"
@toc "contents"


  @{b}@{fg highlight}Chapter  19 @{ub}@{fg text}


  @{b}Shortcuts @{ub}


While most of Xi-Paint is handled with the mouse, for every func-
tion a shortcut is available.

Most of the shortcuts are the same as the shortcuts of DPaint.

The only exception are the shortcuts for the brush manipulation.
These functions are only accessible via shortcut and not via menu.
This is a kind of copy-protection - without the manual you don't
know how to handle the brushes.

       @{" 19.0.1  Mirror at the X-axis " link "k19p0p1"}
       @{" 19.0.2  Mirror at the Y-axis " link "k19p0p2"}
       @{" 19.0.3  Turn Brush 90° " link "k19p0p3"}
       @{" 19.0.4  Brush Half " link "k19p0p4"}
       @{" 19.0.5  Brush Double " link "k19p0p5"}
       @{" 19.0.6  Brushwidth Half " link "k19p0p6"}
       @{" 19.0.7  Brushheight Half " link "k19p0p7"}
       @{" 19.0.8  Brushsize Individual " link "k19p0p8"}
       @{" 19.0.9  Turn the Brush Individual " link "k19p0p9"}
       @{" 19.0.10 Maximum Mask for the Actual Brush " link "k19p0p10"}
       @{" 19.0.11 Mask a Brush " link "k19p0p11"}
       @{" 19.0.12 Switch off Masking " link "k19p0p12"}
       @{" 19.0.13 Get Color " link "k19p0p13"}
       @{" 19.0.14 Get a One Point Pen " link "k19p0p14"}
       @{" 19.0.15 Get a New Pen " link "k19p0p15"}
  @{" 19.1 Moving the Mouse with Keyboard " link "k19p1"}

@endnode


@node k19p0p1 "Mirror at the X-axis"
@toc "contents"


 @{b}19.0.1    Mirror at the X-axis @{ub}


Key: x

Mirrors the brush around the X-Axis (Horizontal).

@endnode


@node k19p0p2 "Mirror at the Y-axis"
@toc "contents"


 @{b}19.0.2    Mirror at the Y-axis @{ub}


Key: y

Mirrors the brush around the Y-Axis (Vertical).

@endnode


@node k19p0p3 "Turn Brush 90°"
@toc "contents"


 @{b}19.0.3    Turn Brush 90° @{ub}


Key: z

Turns the brush around the Z-Axis (90?).

@endnode


@node k19p0p4 "Brush Half"
@toc "contents"


 @{b}19.0.4    Brush Half @{ub}


Key: h

Divides the brush in half along the X-and Y-Axis.

@endnode


@node k19p0p5 "Brush Double"
@toc "contents"


 @{b}19.0.5    Brush Double @{ub}


Key: H

Doubles the brush along the X-and Y-Axis.

@endnode


@node k19p0p6 "Brushwidth Half"
@toc "contents"


 @{b}19.0.6    Brushwidth Half @{ub}


Key: X

Divides the brush in half along the X-Axis.

@endnode


@node k19p0p7 "Brushheight Half"
@toc "contents"


 @{b}19.0.7    Brushheight Half @{ub}


Key: Y

Divides the brush in half along the Y-Axis.

@endnode


@node k19p0p8 "Brushsize Individual"
@toc "contents"


 @{b}19.0.8    Brushsize Individual @{ub}


Key: %

Opens a window for entering the new dimension of the actual brush.
Enter the new values or click on "Draw Size" for drawing a rectangle
in the desired dimension. Click on Execute to create the new brush.

@endnode


@node k19p0p9 "Turn the Brush Individual"
@toc "contents"


 @{b}19.0.9    Turn the Brush Individual @{ub}


Key: $

Opens a new window with a slider to enter the angle of the new
brush.  Click on "Draw angle" for drawing interactive an angle.
Click on Execute to create the new brush.

@endnode


@node k19p0p10 "Maximum Mask for the Actual Brush"
@toc "contents"


 @{b}19.0.10      Maximum Mask for the Actual Brush @{ub}


Key: [

Creates an alpha-mask for the actual brush.  Xi-Paint takes the
maximum value of the R/G/B-Values and puts it into the alpha-
Channel. The paint mode will be changed to alpha.

@endnode


@node k19p0p11 "Mask a Brush"
@toc "contents"


 @{b}19.0.11      Mask a Brush @{ub}


Key: /

Creates an alpha-mask for the actual brush in the actual color (look
at the color-requester for the actual color). The paint mode will be
switched to "cut-off".

@endnode


@node k19p0p12 "Switch off Masking"
@toc "contents"


 @{b}19.0.12      Switch off Masking @{ub}


Key: ]

Turns off the paint-mode"cut-off" or "alpha". The actual brush is
painted as a rectangle.

@endnode


@node k19p0p13 "Get Color"
@toc "contents"


 @{b}19.0.13      Get Color @{ub}


Key: #

After hitting this key, Xi-Paint waits for a mouse-click to an actual
paint-window to pick the current color.  This will be displayed in
the color-requester and in the border of the actual paint window.

@endnode


@node k19p0p14 "Get a One Point Pen"
@toc "contents"


 @{b}19.0.14      Get a One Point Pen @{ub}


Key: .

The actual pen will be a one-point pen.

@endnode


@node k19p0p15 "Get a New Pen"
@toc "contents"


 @{b}19.0.15      Get a New Pen @{ub}


Key: .

After hitting this key,  you can paint a circle which will be the
diameter of the actual pen.

@endnode


@node k19p1 "Moving the Mouse with Keyboard"
@toc "contents"


 @{b}19.1      Moving the Mouse with Keyboard @{ub}


_______________________________________________________________________
|                    Key   |    function                              |
-----------------------------------------------------------------------
|        <Amiga>  <Left>   |    Mousepointer 1 Pixel to the left.     |
|        <Amiga> <Right>   |    Mousepointer 1 Pixel to the right.    |
|        <Amiga>    <Up>   |    Mousepointer 1 Pixel up.              |
|        <Amiga>  <Down>   |    Mousepointer 1 Pixel down.            |
-----------------------------------------------------------------------
| <Amiga><Shift>  <Left>   |    Mousepointer 60 Pixels to the left.   |
| <Amiga><Shift> <Right>   |    Mousepointer 60 Pixels to the right.  |
| <Amiga><Shift>    <Up>   |    Mousepointer 60 Pixels up.            |
| <Amiga><Shift>  <Down>   |    Mousepointer 60 Pixels down.          |
-----------------------------------------------------------------------
|      <l-Amiga> <l-ALT>   |    press left mousebutton.               |
|      <r-Amiga> <r-ALT>   |    press rigth mousebutton.              |
|          <r-Amiga> <n>   |    new project                           |
|          <r-Amiga> <o>   |    load new file to a new project        |
|          <r-Amiga> <l>   |    load new picture in an old project    |
|          <r-Amiga> <L>   |    load brush                            |
|          <r-Amiga> <s>   |    save project                          |
|          <r-Amiga> <a>   |    save project with new name            |
|          <r-Amiga> <b>   |    save picture                          |
|          <r-Amiga> <Q>   |    quit XiPaint                          |
-----------------------------------------------------------------------
|          <r-Amiga> < >   |    opens Tool-Requester                  |
|          <r-Amiga> <C>   |    opens Color-Requester                 |
|          <r-Amiga> <B>   |    opens Brush-Requester                 |
|          <r-Amiga> <P>   |    opens Pen-Requester                   |
|          <r-Amiga> <G>   |    opens Grid-Requester                  |
|          <r-Amiga> <H>   |    opens Shadow-Requester                |
|          <r-Amiga> <Y>   |    opens Cycle-Requester                 |
|          <r-Amiga> <S>   |    opens SystemSetting-Requester         |
|          <r-Amiga> <M>   |    opens Mask-Requester                  |
|          <r-Amiga> <V>   |    opens Gradient-Requester              |
|          <r-Amiga> <T>   |    opens Style-Requester                 |
-----------------------------------------------------------------------
|          <r-Amiga> <Z>   |    opens Zoom-Requester                  |
|          <r-Amiga> <E>   |    opens Layer-Requester                 |
|          <r-Amiga> <D>   |    opens Parameter-Requester             |
-----------------------------------------------------------------------
|          <r-Amiga> <m>   |    Macro start                           |
|          <r-Amiga> <u>   |    Macro execute                         |
|          <r-Amiga> <f>   |    Empty Undo-Memory                     |
-----------------------------------------------------------------------
|          <r-Amiga> <1>   |    Paintmode Solid                       |
|          <r-Amiga> <2>   |    Paintmode Background                  |
|          <r-Amiga> <3>   |    Paintmode Gradient                    |
|          <r-Amiga> <4>   |    Paintmode Cycle                       |
|          <r-Amiga> <5>   |    Paintmode Soften                      |
|          <r-Amiga> <6>   |    Paintmode Smear                       |
|          <r-Amiga> <7>   |    Paintmode Tear                        |
|          <r-Amiga> <8>   |    Paintmode As-it-is                    |
-----------------------------------------------------------------------
|                     b    |    Get rectangular brush                 |
|                     n    |    Get polygonial brush                  |
|                     N    |    Get freedraw-brush                    |
|                     x    |    Mirrors brush at the X-Axis           |
|                     y    |    Mirrors brush at the Y-Axis           |
|                     z    |    Turns brush                           |
|                     X    |    Halves brush at the X-Axis            |
|                     Y    |    Halves brush at the Y-Axis            |
|                     Z    |    Transpose brush                       |
|                     %    |    Size brush                            |
|                     h    |    Halfs brush                           |
|                     H    |    Doubles brush                         |
|                     $    |    Turns brush                           |
-----------------------------------------------------------------------
|                     e    |    Ellipse                               |
|                     E    |    Filled Ellipse                        |
-----------------------------------------------------------------------
|                     r    |    Rectangle                             |
|                     R    |    Filled Rectangle                      |
|                     t    |    Text                                  |
|                     T    |    New Font                              |
|                     p    |    Polygon                               |
|                     P    |    Filled Polygon                        |
|                     F    |    Freedraw filled Polygon               |
|                     W    |    Filled Polygon                        |
|                     v    |    Line                                  |
|                     D    |    Freedraw                              |
|                     q    |    Curve                                 |
|                     d    |    Freedraw                              |
|                     f    |    Fill                                  |
|                     m    |    Zoom                                  |
|                     a    |    Lighttable                            |
-----------------------------------------------------------------------
|                     k    |    Clears Project black                  |
|                     K    |    Clears Project white                  |
|                     u    |    undo                                  |
|                     U    |    redo                                  |
|                   Esc    |    Cancel                                |
|                 Alt-y    |    Flip Picture   O                      |
|                 Alt-z    |    Flip_Picture_90                       |
-----------------------------------------------------------------------
|                     [    |    mask brush with maximum mask          |
|                     /    |    mask brush with actual color          |
|                     ]    |    no alpha mask for brush               |
-----------------------------------------------------------------------
|                     #    |    get color                             |
|                     .    |    one point pen                         |
|                     ,    |    get individual pen                    |
-----------------------------------------------------------------------

@endnode




@node k20 "Chapter  20"
@toc "contents"


 @{b}@{fg highlight}Chapter  20 @{ub}@{fg text}


 @{b}The  AREXX  Interface @{ub}


All functions of Xi-Paint can also be externally controlled with the
script language AREXX. Although some functions are not available
from the main menu, if required by the user, they can easily be
integrated into AREXX macro menu. Additionally AREXX script
enables you to automatically perform tedious picture manipulations
automatically, to program self running demos, or effects.

  @{" 20.1  Table of AREXX-commands " link "k20p1"}
  @{" 20.2  Description of AREXX-Commands " link "k20p2"}
  @{" 20.3  Parameter-Tabels " link "k20p3"}
       @{" 20.3.1  Color Modes " link "k20p3p1"}

@endnode


@node k20p1 "Table of AREXX-commands"
@toc "contents"


 @{b}20.1      Table of AREXX-commands @{ub}


In the following list represents all available Xi-Paint AREXX com-
mands.

      _____________________________________________________
      |         Befehl  | Param  | String  | Menu  | Key  |
      -----------------------------------------------------
      |            arc  |   6    | no     | yes    | yes  |
      |         aslreq  |   1    | no     | yes    | no   |
      |      beginpoly  |   0    | no     | yes    | yes  |
      |            box  |   4    | no     | yes    | yes  |
      |      brushload  |   0    | yes    | yes    | yes  |
      |      brushsave  |   0    | yes    | yes    | yes  |
      |     brushturnd  |   1    | no     | no     | yes  |
      |     brushturnx  |   0    | no     | no     | yes  |
      |     brushturny  |   0    | no     | no     | yes  |
      |     brushturnz  |   0    | no     | no     | yes  |
      |     brushxhalf  |   0    | no     | no     | yes  |
      |     brushyhalf  |   0    | no     | no     | yes  |
      |      brushhalf  |   0    | no     | no     | yes  |
      |    brushdouble  |   0    | no     | no     | yes  |
      |      brushsize  |   2    | no     | no     | yes  |
      |            cls  |   1    | no     | yes    | yes  |
      |          color  |   4    | no     | yes    | yes  |
      |      cyclemode  |   5    | no     | yes    | no   |
      |          dline  |   2    | no     | yes    | yes  |
      |       drawpara  |   7    | no     | yes    | no   |
      |           edge  |   1    | no     | no     | no   |
      |         ellips  |   4    | no     | yes    | yes  |
      |       endfpoly  |   0    | no     | yes    | yes  |
      |      endpbrush  |   0    | no     | yes    | yes  |
      |        endpoly  |   0    | no     | yes    | yes  |
      |        endrexx  |   0    | no     | no     | yes  |
      |           exit  |   0    | no     | yes    | yes  |
      |           fbox  |   4    | no     | yes    | yes  |
      |        fellips  |   4    | no     | yes    | yes  |
      |           fill  |   4    | no     | yes    | yes  |
      |        fontdpi  |   3    | no     | yes    | no   |
      |       getbrush  |   4    | no     | yes    | yes  |
      |       gradmode  |   3    | no     | yes    | no   |
      |          itext  |   0    | no     | yes    | yes  |
      |           line  |   4    | no     | yes    | yes  |
      |     lighttable  |   0    | no     | yes    | yes  |
      |       maskclut  |   2    | no     | yes    | yes  |
      |       maskmode  |   7    | no     | yes    | yes  |
      |        maxmask  |   0    | no     | no     | yes  |
      |        minipic  |   1    | yes    | yes    | no   |
      |        picload  |   0    | yes    | yes    | yes  |
      |        picsave  |   0    | yes    | yes    | yes  |
      |    pointlayout  |   3    | no     | yes    | no   |
      |       polymove  |   2    | no     | yes    | yes  |
      |       polydraw  |   2    | no     | yes    | yes  |
      |           redo  |   0    | no     | yes    | yes  |
      |       savemode  |   2    | no     | yes    | no   |
      |        setfont  |   1    | yes    | yes    | yes  |
      |        setgrid  |   5    | no     | yes    | no   |
      |     setmaxmove  |   1    | no     | yes    | no   |
      |       setpoint  |   2    | no     | yes    | yes  |
      |      setshadow  |   3    | no     | yes    | yes  |
      |           text  |   0    | yes    | yes    | yes  |
      |           undo  |   0    | no     | yes    | yes  |
      |        version  |   0    | no     | no     | no   |
      |       vlabdigi  |   0    | no     | yes    | no   |
      |      vlabinput  |   3    | no     | yes    | no   |
      |   vlabscansize  |   4    | no     | yes    | no   |
      |    vlabdeinter  |   0    | no     | yes    | no   |
      |           wait  |   1    | no     | no     | no   |
      -----------------------------------------------------

@endnode


@node k20p2 "Description of AREXX-Commands"
@toc "contents"


 @{b}20.2      Description of AREXX-Commands @{ub}


In order to easily understand each of the parameters it might be
useful to call Xi-Paint and to create an AREXX script with the
auto macro funtion included.  To start the macro function use the
key combination <Amiga> m.

To start macro recording, execute any menu or drawing commandst
hat you want recorded and finish the macro using the <Amiga>
m a second time.  This will bring up a file-requester (Save the file
for example as ram:test).

You may now go and examine your script by leaving Xi-Paint (eit-
her by pressing <Amiga M/N> or entering "Quit") and load the
created AREXX script into any text editor:1>  ed  ram:testIt is
important to note that Undo steps are NOT recorded! In some of
the following examples of AREXX the following two lines may have
been omitted, howe ver, they are required for any AREXX script
to work:

/*  Rexx-Macro  of  XiXi-Paint  */
address  'xipaint'

The first line within the remarks can be any given line. AREXX re-
quiresthis line to recognize whether it is a valid AREXX script. The
second linegives AREXX the information about which program has
to work on the followingdata; in this case Xi-Paint.  Having star-
ted Xi-Paint you cannow return to any Amiga screen by pressing
Amiga N %where you can exe cute the script.

You can start an AREXX Script as follows: 1>  rx  ram:test

Now something should happen on the screen of the display.  The
double quotes at the left and the right side of some of the com-
mands ensurethat the AREXX commands are correctly read. Un-
der normal conditionsthey might not be necessary, but to ensure
that AREXX finds the correctmessage port the command "address
'xipaint' " must be put indoublequotes. In the case where a transfer
string contains negative numbers AREXX will try to calculate two
parameters and the parameter list would subsequently be incom-
plete.


    o arc, 6 Parameter

      Draws a Bezier curve with three supporting points. The coor-
      dinates aregiven in the first 6 parameters, X and Y respecti-
      vely.

      Example:
      'arc  227  89  381  140  272  216'


    o aslreq, 1 Parameter

      Causes Xi-Paint to use the ASL File Requester instead of the
      built inrequester.

      Example:
      aslreq  1


    o beginpoly, no Parameter

      Starts the process of drawing a filled or unfilled polygon, or
      the cuttingof a polygon brush.

      Example:
      /*  Automatic  generated  macro  from  XiXi-Paint  3.0  */
      address  'xipaint'  beginpoly
      'polymove  200  181'
      'polydraw  119  212'
      'polydraw  118  213'
      'polydraw  120  213'
      'polydraw  189  202'
      'polydraw  228  226'
      'polydraw  200  181'
      'endpoly'
      beginpoly
      'polymove  17  8  285'
      'polydraw  106  333'
      'polydraw  172  313'
      'polydraw  184  360'
      'polydraw  178  285'
      'endpbrush


    o box, 4 Parameter

      Draws a rectangle. The first 4 parameters indicate the corner
      points.

      Example:
      'box'  190  419  232  474


    o brushload, eine Zeichenkette

      Loads a brush.

      Example:
      'brushload'  'pictures/TutEnchS.jpg'


    o brushsave, a string

      Saves a brush.

      Example:
      'brushsave'  'pictures/TutEnchS.iff'


    o brushturnd, one Parameter

      Turns the brush with the desired angle.

      Example:
      /*  Automatically  generated  macro  from  XiPaint  3.0  */
      address  'xipaint'
      'getbrush  142  235  56  29'
      'brushdouble'
      'brushyhalf'
      'brushxhalf'
      'brushdouble'
      'brushhalf'
      'brushsize  41  266  '
      'turnbrushy'
      'turnbrushz'
      'brushturnd'  23
      endrexx


    o brushturnx, no Parameter

      Mirrors the brush around the X-Axis.

      Example: look at "brushturnd"


    o brushturny, no Parameter

      Mirrors the brush around the Y-Axis.

      Example: look at "brushturnd"


    o brushturnz, no Parameter

      Turns a brush 90°.

      Example: look at "brushturnd"


    o brushxhalf, no Parameter

      Halfs a brush along the X-Axis.

      Example: look at "brushturnd"


    o brushyhalf, no Parameter

      Halfs a brush along the Y-Axis.

      Example: look at "brushturnd"


    o brushhalf, no Parameter

      Halfs a brush.

      Example: look at "brushturnd"


    o brushdouble, no Parameter

      Doubles a brush.

      Example: look at "brushturnd"


    o brushsize, 2 Parameter

      Sizes a brush to the given parameters.

      Example: look at "brushturnd"


    o cls, ein Parameter

      Clears the actual project in the actual color, black or white.
      _________________________________________
      |   Kind  |  Value                      |
      -----------------------------------------
      |  20922  |  Clears in black            |
      |  20921  |  Clears in white            |
      |  20920  |  Clears in the actual color |
      -----------------------------------------

      Example:
      cls  20920


    o color, 4 Parameter

      Determines the colors.  The first 3 parameters give the r , g
      and b value. The last parameter gives the color to be changed,
      which is valid from 0 to 255.

      Example:
      'color  12  254  242  0'
      'color  239  254  14  1'


    o cyclemode, 1 Parameter

      This mode defines which colors cycling should be used.  The
      following values are possible:The first value gives the offset
      of the begin ning of colorentry.  This is a value of 0 to1999
      if you want to use 2000 entrys.The second value gives the
      internal step, also within 0 and 1999.The third value gives
      the maximum steps. Also from 1 to 2000.The fourth and fifth
      value are the begin-etry and end-entry of the color-register.

      Example:
      'cyclemode'  0  0  2000  2  6


    o dline, 6 Parameter

      Is used for drawing a solid line.  The only difference to the
      "line"command is the missing first pixel of the line.  Due to
      this you need touse the "move" command before executing
      "dline".

      Example:
      'setpoint'  124  62
      'setpoint'  124  62
      'polymove'  81  81
      'dline'  82  83
      'dline'  85  90
      'dline'  87  101
      'dline'  90  110
      'dline'  93  117
      'dline'  111  123
      'dline'  116  122
      'dline'  118  120
      'endrexx'

    o drawpara, 7 Parameter

      Is used for defining the darkness and brightness etc.

      ________________________________________________
      |  Parameter  | Value              |  Limits   |
      --------------- --------------------------------
      |      1      | Brightness         |  0-255    |
      |      2      | Darkness           |  0-255    |
      |      3      | Antialiasingfactor |  0-255    |
      |      4      | fastfill           |  0-1      |
      |      5      | keep-mask          |  0-1      |
      |      6      | Pixel-Current      |  0-16000  |
      |      7      | 1-Pixel-Current    |  0-16000  |
      ------------------------------------------------


    o edge, 1 Parameter

      the handle is attached to the brush.  Usually it is located in
      the middle.Use this command to change the location of the
      holding point.  Theparameters indicate the X and Y values
      in relation to the upper left cornerof the brush.  It is easier,
      however, to use the command "setedge"instead which auto-
      matically calculates the coordinates.

      ___________________________
      |  Value  | Setting       |
      ---------------------------
      |  1      | left top      |
      |  2      | left bottom   |
      |  3      | right top     |
      |  4      | right bottom  |
      |  0      | middle        |
      ---------------------------

      Example:
      edge  1


    o ellips, 4 Parameter

      Draws  an  ellipse.   The  first  four  parameters  indicate  the
      middle point and the radius.

      Example:
      'ellips'  297  305  316  329


    o endpoly, no Parameter

      Ends a polygon.

      Example:
      look at beginpoly.


    o endfpoly, no Parameter

      Ends a filled polygon.

      Example:
      look at beginpoly.


    o endpbrush, no Parameter

      Ends a polygonial brush.

      Example:
      look at beginpoly


    o endrexx, no Parameter

      Ends an AREXX script,  returning to all functions normal
      paint conditions.This command should be entered after each
      AREXX script.  If you don't dothis the Undo will not work
      properly.

      Example:
      endrexx


    o exit, no Parameter

      Quits Xi-Paint.

      Example:
      exit


    o fbox, 4 Parameter

      Draws a filled rectangle.  The first 4 parameters indicate the
      corner points.

      Example:
      'fbox'  190  419  232  474


    o fellips, 4 Parameter

      Draws a filled ellipse.  The first four parameters indicate the
      middle point and the radius.

      Example:
      'fellips'  297  305  316  329


    o fill, 4 Parameter

      Fills at the given coordinate.

      Example:
      'fill  100  100'


    o fontdpi, 3 Parameter

      Sets the dpi of a given font.  The third paraeter switches
      Antialias on/off.

      Example:
      fontdpi  75  80  0


    o getbrush, 4 Parameter

      Cuts off an rectangular brush.

      Example: look at "brushturnd"


    o gradmode, 3 Parameter

      Enters the mode for gradient. The second and third parame-
      ter gives the percentage of the fifth point (if chosen).
      ____________________________________
      |  Mode   | Value                  |
      ------------------------------------
      |  1      | Horizontal, 2 Colors   |
      |  2      | Vertical, 2 Colors     |
      |  4      | 3 Colors, Top two      |
      |  3      | 3 Colors, Bottom two   |
      |  5      | 4 Colors               |
      |  6      | 5 Colors               |
      ------------------------------------


    o itext, 3 Parameter

      Gives an interactive string-requester.  The string willbe con-
      verted to a brush.

      Example:
      /*  Interaktiver  Text  */
      address  'xipaint'
      'itext'
      endrexx


    o line, 4 Parameter

      Line from x1, y1 to x2, y2.

      Example:
      'Color'  102  102  102  0
      'line'  319  140  412  234


    o lighttable, no Parameter Switches the lighttable on/off

      Example:
      lighttable


    o maskclut, 2 Parameter Gives the coordinates for the taken
      CLUT.

      Example:
      'maskclut'  194  144


    o maskmode, 7 Parameter Switches the mask on/off

      Modes:
      _________________________________________________
      |  Parameter  | Value   | Function              |
      -------------------------------------------------
      |      1      | 0       | Don't Paint on mask   |
      |      1      | 1       | Paint on mask         |
      |      2      | 0-255   | Mask color-entry      |
      |      3      | 0-3600  | Hue-of mask           |
      |      4      | 0-255   | Saturation of mask    |
      |      5      | 0-255   | Intensity of mask     |
      |      6      | 1-20    | Side of CLUT-Square   |
      |      7      | 0       | Mask off              |
      |      7      | 1       | Mask on               |
      -------------------------------------------------

      Example:
      'maskmode'  1  1  10  10  10  10  1


    o maxmask, no Parameter

      Generates automatically a maxi mummask for
      the actual brush.


    o minipic, one Parameter, a string

      Creates a minipic for the desired filename.
      The first parameter gives the information, if
      the file (0) is a picture or a font (1).


    o picload, a string

      Loads pictures.

      Example:
      'picload'  'pictures/TutEnch.jpg'


    o picsave, a string

      Saves pictures.

      Example:
      'picsave'  'pictures/TutEnch.iff'


    o pointlayout, 3  Parameter

      Mode  of  generating  a  pen: round(1), squared (0).

      The second parameter gives the diameter in pixel.The last parameter
      says the mode (color-mode) for creating the pen.

      Example:
      pointlayout  0  8  3


    o polymove, 2 Parameter Moves the internal cursor for po-
      lygonial lines.

      Example:
      beginpoly
      'polymove  186  154'
      'polydraw  121  187'
      'polydraw  164  238'
      'polydraw  163  238'
      'polydraw  222  206'
      'polydraw  186  154'
      'endpbrush'
      'setpoint  221  156'


    o polydraw, 2 Parameter Draws a polygonial line or cuts a
      polygonial brush.

      Example: look at "polymove"


    o redo, no Parameter Makes a redo.


    o savemode, 2 Parameter Gives the save-format (table be-
      low).  The second parameter says the deepness (24 bit or 32
      bit).

      __________________________
      |  Value  | Fileformat   |
      --------------------------
      |  0      | IFF-DEEP     |
      |  1      | IFF-ILBM     |
      |  2      | PBM          |
      |  3      | PPM          |
      |  4      | SUNRASTER    |
      --------------------------

      Example:
      'savemode'  4  32


    o setfont, a string, 1 Parameter Loads the desired font.

      Example: look at "text"


    o setgrid,  5  Parameter Switches on a grid in the desired
      size (width/height, Offset x/y). The last parameter switches
      on(1) or off(0).

      Example:
      setgrid  3  3  0  0  1


    o setmaxmove, ein Parameter Gives the maximal size of a
      full displayed brush.

      Example:
      setmaxmove  50000


    o setpoint, 2 Parameter To set a point at the given coordi-
      nate.

      Example:
      'setpoint  145  184'


    o setshadow,  3 Parameter Gives the direction of the sha-
      dow.The third parameter switches the shadow on (1) or off(0).

      Example: look at "text"


    o text, no Parameter, string Makes from the given string a
      brush.

      Example:
      'setfont'  60  'FONTS:CGTriumvirate.font'
      'setshadow'  10  '-10'  1
      'text'  'Der  Versuch'
      setpoint  10  30


    o undo, no Parameter Makes an undo.


    o version, no Parameter Versionnumber of Xi-Paint.

      Example:
      /*  gets  the  version  from  Xi-Paint  */
      options  results
      address  'xipaint'  'Version'
      say  result  'version'


    o vlabinput,   3  Parameter  Sets  the  VTR-Mode  (0/1),
      PAL/NTSC  (1/0)  and  the  Input-Channel  of  the  VLab-
      Digitizer.

      Example:
      vlabinput  0  1  2


    o vlabscansize,  4 Parameter Defines the digitizer areas of
      VLab. The four parameters specify the leftupper corner, the
      width and the height.

      Example:
      vlabscansize  0  20  720  600


    o vlabdigi, no Parameter Digitizes a picture using the VLab
      digitizer.

      Example:
      vlabgrab  0  20  720  600


    o vlabdeinter,  no  Parameter Deinterlaces the actual pic-
      ture.

      Example:
      vlabdeinter


    o wait, ein Parameter This command suffices to perform a
      waiting loop during a demonstration.  The parameter gives
      the time in 1/50 of a second Xi-Paint should waitbefore the
      next action can be star ted.

@endnode


@node k20p3 "Parameter-Tables"
@toc "contents"


 @{b}20.3      Parameter-Tables @{ub}


The following tables give the values for individual operations stated
inthe AREXX chapter.  They are not necessary, however, during
normaloperation of Xi-Paint.

  @{" 20.3.1  Color Modes " link "k20p3p1"}

@endnode


@node k20p3p1 "Color Modes"
@toc "contents"


 @{b}20.3.1    Color Modes @{ub}


The following table lists the different color modes with their accor
dingvalues. They have to be stated with almost every drawing tool,
since they define the drawing mode.

	_______________________________
	|  Colormode        |  Value  |
	-------------------------------
	|  Solid            |  1      |
	|  Background       |  2      |
	|  Gradient         |  3      |
	|  Cycle            |  4      |
	|  invers           |  5      |
	|  Smooth           |  6      |
	|  Smear            |  7      |
	|  Tear             |  8      |
	|  Huechange        |  9      |
	|  Brightnesschange | 10      |
	|  Saturationchange | 11      |
	|  As-It-is         | 12      |
	|  Darken           | 13      |
	|  Brighten         | 14      |
	|  Saturation+      | 15      |
	|  Saturation-      | 16      |
	|  Move Hue         | 17      |
	|  Contrast+        | 18      |
	|  Contrast-        | 19      |
	-------------------------------

@endnode




@node k21 "Chapter  21"
@toc "contents"


 @{b}@{fg highlight}Chapter  21 @{ub}@{fg text}


 @{b}VLab @{ub}


This chapter gives you some characteristics of the implementation
of thereal time video digitizer from MacroSystem.You can only call
up the VLab menu if the version of the VLab library is atleast
release 7 or higher.Since Xi-Paint does not use all the features of
VLab, some adjustmentscan only be performed via special VLab
soft ware.  To do so start the VLabsoftware before Xi-Paint and
adjust the desired parameters.  Afterwardclose VLab and start -
Paint. The adjustments made to the VLab willbe maintained. In
future versions of Xi-Paint the digitizer will be better implemented.

@endnode




@node k22 "Chapter  22"
@toc "contents"


 @{b}@{fg highlight}Chapter  22 @{ub}@{fg text}


 @{b}Load- and Save-Functions @{ub}


In an effort to provide as much functionality as possible Xi-Paint
supports several graphic formats, each of them having advantages
and disadvatages.  These formats for loading and saving images
and brushes are depending on the version of the multipic.library,
for now there listed be low:


    o IFF-DEEP

    o IFF-24Bit

    o IFF-8Bit

    o Amiga-IFF (also HAM)

    o PPM

    o JPEG

    o Xi-Paint-Format (old)

    o IFF-YUV


Save:

    o IFF-24Bit

    o PPM

    o BMP

    o IFF DEEP


The following is a description of the individual formats:


IFF-24Bit:    Although a bitmap technology for 24 bit pictures is-
      not particularly useful, this format still represents a kindof
      standard.  It is supported by most programs running with
      24Bit. Itrepresents an expansion of the Amiga IFF Standard
      to more bit planes. Italso compresses, but as well as the JPEG
      Algorithym. Unfortunately the bitplane concept causes a re-
      latively slow loading since thecolor value of each pixel has to
      be retrieved from the different pictureplanes.


IFF-8Bit:     For pictures containing only shades of grey a color-
      depth of 8 Bit is sufficient.  Such pictures often occur with
      DTP applications, when no color is required. Xi-Paint main-
      tains thepictures according to their palette, i. e. color pictu-
      res canalso be loaded with up to 256 colors. When saving you
      can choose in thesystem menu which of the 3 color planes you
      want to save as 8 Bit.  Thepicture's palette is then a palette
      of grey shades.


Amiga-IFF:      In order for you to use your old pictures created with
      DPaint Xi-Paint is able to load all Amiga formats including
      HAM and Extrahalfbright. Using AREXX you can determine
      with 'loadalign' and'loadaspect' how this is done. 'loadaspect'
      can be set to 1 and thenadapts the pixel ratio of the Amiga
      resolution to the display buffer.'loadalign' aligns the picture
      either to the left or the right side oradjusts the Amiga picture
      to the size of the displaybuffer. Further information on these
      commands is supplied in the AREXX chapter of thismanual.


PPM:     This originates from UNIX. It was implemented for impor-
      ting pictures of other work stations.


JPEG:     The  JPEG  format  is  standardized  as  well.   It  is  not
      a problemto transfer JPEG pictures from other computers.
      Anotheradvantage of the JPEG formats is the small size of
      a picture on the harddisk. Picture compression is performed
      according to a specific algorithm,which, unfortuna tely, does
      not work without losses.  In the system menu youcan choose
      the quality of the image to be saved in JPEG format.  The
      value100 results in almost no losses, whereas a picture save
      with the value 1 iscompletely unrecognizable. The smaller the
      value the smaller the file onthe hard disk. You have to try to
      find the appropriate compression degreefor your application.
      If pictures are loaded which have been extremely compressed
      it is advisable to use smoothing (also available in the system
      menu).  In contrast to the other formats loading and saving
      of highlycompressed pictures takes a long time.  Since the
      uncompressed picture must be stored as an intermediate file,
      you must enter a path for this file inthe tool types.

@endnode




@node k23 "Chapter  23"
@toc "contents"


 @{b}@{fg highlight}Chapter  23 @{ub}@{fg text}


 @{b}The  Future @{ub}


The next version of Xi-Paint will have animation-features, an built
in raytracer, more and enhanced brush-manipulation and and and

	 @{" Figure: Ice-Cream " system "Run >NIL: <NIL: Display bilder/73.eis"}

	 @{" Figure: Ring " system "Run >NIL: <NIL: Display bilder/74.Ring"}

@endnode




@node k24 "Chapter  24"
@toc "contents"


 @{b}@{fg highlight}Chapter  24 @{ub}@{fg text}


 @{b}Copyrights @{ub}


Copyright (c) 1994


Software: Herbert Beilschmidt & Thomas Dorn

Translation: Tamara Trenkler & Thomas Dorn

Manual: Hartwig Tauber

Titlegraphics: Rolf Tingler

Graphics: Peter Wlcek and Tamara Trenkler


DPaint is a Trademark by Electronic Arts
Compugraphic and AGFA are copyright by AGFA
JPEG is copyright by the JPEG-Group
Amiga and AmigaDOS are copyright Commodore Inc.
The Art Department is copyright ASDG Inc.Retina and VLab are
Trademarks of MacroSystem.

@endnode

